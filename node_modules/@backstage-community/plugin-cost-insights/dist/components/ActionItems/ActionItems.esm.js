import React, { Fragment } from 'react';
import Avatar from '@material-ui/core/Avatar';
import Tooltip from '@material-ui/core/Tooltip';
import IconButton from '@material-ui/core/IconButton';
import Badge from '@material-ui/core/Badge';
import Box from '@material-ui/core/Box';
import Paper from '@material-ui/core/Paper';
import Divider from '@material-ui/core/Divider';
import SnoozeIcon from '@material-ui/icons/AccessTime';
import AcceptIcon from '@material-ui/icons/Check';
import DismissIcon from '@material-ui/icons/Delete';
import { ActionItemCard } from './ActionItemCard.esm.js';
import { AlertStatus } from '../../types/Alert.esm.js';
import '../../hooks/useConfig.esm.js';
import '../../hooks/useCurrency.esm.js';
import '../../hooks/useFilters.esm.js';
import '../../hooks/useGroups.esm.js';
import '../../hooks/useLoading.esm.js';
import { useScroll, ScrollType } from '../../hooks/useScroll.esm.js';
import '../../hooks/useLastCompleteBillingDate.esm.js';
import { useActionItemCardStyles } from '../../utils/styles.esm.js';

const AlertStatusButton = ({
  title,
  amount,
  icon,
  onClick,
  ...buttonProps
}) => /* @__PURE__ */ React.createElement(Tooltip, { title }, /* @__PURE__ */ React.createElement(
  IconButton,
  {
    onClick,
    role: "button",
    "aria-hidden": false,
    ...buttonProps
  },
  /* @__PURE__ */ React.createElement(Badge, { badgeContent: amount }, icon)
));
const ActionItems = ({
  active,
  snoozed,
  accepted,
  dismissed
}) => {
  const classes = useActionItemCardStyles();
  const [, setScroll] = useScroll();
  const isSnoozedButtonDisplayed = !!snoozed.length;
  const isAcceptedButtonDisplayed = !!accepted.length;
  const isDismissedButtonDisplayed = !!dismissed.length;
  const isStatusButtonGroupDisplayed = !!active.length;
  const onStatusButtonClick = () => setScroll(ScrollType.AlertSummary);
  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(Paper, null, active.map((alert, index) => /* @__PURE__ */ React.createElement(Fragment, { key: `alert-${index}` }, /* @__PURE__ */ React.createElement(
    ActionItemCard,
    {
      alert,
      number: index + 1,
      avatar: /* @__PURE__ */ React.createElement(Avatar, { className: classes.avatar }, index + 1)
    }
  ), index < active.length - 1 && /* @__PURE__ */ React.createElement(Divider, null)))), isStatusButtonGroupDisplayed && /* @__PURE__ */ React.createElement(Box, { display: "flex", justifyContent: "flex-end", mt: 2 }, isAcceptedButtonDisplayed && /* @__PURE__ */ React.createElement(
    AlertStatusButton,
    {
      title: "Accepted",
      "aria-label": AlertStatus.Accepted,
      icon: /* @__PURE__ */ React.createElement(AcceptIcon, null),
      amount: accepted.length,
      onClick: onStatusButtonClick
    }
  ), isSnoozedButtonDisplayed && /* @__PURE__ */ React.createElement(
    AlertStatusButton,
    {
      title: "Snoozed",
      "aria-label": AlertStatus.Snoozed,
      amount: snoozed.length,
      icon: /* @__PURE__ */ React.createElement(SnoozeIcon, null),
      onClick: onStatusButtonClick
    }
  ), isDismissedButtonDisplayed && /* @__PURE__ */ React.createElement(
    AlertStatusButton,
    {
      title: "Dismissed",
      "aria-label": AlertStatus.Dismissed,
      icon: /* @__PURE__ */ React.createElement(DismissIcon, null),
      amount: dismissed.length,
      onClick: onStatusButtonClick
    }
  )));
};

export { ActionItems };
//# sourceMappingURL=ActionItems.esm.js.map
