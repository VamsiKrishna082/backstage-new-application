{"version":3,"file":"AlertInsights.esm.js","sources":["../../../src/components/AlertInsights/AlertInsights.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport pluralize from 'pluralize';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { default as MuiAlert } from '@material-ui/lab/Alert';\nimport { AlertDialog } from './AlertDialog';\nimport { AlertStatusSummary } from './AlertStatusSummary';\nimport { AlertStatusSummaryButton } from './AlertStatusSummaryButton';\nimport { AlertInsightsHeader } from './AlertInsightsHeader';\nimport { AlertInsightsSection } from './AlertInsightsSection';\nimport {\n  useScroll,\n  useLoading,\n  ScrollType,\n  MapLoadingToProps,\n} from '../../hooks';\nimport { DefaultLoadingAction } from '../../utils/loading';\nimport { Alert, AlertOptions, AlertStatus } from '../../types';\nimport { Maybe } from '@backstage-community/plugin-cost-insights-common';\nimport {\n  isStatusSnoozed,\n  isStatusAccepted,\n  isStatusDismissed,\n  sumOfAllAlerts,\n} from '../../utils/alerts';\nimport { ScrollAnchor } from '../../utils/scroll';\n\ntype MapLoadingtoAlerts = (isLoading: boolean) => void;\n\nconst mapLoadingToAlerts: MapLoadingToProps<MapLoadingtoAlerts> =\n  ({ dispatch }) =>\n  (isLoading: boolean) =>\n    dispatch({ [DefaultLoadingAction.CostInsightsAlerts]: isLoading });\n\ntype AlertInsightsProps = {\n  group: string;\n  active: Alert[];\n  snoozed: Alert[];\n  accepted: Alert[];\n  dismissed: Alert[];\n  onChange: (alerts: Alert[]) => void;\n};\n\nexport const AlertInsights = ({\n  group,\n  active,\n  snoozed,\n  accepted,\n  dismissed,\n  onChange,\n}: AlertInsightsProps) => {\n  const [scroll] = useScroll();\n  const [alert, setAlert] = useState<Maybe<Alert>>(null);\n  const dispatchLoadingAlerts = useLoading(mapLoadingToAlerts);\n  const [status, setStatus] = useState<Maybe<AlertStatus>>(null);\n  // Allow users to pass null values for data.\n  const [data, setData] = useState<Maybe<any>>(undefined);\n  const [error, setError] = useState<Maybe<Error>>(null);\n  const [isDialogOpen, setDialogOpen] = useState(false);\n  const [isSummaryOpen, setSummaryOpen] = useState(false);\n  const [isSnackbarOpen, setSnackbarOpen] = useState(false);\n\n  useEffect(() => {\n    async function callAlertHook(\n      options: AlertOptions,\n      callback: (options: AlertOptions) => Promise<Alert[]>,\n    ) {\n      setAlert(null);\n      setStatus(null);\n      setData(undefined);\n      setDialogOpen(false);\n      dispatchLoadingAlerts(true);\n      try {\n        const alerts: Alert[] = await callback(options);\n        onChange(alerts);\n      } catch (e) {\n        setError(e);\n      } finally {\n        dispatchLoadingAlerts(false);\n      }\n    }\n\n    const options: AlertOptions = { data, group };\n    const onSnoozed = alert?.onSnoozed?.bind(alert);\n    const onAccepted = alert?.onAccepted?.bind(alert);\n    const onDismissed = alert?.onDismissed?.bind(alert);\n\n    if (data !== undefined) {\n      if (isStatusSnoozed(status) && onSnoozed) {\n        callAlertHook(options, onSnoozed);\n      } else if (isStatusAccepted(status) && onAccepted) {\n        callAlertHook(options, onAccepted);\n      } else if (isStatusDismissed(status) && onDismissed) {\n        callAlertHook(options, onDismissed);\n      }\n    }\n  }, [group, data, alert, status, onChange, dispatchLoadingAlerts]);\n\n  useEffect(() => {\n    if (scroll === ScrollType.AlertSummary) {\n      setSummaryOpen(true);\n    }\n  }, [scroll]);\n\n  useEffect(() => {\n    setDialogOpen(!!status);\n  }, [status]);\n\n  useEffect(() => {\n    setSnackbarOpen(!!error);\n  }, [error]);\n\n  function onSnooze(alertToSnooze: Alert) {\n    setAlert(alertToSnooze);\n    setStatus(AlertStatus.Snoozed);\n  }\n\n  function onAccept(alertToAccept: Alert) {\n    setAlert(alertToAccept);\n    setStatus(AlertStatus.Accepted);\n  }\n\n  function onDismiss(alertToDismiss: Alert) {\n    setAlert(alertToDismiss);\n    setStatus(AlertStatus.Dismissed);\n  }\n\n  function onSnackbarClose() {\n    setError(null);\n  }\n\n  function onDialogClose() {\n    setAlert(null);\n    setStatus(null);\n  }\n\n  function onDialogFormSubmit(formData: any) {\n    setData(formData);\n  }\n\n  function onSummaryButtonClick() {\n    setSummaryOpen(prevOpen => !prevOpen);\n  }\n\n  const total = [accepted, snoozed, dismissed].reduce(sumOfAllAlerts, 0);\n\n  const isAlertStatusSummaryDisplayed = !!total;\n  const isAlertInsightSectionDisplayed = !!active.length;\n\n  return (\n    <Grid container direction=\"column\" spacing={2}>\n      <Grid item>\n        <AlertInsightsHeader\n          title=\"Your team's action items\"\n          subtitle={\n            isAlertInsightSectionDisplayed\n              ? 'This section outlines suggested action items your team can address to improve cloud costs.'\n              : \"All of your team's action items are hidden. Maybe it's time to give them another look?\"\n          }\n        />\n      </Grid>\n      {isAlertInsightSectionDisplayed && (\n        <Grid item container direction=\"column\" spacing={4}>\n          {active.map((activeAlert, index) => (\n            <Grid item key={`alert-insights-section-${index}`}>\n              <AlertInsightsSection\n                alert={activeAlert}\n                number={index + 1}\n                onSnooze={onSnooze}\n                onAccept={onAccept}\n                onDismiss={onDismiss}\n              />\n            </Grid>\n          ))}\n        </Grid>\n      )}\n      {isAlertStatusSummaryDisplayed && (\n        <Grid item>\n          <Box position=\"relative\" display=\"flex\" justifyContent=\"flex-end\">\n            <ScrollAnchor id={ScrollType.AlertSummary} />\n            <AlertStatusSummaryButton onClick={onSummaryButtonClick}>\n              {pluralize('Hidden Action Item', total)}\n            </AlertStatusSummaryButton>\n          </Box>\n          <AlertStatusSummary\n            open={isSummaryOpen}\n            snoozed={snoozed}\n            accepted={accepted}\n            dismissed={dismissed}\n          />\n        </Grid>\n      )}\n      <AlertDialog\n        group={group}\n        open={isDialogOpen}\n        alert={alert}\n        status={status}\n        onClose={onDialogClose}\n        onSubmit={onDialogFormSubmit}\n      />\n      <Snackbar\n        open={isSnackbarOpen}\n        autoHideDuration={6_000}\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        onClose={onSnackbarClose}\n      >\n        <MuiAlert onClose={onSnackbarClose} severity=\"error\">\n          {error?.message}\n        </MuiAlert>\n      </Snackbar>\n    </Grid>\n  );\n};\n"],"names":["options","MuiAlert"],"mappings":"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"}