import React, { Fragment } from 'react';
import Avatar from '@material-ui/core/Avatar';
import Box from '@material-ui/core/Box';
import Collapse from '@material-ui/core/Collapse';
import Divider from '@material-ui/core/Divider';
import Tooltip from '@material-ui/core/Tooltip';
import AcceptIcon from '@material-ui/icons/Check';
import DismissIcon from '@material-ui/icons/Delete';
import SnoozeIcon from '@material-ui/icons/AccessTime';
import '@material-ui/core/IconButton';
import '@material-ui/core/Badge';
import '@material-ui/core/Paper';
import { ActionItemCard } from '../ActionItems/ActionItemCard.esm.js';
import { AlertStatus } from '../../types/Alert.esm.js';
import '../../hooks/useConfig.esm.js';
import '../../hooks/useCurrency.esm.js';
import '../../hooks/useFilters.esm.js';
import '../../hooks/useGroups.esm.js';
import '../../hooks/useLoading.esm.js';
import '../../hooks/useScroll.esm.js';
import '../../hooks/useLastCompleteBillingDate.esm.js';
import { useActionItemCardStyles } from '../../utils/styles.esm.js';

const AlertGroup = ({ alerts, status, title, icon }) => {
  const classes = useActionItemCardStyles();
  return /* @__PURE__ */ React.createElement(Box, { p: 1 }, alerts.map((alert, index) => /* @__PURE__ */ React.createElement(Fragment, { key: `alert-${status}-${index}` }, /* @__PURE__ */ React.createElement(
    ActionItemCard,
    {
      disableScroll: true,
      alert,
      avatar: /* @__PURE__ */ React.createElement(Tooltip, { title }, /* @__PURE__ */ React.createElement(Avatar, { className: classes.avatar }, icon))
    }
  ), index < alerts.length - 1 && /* @__PURE__ */ React.createElement(Divider, null))));
};
const AlertStatusSummary = ({
  open,
  snoozed,
  accepted,
  dismissed
}) => {
  const isSnoozedListDisplayed = !!snoozed.length;
  const isAcceptedListDisplayed = !!accepted.length;
  const isDismissedListDisplayed = !!dismissed.length;
  return /* @__PURE__ */ React.createElement(Collapse, { in: open }, isAcceptedListDisplayed && /* @__PURE__ */ React.createElement(
    AlertGroup,
    {
      title: "Accepted",
      alerts: accepted,
      status: AlertStatus.Accepted,
      icon: /* @__PURE__ */ React.createElement(
        AcceptIcon,
        {
          role: "img",
          "aria-hidden": false,
          "aria-label": AlertStatus.Accepted
        }
      )
    }
  ), isSnoozedListDisplayed && /* @__PURE__ */ React.createElement(
    AlertGroup,
    {
      title: "Snoozed",
      alerts: snoozed,
      status: AlertStatus.Snoozed,
      icon: /* @__PURE__ */ React.createElement(
        SnoozeIcon,
        {
          role: "img",
          "aria-hidden": false,
          "aria-label": AlertStatus.Snoozed
        }
      )
    }
  ), isDismissedListDisplayed && /* @__PURE__ */ React.createElement(
    AlertGroup,
    {
      title: "Dismissed",
      alerts: dismissed,
      status: AlertStatus.Dismissed,
      icon: /* @__PURE__ */ React.createElement(
        DismissIcon,
        {
          role: "img",
          "aria-hidden": false,
          "aria-label": AlertStatus.Dismissed
        }
      )
    }
  ));
};

export { AlertStatusSummary };
//# sourceMappingURL=AlertStatusSummary.esm.js.map
