import React, { useState, useEffect } from 'react';
import Paper from '@material-ui/core/Paper';
import Slide from '@material-ui/core/Slide';
import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';
import ChevronRightIcon from '@material-ui/icons/ChevronRight';
import { BarChartStepperButton } from './BarChartStepperButton.esm.js';
import { BarChartSteps } from './BarChartSteps.esm.js';
import { useBarChartStepperStyles } from '../../utils/styles.esm.js';

const BarChartStepper = ({
  steps,
  disableScroll,
  onChange
}) => {
  const classes = useBarChartStepperStyles();
  const [activeStep, setActiveStep] = useState(0);
  const diff = steps % 10;
  const stepsRemaining = steps - activeStep <= diff ? diff : steps;
  const displayedStep = activeStep % 10;
  useEffect(() => {
    onChange(activeStep);
  }, [activeStep, onChange]);
  const handleNext = () => {
    setActiveStep((prevStep) => prevStep + 1);
  };
  const handleBack = () => {
    setActiveStep((prevStep) => prevStep - 1);
  };
  const handleClick = (index) => {
    setActiveStep((prevStep) => {
      const offset = index - prevStep % 10;
      return prevStep + offset;
    });
  };
  return /* @__PURE__ */ React.createElement(
    Paper,
    {
      "data-testid": "bar-chart-stepper",
      square: true,
      elevation: 0,
      className: classes.paper
    },
    /* @__PURE__ */ React.createElement(
      Slide,
      {
        direction: "right",
        in: !disableScroll && activeStep !== 0,
        mountOnEnter: true,
        unmountOnExit: true
      },
      /* @__PURE__ */ React.createElement(
        BarChartStepperButton,
        {
          name: "back",
          className: classes.backButton,
          onClick: handleBack
        },
        /* @__PURE__ */ React.createElement(ChevronLeftIcon, null)
      )
    ),
    /* @__PURE__ */ React.createElement(
      BarChartSteps,
      {
        steps: Math.min(10, stepsRemaining),
        activeStep: displayedStep,
        onClick: handleClick
      }
    ),
    /* @__PURE__ */ React.createElement(
      Slide,
      {
        direction: "left",
        in: !disableScroll && activeStep < steps - 1,
        mountOnEnter: true,
        unmountOnExit: true
      },
      /* @__PURE__ */ React.createElement(
        BarChartStepperButton,
        {
          name: "next",
          className: classes.nextButton,
          onClick: handleNext
        },
        /* @__PURE__ */ React.createElement(ChevronRightIcon, null)
      )
    )
  );
};

export { BarChartStepper };
//# sourceMappingURL=BarChartStepper.esm.js.map
