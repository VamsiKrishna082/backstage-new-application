{"version":3,"file":"BarChartStepper.esm.js","sources":["../../../src/components/BarChart/BarChartStepper.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Slide from '@material-ui/core/Slide';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { BarChartStepperButton } from './BarChartStepperButton';\nimport { BarChartSteps } from './BarChartSteps';\nimport { useBarChartStepperStyles } from '../../utils/styles';\n\ntype BarChartStepperProps = {\n  disableScroll: boolean;\n  steps: number;\n  onChange: (activeStep: number) => void;\n};\n\nexport const BarChartStepper = ({\n  steps,\n  disableScroll,\n  onChange,\n}: BarChartStepperProps) => {\n  const classes = useBarChartStepperStyles();\n  const [activeStep, setActiveStep] = useState(0);\n\n  /*\n   * This calc determines how many active steps to display in the stepper.\n   * If the chart is displaying a large amount of resources,\n   * the total dots are truncated to 10. As the user clicks forward,\n   * eventually, there might be resources \"left over\" in excess of the ten dot limit.\n   * Once the user has reached that threshold, the difference should appear constant\n   * as the user clicks through the remaining resources and no extra dots should be displayed.\n   */\n\n  const diff = steps % 10;\n  const stepsRemaining = steps - activeStep <= diff ? diff : steps;\n  const displayedStep = activeStep % 10;\n\n  useEffect(() => {\n    onChange(activeStep);\n  }, [activeStep, onChange]);\n\n  const handleNext = () => {\n    setActiveStep(prevStep => prevStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevStep => prevStep - 1);\n  };\n\n  const handleClick = (index: number) => {\n    setActiveStep(prevStep => {\n      const offset = index - (prevStep % 10);\n      return prevStep + offset;\n    });\n  };\n\n  return (\n    <Paper\n      data-testid=\"bar-chart-stepper\"\n      square\n      elevation={0}\n      className={classes.paper}\n    >\n      <Slide\n        direction=\"right\"\n        in={!disableScroll && activeStep !== 0}\n        mountOnEnter\n        unmountOnExit\n      >\n        <BarChartStepperButton\n          name=\"back\"\n          className={classes.backButton}\n          onClick={handleBack}\n        >\n          <ChevronLeftIcon />\n        </BarChartStepperButton>\n      </Slide>\n      <BarChartSteps\n        steps={Math.min(10, stepsRemaining)}\n        activeStep={displayedStep}\n        onClick={handleClick}\n      />\n      <Slide\n        direction=\"left\"\n        in={!disableScroll && activeStep < steps - 1}\n        mountOnEnter\n        unmountOnExit\n      >\n        <BarChartStepperButton\n          name=\"next\"\n          className={classes.nextButton}\n          onClick={handleNext}\n        >\n          <ChevronRightIcon />\n        </BarChartStepperButton>\n      </Slide>\n    </Paper>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;;AA+BO,MAAM,kBAAkB,CAAC;AAAA,EAC9B,KAAA;AAAA,EACA,aAAA;AAAA,EACA;AACF,CAA4B,KAAA;AAC1B,EAAA,MAAM,UAAU,wBAAyB,EAAA;AACzC,EAAA,MAAM,CAAC,UAAA,EAAY,aAAa,CAAA,GAAI,SAAS,CAAC,CAAA;AAW9C,EAAA,MAAM,OAAO,KAAQ,GAAA,EAAA;AACrB,EAAA,MAAM,cAAiB,GAAA,KAAA,GAAQ,UAAc,IAAA,IAAA,GAAO,IAAO,GAAA,KAAA;AAC3D,EAAA,MAAM,gBAAgB,UAAa,GAAA,EAAA;AAEnC,EAAA,SAAA,CAAU,MAAM;AACd,IAAA,QAAA,CAAS,UAAU,CAAA;AAAA,GAClB,EAAA,CAAC,UAAY,EAAA,QAAQ,CAAC,CAAA;AAEzB,EAAA,MAAM,aAAa,MAAM;AACvB,IAAc,aAAA,CAAA,CAAA,QAAA,KAAY,WAAW,CAAC,CAAA;AAAA,GACxC;AAEA,EAAA,MAAM,aAAa,MAAM;AACvB,IAAc,aAAA,CAAA,CAAA,QAAA,KAAY,WAAW,CAAC,CAAA;AAAA,GACxC;AAEA,EAAM,MAAA,WAAA,GAAc,CAAC,KAAkB,KAAA;AACrC,IAAA,aAAA,CAAc,CAAY,QAAA,KAAA;AACxB,MAAM,MAAA,MAAA,GAAS,QAAS,QAAW,GAAA,EAAA;AACnC,MAAA,OAAO,QAAW,GAAA,MAAA;AAAA,KACnB,CAAA;AAAA,GACH;AAEA,EACE,uBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,KAAA;AAAA,IAAA;AAAA,MACC,aAAY,EAAA,mBAAA;AAAA,MACZ,MAAM,EAAA,IAAA;AAAA,MACN,SAAW,EAAA,CAAA;AAAA,MACX,WAAW,OAAQ,CAAA;AAAA,KAAA;AAAA,oBAEnB,KAAA,CAAA,aAAA;AAAA,MAAC,KAAA;AAAA,MAAA;AAAA,QACC,SAAU,EAAA,OAAA;AAAA,QACV,EAAA,EAAI,CAAC,aAAA,IAAiB,UAAe,KAAA,CAAA;AAAA,QACrC,YAAY,EAAA,IAAA;AAAA,QACZ,aAAa,EAAA;AAAA,OAAA;AAAA,sBAEb,KAAA,CAAA,aAAA;AAAA,QAAC,qBAAA;AAAA,QAAA;AAAA,UACC,IAAK,EAAA,MAAA;AAAA,UACL,WAAW,OAAQ,CAAA,UAAA;AAAA,UACnB,OAAS,EAAA;AAAA,SAAA;AAAA,4CAER,eAAgB,EAAA,IAAA;AAAA;AACnB,KACF;AAAA,oBACA,KAAA,CAAA,aAAA;AAAA,MAAC,aAAA;AAAA,MAAA;AAAA,QACC,KAAO,EAAA,IAAA,CAAK,GAAI,CAAA,EAAA,EAAI,cAAc,CAAA;AAAA,QAClC,UAAY,EAAA,aAAA;AAAA,QACZ,OAAS,EAAA;AAAA;AAAA,KACX;AAAA,oBACA,KAAA,CAAA,aAAA;AAAA,MAAC,KAAA;AAAA,MAAA;AAAA,QACC,SAAU,EAAA,MAAA;AAAA,QACV,EAAI,EAAA,CAAC,aAAiB,IAAA,UAAA,GAAa,KAAQ,GAAA,CAAA;AAAA,QAC3C,YAAY,EAAA,IAAA;AAAA,QACZ,aAAa,EAAA;AAAA,OAAA;AAAA,sBAEb,KAAA,CAAA,aAAA;AAAA,QAAC,qBAAA;AAAA,QAAA;AAAA,UACC,IAAK,EAAA,MAAA;AAAA,UACL,WAAW,OAAQ,CAAA,UAAA;AAAA,UACnB,OAAS,EAAA;AAAA,SAAA;AAAA,4CAER,gBAAiB,EAAA,IAAA;AAAA;AACpB;AACF,GACF;AAEJ;;;;"}