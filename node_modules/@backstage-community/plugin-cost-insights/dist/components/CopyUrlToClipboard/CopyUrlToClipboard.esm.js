import React, { useState, useEffect } from 'react';
import { useLocation } from 'react-router-dom';
import useCopyToClipboard from 'react-use/esm/useCopyToClipboard';
import Tooltip from '@material-ui/core/Tooltip';
import IconButton from '@material-ui/core/IconButton';
import AssignmentOutlinedIcon from '@material-ui/icons/AssignmentOutlined';
import AssignmentTurnedInOutlinedIcon from '@material-ui/icons/AssignmentTurnedInOutlined';
import SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';

const ClipboardMessage = {
  default: "Copy URL to clipboard",
  success: "Copied!",
  error: "Couldn't copy to clipboard"
};
const CopyUrlToClipboard = () => {
  const location = useLocation();
  const [state, copyToClipboard] = useCopyToClipboard();
  const [copied, setCopied] = useState(false);
  const origin = window.location.origin;
  const pathname = location.pathname;
  const search = location.search;
  const url = `${origin}${pathname}${search}`;
  useEffect(() => {
    if (state.error) {
      setCopied(false);
    } else if (state.value) {
      setCopied(true);
      setTimeout(setCopied, 1500, false);
    }
  }, [state]);
  let text = ClipboardMessage.default;
  let Icon = AssignmentOutlinedIcon;
  if (state.error) {
    text = ClipboardMessage.error;
    Icon = SentimentVeryDissatisfiedIcon;
  } else if (copied) {
    text = ClipboardMessage.success;
    Icon = AssignmentTurnedInOutlinedIcon;
  }
  return /* @__PURE__ */ React.createElement(Tooltip, { title: text, arrow: true }, /* @__PURE__ */ React.createElement(IconButton, { onClick: () => copyToClipboard(url) }, /* @__PURE__ */ React.createElement(Icon, null)));
};

export { CopyUrlToClipboard };
//# sourceMappingURL=CopyUrlToClipboard.esm.js.map
