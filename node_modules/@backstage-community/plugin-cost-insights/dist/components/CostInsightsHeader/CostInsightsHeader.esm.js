import React from 'react';
import Typography from '@material-ui/core/Typography';
import useAsync from 'react-use/esm/useAsync';
import { useCostInsightsStyles } from '../../utils/styles.esm.js';
import { useApi, identityApiRef } from '@backstage/core-plugin-api';

function useDisplayName() {
  const identityApi = useApi(identityApiRef);
  const state = useAsync(() => identityApi.getProfileInfo(), [identityApi]);
  return state.loading ? "" : state.value?.displayName || "Mysterious Stranger";
}
const CostInsightsHeaderNoData = ({
  groupId,
  groups
}) => {
  const displayName = useDisplayName();
  const classes = useCostInsightsStyles();
  const hasMultipleGroups = groups.length > 1;
  const ownerName = groups.find(({ id }) => id === groupId)?.name ?? groupId;
  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(Typography, { variant: "h4", align: "center", gutterBottom: true }, /* @__PURE__ */ React.createElement(Typography, { component: "span", role: "img", "aria-label": "flushed-face" }, "\u{1F633}"), " ", "Well this is awkward"), /* @__PURE__ */ React.createElement(Typography, { className: classes.h6Subtle, align: "center", gutterBottom: true }, /* @__PURE__ */ React.createElement("b", null, "Hey, ", displayName, "!"), " ", /* @__PURE__ */ React.createElement("b", null, ownerName), " doesn't seem to have any cloud costs."), hasMultipleGroups && /* @__PURE__ */ React.createElement(Typography, { align: "center", gutterBottom: true }, "Maybe we picked the wrong team, choose another from the menu above?"));
};
const CostInsightsHeaderAlerts = ({
  groupId,
  groups,
  alerts
}) => {
  const displayName = useDisplayName();
  const classes = useCostInsightsStyles();
  const ownerName = groups.find(({ id }) => id === groupId)?.name ?? groupId;
  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(Typography, { variant: "h4", align: "center", gutterBottom: true }, /* @__PURE__ */ React.createElement(Typography, { component: "span", role: "img", "aria-label": "magnifying-glass" }, "\u{1F50E}"), " ", "You have ", alerts, " thing", alerts > 1 && "s", " to look into"), /* @__PURE__ */ React.createElement(Typography, { className: classes.h6Subtle, align: "center", gutterBottom: true }, /* @__PURE__ */ React.createElement("b", null, "Hey, ", displayName, "!"), " We've identified", " ", alerts > 1 ? "a few things " : "one thing ", /* @__PURE__ */ React.createElement("b", null, ownerName), " should look into next."));
};
const CostInsightsHeaderNoAlerts = ({
  groupId,
  groups
}) => {
  const displayName = useDisplayName();
  const classes = useCostInsightsStyles();
  const ownerName = groups.find(({ id }) => id === groupId)?.name ?? groupId;
  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(Typography, { variant: "h4", gutterBottom: true, align: "center" }, /* @__PURE__ */ React.createElement(Typography, { component: "span", role: "img", "aria-label": "thumbs-up" }, "\u{1F44D}"), " ", "Your team is doing great"), /* @__PURE__ */ React.createElement(Typography, { className: classes.h6Subtle, align: "center", gutterBottom: true }, /* @__PURE__ */ React.createElement("b", null, "Hey, ", displayName, "!"), " ", /* @__PURE__ */ React.createElement("b", null, ownerName), " is doing well. No major changes this month."));
};
const CostInsightsHeaderNoGroups = () => {
  const displayName = useDisplayName();
  const classes = useCostInsightsStyles();
  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(Typography, { variant: "h4", align: "center", gutterBottom: true }, /* @__PURE__ */ React.createElement(Typography, { component: "span", role: "img", "aria-label": "flushed-face" }, "\u{1F633}"), " ", "Well this is awkward"), /* @__PURE__ */ React.createElement(Typography, { className: classes.h6Subtle, align: "center", gutterBottom: true }, /* @__PURE__ */ React.createElement("b", null, "Hey, ", displayName, "!"), " It doesn't look like you belong to any teams."));
};
const CostInsightsHeader = (props) => {
  if (!props.hasCostData) {
    return /* @__PURE__ */ React.createElement(CostInsightsHeaderNoData, { ...props });
  }
  if (props.alerts) {
    return /* @__PURE__ */ React.createElement(CostInsightsHeaderAlerts, { ...props });
  }
  return /* @__PURE__ */ React.createElement(CostInsightsHeaderNoAlerts, { ...props });
};

export { CostInsightsHeader, CostInsightsHeaderNoGroups };
//# sourceMappingURL=CostInsightsHeader.esm.js.map
