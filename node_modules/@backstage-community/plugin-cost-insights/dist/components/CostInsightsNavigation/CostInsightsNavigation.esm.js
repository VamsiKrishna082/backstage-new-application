import React, { useState, useEffect } from 'react';
import Collapse from '@material-ui/core/Collapse';
import MenuList from '@material-ui/core/MenuList';
import MenuItem from '@material-ui/core/MenuItem';
import ListItemIcon from '@material-ui/core/ListItemIcon';
import ListItemText from '@material-ui/core/ListItemText';
import Typography from '@material-ui/core/Typography';
import Badge from '@material-ui/core/Badge';
import { useNavigationStyles } from '../../utils/styles.esm.js';
import { useConfig } from '../../hooks/useConfig.esm.js';
import '../../hooks/useCurrency.esm.js';
import '../../hooks/useFilters.esm.js';
import '../../hooks/useGroups.esm.js';
import '../../hooks/useLoading.esm.js';
import { useScroll } from '../../hooks/useScroll.esm.js';
import '../../hooks/useLastCompleteBillingDate.esm.js';
import { findAlways } from '../../utils/assert.esm.js';
import { DefaultNavigation, getDefaultNavigationItems } from '../../utils/navigation.esm.js';

const NavigationMenuItem = ({ navigation, icon, title }) => {
  const classes = useNavigationStyles();
  const [, setScroll] = useScroll();
  return /* @__PURE__ */ React.createElement(
    MenuItem,
    {
      "data-testid": `menu-item-${navigation}`,
      className: classes.menuItem,
      onClick: () => setScroll(navigation)
    },
    /* @__PURE__ */ React.createElement(ListItemIcon, { className: classes.listItemIcon }, icon),
    /* @__PURE__ */ React.createElement(
      ListItemText,
      {
        primary: /* @__PURE__ */ React.createElement(Typography, { className: classes.title }, title)
      }
    )
  );
};
const CostInsightsNavigation = React.memo(
  ({ alerts, products }) => {
    const classes = useNavigationStyles();
    const { icons } = useConfig();
    const [isOpen, setOpen] = useState(false);
    const defaultNavigationItems = getDefaultNavigationItems(alerts);
    const productNavigationItems = products?.map((product) => ({
      title: product.name,
      navigation: product.kind,
      icon: findAlways(icons, (i) => i.kind === product.kind).component
    })) ?? [];
    useEffect(
      function toggleProductMenuItems() {
        if (products?.length) {
          setOpen(true);
        } else {
          setOpen(false);
        }
      },
      [products]
    );
    return /* @__PURE__ */ React.createElement(MenuList, { className: classes.menuList }, defaultNavigationItems.map((item) => /* @__PURE__ */ React.createElement(
      NavigationMenuItem,
      {
        key: `navigation-menu-item-${item.navigation}`,
        navigation: item.navigation,
        title: item.title,
        icon: item.navigation === DefaultNavigation.AlertInsightsHeader ? /* @__PURE__ */ React.createElement(Badge, { badgeContent: alerts, color: "secondary" }, React.cloneElement(item.icon, {
          className: classes.navigationIcon
        })) : React.cloneElement(item.icon, {
          className: classes.navigationIcon
        })
      }
    )), /* @__PURE__ */ React.createElement(Collapse, { in: isOpen, timeout: 850 }, productNavigationItems.map((item) => /* @__PURE__ */ React.createElement(
      NavigationMenuItem,
      {
        key: `navigation-menu-item-${item.navigation}`,
        navigation: item.navigation,
        icon: React.cloneElement(item.icon, {
          className: classes.navigationIcon
        }),
        title: item.title
      }
    ))));
  }
);

export { CostInsightsNavigation };
//# sourceMappingURL=CostInsightsNavigation.esm.js.map
