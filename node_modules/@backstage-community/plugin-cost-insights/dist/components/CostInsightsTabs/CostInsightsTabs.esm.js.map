{"version":3,"file":"CostInsightsTabs.esm.js","sources":["../../../src/components/CostInsightsTabs/CostInsightsTabs.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useState } from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { mapLoadingToProps, mapFiltersToProps } from './selector';\nimport { Group } from '@backstage-community/plugin-cost-insights-common';\nimport { useFilters, useLoading } from '../../hooks';\nimport { useCostInsightsTabsStyles as useStyles } from '../../utils/styles';\n\nexport type CostInsightsTabsProps = {\n  groups: Group[];\n};\n\nexport const CostInsightsTabs = ({ groups }: CostInsightsTabsProps) => {\n  const classes = useStyles();\n  const [index] = useState(0); // index is fixed for now until other tabs are added\n  const [groupMenuEl, setGroupMenuEl] = useState<Element | null>(null);\n  const { group, setGroup } = useFilters(mapFiltersToProps);\n  const { loadingActions, dispatchReset } = useLoading(mapLoadingToProps);\n\n  const openGroupMenu = (e: any) => setGroupMenuEl(e.currentTarget as Element);\n\n  const closeGroupMenu = () => setGroupMenuEl(null);\n\n  const updateGroupFilterAndCloseMenu = (g: Group) => () => {\n    dispatchReset(loadingActions);\n    closeGroupMenu();\n    setGroup(g);\n  };\n\n  const renderTabLabel = () => (\n    <div className={classes.tabLabel}>\n      <Typography className={classes.tabLabelText} variant=\"overline\">\n        {`${groups.length} teams`}\n      </Typography>\n      <ExpandMoreIcon fontSize=\"small\" />\n    </div>\n  );\n\n  const hasAtLeastTwoGroups = groups.length >= 2;\n\n  if (!hasAtLeastTwoGroups) return null;\n\n  return (\n    <>\n      <Tabs\n        className={`cost-insights-tabs ${classes.tabs}`}\n        data-testid=\"cost-insights-tabs\"\n        classes={{ indicator: classes.indicator }}\n        value={index}\n      >\n        <Tab\n          className={classes.tab}\n          data-testid=\"cost-insights-groups-tab\"\n          key=\"cost-insights-groups-tab\"\n          label={renderTabLabel()}\n          onClick={openGroupMenu}\n          component=\"button\"\n        />\n      </Tabs>\n      <Menu\n        id=\"group-menu\"\n        data-testid=\"group-menu\"\n        className={classes.menu}\n        getContentAnchorEl={null}\n        anchorEl={groupMenuEl}\n        keepMounted\n        open={Boolean(groupMenuEl)}\n        onClose={closeGroupMenu}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n      >\n        {groups.map((g: Group) => (\n          <MenuItem\n            className={classes.menuItem}\n            classes={{ selected: classes.menuItemSelected }}\n            selected={g.id === group}\n            key={g.id}\n            data-testid={g.id}\n            onClick={updateGroupFilterAndCloseMenu(g)}\n          >\n            {g.name ?? g.id}\n          </MenuItem>\n        ))}\n      </Menu>\n    </>\n  );\n};\n"],"names":["useStyles"],"mappings":"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"}