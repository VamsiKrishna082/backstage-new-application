{"version":3,"file":"LabelDataflowInstructionsPage.esm.js","sources":["../../../src/components/LabelDataflowInstructionsPage/LabelDataflowInstructionsPage.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { AlertInstructionsLayout } from '../AlertInstructionsLayout';\nimport { CodeSnippet, Link } from '@backstage/core-components';\n\nexport const LabelDataflowInstructionsPage = () => {\n  return (\n    <AlertInstructionsLayout title=\"Investigating Growth\">\n      <Typography variant=\"h1\">Labeling Dataflow Jobs</Typography>\n      <Typography paragraph>\n        Labels in Google Cloud Platform are key-value pairs that can be added to\n        most types of cloud resources. Since these labels are also exported in\n        billing data, adding labels allows a granular breakdown of cloud cost by\n        software entity.\n      </Typography>\n      <Typography paragraph>\n        In Cloud Dataflow, labels can be added to a job either programmatically\n        or via the command-line when launching a job. Note that GCP has{' '}\n        <Link to=\"https://cloud.google.com/compute/docs/labeling-resources#restrictions\">\n          restrictions\n        </Link>{' '}\n        on the length and characters that can be used in labels.\n      </Typography>\n      <Typography paragraph>\n        Labels are not retroactive, so cost tracking is only possible from when\n        the labels are first added to a Dataflow job.\n      </Typography>\n\n      <Box mt={4}>\n        <Typography variant=\"h3\">DataflowPipelineOptions</Typography>\n        <Typography paragraph>\n          Dataflow jobs using Beam's{' '}\n          <Link to=\"https://beam.apache.org/releases/javadoc/2.3.0/org/apache/beam/runners/dataflow/options/DataflowPipelineOptions.html\">\n            DataflowPipelineOptions\n          </Link>{' '}\n          directly can use the <b>setLabels</b> function to add one or more\n          labels:\n          <CodeSnippet\n            language=\"java\"\n            text={`private DataflowPipelineOptions options = PipelineOptionsFactory.fromArgs(args).as(DataflowPipelineOptionsImpl.class); \noptions.setLabels(ImmutableMap.of(\"job-id\", \"my-dataflow-job\"));`}\n          />\n        </Typography>\n        <Typography paragraph>\n          Dataflow jobs using Scio can similarly set options on the ScioContext:\n          <CodeSnippet\n            language=\"scala\"\n            text={`val (sc: ScioContext, args: Args) = ContextAndArgs(cmdLineArgs)\nsc.optionsAs[DataflowPipelineOptions].setLabels(Map(\"job-id\" -> \"my-dataflow-job\").asJava)`}\n          />\n        </Typography>\n      </Box>\n\n      <Box mt={4}>\n        <Typography variant=\"h3\">Command-line</Typography>\n        <Typography paragraph>\n          Dataflow jobs launched from the command-line can add labels as an\n          argument:\n          <CodeSnippet\n            language=\"shell\"\n            text={`--labels={\"job-id\": \"my-dataflow-job\", \"date-argument\": \"2020-09-16\"}`}\n          />\n        </Typography>\n        <Typography paragraph>\n          For more information on specifying options, see the{' '}\n          <Link to=\"https://cloud.google.com/dataflow/docs/guides/specifying-exec-params\">\n            Dataflow documentation\n          </Link>{' '}\n          or{' '}\n          <Link to=\"https://spotify.github.io/scio/api/com/spotify/scio/ScioContext.html\">\n            Scio Scaladoc\n          </Link>\n          .\n        </Typography>\n      </Box>\n    </AlertInstructionsLayout>\n  );\n};\n"],"names":[],"mappings":";;;;;;AAsBO,MAAM,gCAAgC,MAAM;AACjD,EAAA,uBACG,KAAA,CAAA,aAAA,CAAA,uBAAA,EAAA,EAAwB,KAAM,EAAA,sBAAA,EAAA,kBAC5B,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA,EAAW,OAAQ,EAAA,IAAA,EAAA,EAAK,wBAAsB,CAAA,kBAC9C,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA,EAAW,WAAS,IAAC,EAAA,EAAA,2OAKtB,CACA,kBAAA,KAAA,CAAA,aAAA,CAAC,UAAW,EAAA,EAAA,SAAA,EAAS,IAAC,EAAA,EAAA,yIAAA,EAE4C,GAChE,kBAAA,KAAA,CAAA,aAAA,CAAC,IAAK,EAAA,EAAA,EAAA,EAAG,uEAAwE,EAAA,EAAA,cAEjF,CAAQ,EAAA,GAAA,EAAI,0DAEd,CACA,kBAAA,KAAA,CAAA,aAAA,CAAC,UAAW,EAAA,EAAA,SAAA,EAAS,IAAC,EAAA,EAAA,uHAGtB,CAEA,kBAAA,KAAA,CAAA,aAAA,CAAC,GAAI,EAAA,EAAA,EAAA,EAAI,CACP,EAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,UAAW,EAAA,EAAA,OAAA,EAAQ,IAAK,EAAA,EAAA,yBAAuB,mBAC/C,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA,EAAW,SAAS,EAAA,IAAA,EAAA,EAAC,4BACO,EAAA,GAAA,kBAC1B,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,EAAK,IAAG,sHAAuH,EAAA,EAAA,yBAEhI,CAAQ,EAAA,GAAA,EAAI,uBACS,kBAAA,KAAA,CAAA,aAAA,CAAC,GAAE,EAAA,IAAA,EAAA,WAAS,GAAI,sCAErC,kBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,WAAA;AAAA,IAAA;AAAA,MACC,QAAS,EAAA,MAAA;AAAA,MACT,IAAM,EAAA,CAAA;AAAA,gEAAA;AAAA;AAAA,GAGV,CACA,kBAAA,KAAA,CAAA,aAAA,CAAC,UAAW,EAAA,EAAA,SAAA,EAAS,QAAC,wEAEpB,kBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,WAAA;AAAA,IAAA;AAAA,MACC,QAAS,EAAA,OAAA;AAAA,MACT,IAAM,EAAA,CAAA;AAAA,0FAAA;AAAA;AAAA,GAGV,CACF,CAAA,kBAEC,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,EAAI,IAAI,CACP,EAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,UAAW,EAAA,EAAA,OAAA,EAAQ,QAAK,cAAY,CAAA,sCACpC,UAAW,EAAA,EAAA,SAAA,EAAS,QAAC,6EAGpB,kBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,WAAA;AAAA,IAAA;AAAA,MACC,QAAS,EAAA,OAAA;AAAA,MACT,IAAM,EAAA,CAAA,qEAAA;AAAA;AAAA,GAEV,CACA,kBAAA,KAAA,CAAA,aAAA,CAAC,UAAW,EAAA,EAAA,SAAA,EAAS,QAAC,qDACgC,EAAA,GAAA,kBACnD,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,EAAK,EAAG,EAAA,sEAAA,EAAA,EAAuE,wBAEhF,CAAQ,EAAA,GAAA,EAAI,IACT,EAAA,GAAA,kBACF,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,EAAK,EAAG,EAAA,sEAAA,EAAA,EAAuE,eAEhF,CAAA,EAAO,GAET,CACF,CACF,CAAA;AAEJ;;;;"}