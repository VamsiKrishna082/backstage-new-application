import React from 'react';
import InputLabel from '@material-ui/core/InputLabel';
import FormControl from '@material-ui/core/FormControl';
import Select from '@material-ui/core/Select';
import MenuItem from '@material-ui/core/MenuItem';
import { useSelectStyles } from '../../utils/styles.esm.js';

const MetricSelect = ({
  metric,
  metrics,
  onSelect
}) => {
  const classes = useSelectStyles();
  function onChange(e) {
    if (e.target.value === "none") {
      onSelect(null);
    } else {
      onSelect(e.target.value);
    }
  }
  return /* @__PURE__ */ React.createElement(FormControl, { variant: "outlined" }, /* @__PURE__ */ React.createElement(InputLabel, { shrink: true, id: "metric-select-label" }, "Compare to:"), /* @__PURE__ */ React.createElement(
    Select,
    {
      id: "metric-select",
      labelId: "metric-select-label",
      labelWidth: 100,
      className: classes.select,
      value: metric ?? "none",
      onChange
    },
    /* @__PURE__ */ React.createElement(MenuItem, { className: classes.menuItem, key: "none", value: "none" }, /* @__PURE__ */ React.createElement("em", null, "None")),
    metrics.map((m) => /* @__PURE__ */ React.createElement(MenuItem, { className: classes.menuItem, key: m.kind, value: m.kind }, /* @__PURE__ */ React.createElement("b", null, m.name)))
  ));
};

export { MetricSelect };
//# sourceMappingURL=MetricSelect.esm.js.map
