import React from 'react';
import MenuItem from '@material-ui/core/MenuItem';
import Select from '@material-ui/core/Select';
import '../../types/Alert.esm.js';
import { Duration } from '../../types/Duration.esm.js';
import { formatLastTwoLookaheadQuarters } from '../../utils/formatters.esm.js';
import { findAlways } from '../../utils/assert.esm.js';
import { useSelectStyles } from '../../utils/styles.esm.js';
import '../../hooks/useConfig.esm.js';
import '../../hooks/useCurrency.esm.js';
import '../../hooks/useFilters.esm.js';
import '../../hooks/useGroups.esm.js';
import '../../hooks/useLoading.esm.js';
import '../../hooks/useScroll.esm.js';
import { useLastCompleteBillingDate } from '../../hooks/useLastCompleteBillingDate.esm.js';

function getDefaultOptions(lastCompleteBillingDate) {
  return [
    {
      value: Duration.P90D,
      label: "Past 6 Months"
    },
    {
      value: Duration.P30D,
      label: "Past 60 Days"
    },
    {
      value: Duration.P3M,
      label: formatLastTwoLookaheadQuarters(lastCompleteBillingDate)
    }
  ];
}
const PeriodSelect = ({
  duration,
  onSelect,
  options
}) => {
  const classes = useSelectStyles();
  const lastCompleteBillingDate = useLastCompleteBillingDate();
  const optionsOrDefault = options ?? getDefaultOptions(lastCompleteBillingDate);
  const handleOnChange = (e) => {
    onSelect(e.target.value);
  };
  const renderValue = (value) => {
    const option = findAlways(optionsOrDefault, (o) => o.value === value);
    return /* @__PURE__ */ React.createElement("b", null, option.label);
  };
  return /* @__PURE__ */ React.createElement(
    Select,
    {
      className: classes.select,
      variant: "outlined",
      onChange: handleOnChange,
      value: duration,
      renderValue,
      "data-testid": "period-select"
    },
    optionsOrDefault.map((option) => /* @__PURE__ */ React.createElement(
      MenuItem,
      {
        className: classes.menuItem,
        key: option.value,
        value: option.value,
        "data-testid": `period-select-option-${option.value}`
      },
      option.label
    ))
  );
};

export { PeriodSelect, getDefaultOptions };
//# sourceMappingURL=PeriodSelect.esm.js.map
