import React, { useState } from 'react';
import Dialog from '@material-ui/core/Dialog';
import IconButton from '@material-ui/core/IconButton';
import CloseIcon from '@material-ui/icons/Close';
import { useEntityDialogStyles } from '../../utils/styles.esm.js';
import { ProductEntityTable } from './ProductEntityTable.esm.js';
import { findAlways } from '../../utils/assert.esm.js';
import { HeaderTabs } from '@backstage/core-components';

const ProductEntityDialog = ({
  open,
  entity,
  options = {},
  onClose
}) => {
  const classes = useEntityDialogStyles();
  const labels = Object.keys(entity.entities);
  const [selectedLabel, setSelectedLabel] = useState(
    findAlways(labels, (_) => true)
  );
  const tabs = labels.map((label, index) => ({
    id: index.toString(),
    label: `Breakdown by ${label}`
  }));
  return /* @__PURE__ */ React.createElement(Dialog, { open, onClose, scroll: "body", fullWidth: true, maxWidth: "lg" }, /* @__PURE__ */ React.createElement(IconButton, { className: classes.closeButton, onClick: onClose }, /* @__PURE__ */ React.createElement(CloseIcon, null)), /* @__PURE__ */ React.createElement(
    HeaderTabs,
    {
      tabs,
      onChange: (index) => setSelectedLabel(labels[index])
    }
  ), /* @__PURE__ */ React.createElement(
    ProductEntityTable,
    {
      entityLabel: selectedLabel,
      entity,
      options
    }
  ));
};

export { ProductEntityDialog };
//# sourceMappingURL=ProductEntityDialog.esm.js.map
