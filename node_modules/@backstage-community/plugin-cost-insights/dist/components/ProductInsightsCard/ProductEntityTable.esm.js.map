{"version":3,"file":"ProductEntityTable.esm.js","sources":["../../../src/components/ProductInsightsCard/ProductEntityTable.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport classnames from 'classnames';\nimport Typography from '@material-ui/core/Typography';\nimport { formatChange } from '../../utils/formatters';\nimport { useEntityDialogStyles as useStyles } from '../../utils/styles';\nimport { CostGrowthIndicator } from '../CostGrowth';\nimport { BarChartOptions } from '../../types';\nimport {\n  ChangeStatistic,\n  Entity,\n} from '@backstage-community/plugin-cost-insights-common';\nimport { Table, TableColumn } from '@backstage/core-components';\nimport { useConfig } from '../../hooks';\n\nexport type ProductEntityTableOptions = Partial<\n  Pick<BarChartOptions, 'previousName' | 'currentName'>\n>;\n\ntype RowData = {\n  id: string;\n  label: string;\n  previous: number;\n  current: number;\n  change: ChangeStatistic;\n};\n\nconst createRenderer =\n  (baseCurrency: Intl.NumberFormat) =>\n  (col: keyof RowData, classes: Record<string, string>) => {\n    return function render(rowData: {}): JSX.Element {\n      const row = rowData as RowData;\n      const rowStyles = classnames(classes.row, {\n        [classes.rowTotal]: row.id === 'total',\n        [classes.colFirst]: col === 'label',\n        [classes.colLast]: col === 'change',\n      });\n\n      switch (col) {\n        case 'previous':\n        case 'current':\n          return (\n            <Typography className={rowStyles}>\n              {baseCurrency.format(row[col])}\n            </Typography>\n          );\n        case 'change':\n          return (\n            <CostGrowthIndicator\n              className={rowStyles}\n              change={row.change}\n              formatter={formatChange}\n            />\n          );\n        default:\n          return <Typography className={rowStyles}>{row.label}</Typography>;\n      }\n    };\n  };\n\n// material-table does not support fixed rows. Override the sorting algorithm\n// to force Total row to bottom by default or when a user sort toggles a column.\nfunction createSorter(field?: keyof Omit<RowData, 'id'>) {\n  return function rowSort(data1: {}, data2: {}): number {\n    const a = data1 as RowData;\n    const b = data2 as RowData;\n    if (a.id === 'total') return 1;\n    if (b.id === 'total') return 1;\n    if (field === 'label') return a.label.localeCompare(b.label);\n    if (field === 'change') {\n      if (formatChange(a[field]) === '∞' || formatChange(b[field]) === '-∞')\n        return 1;\n      if (formatChange(a[field]) === '-∞' || formatChange(b[field]) === '∞')\n        return -1;\n      return a[field].ratio! - b[field].ratio!;\n    }\n\n    return b.previous + b.current - (a.previous + a.current);\n  };\n}\n\ntype ProductEntityTableProps = {\n  entityLabel: string;\n  entity: Entity;\n  options: ProductEntityTableOptions;\n};\n\nexport const ProductEntityTable = ({\n  entityLabel,\n  entity,\n  options,\n}: ProductEntityTableProps) => {\n  const classes = useStyles();\n  const { baseCurrency } = useConfig();\n  const entities = entity.entities[entityLabel];\n\n  const data = Object.assign(\n    {\n      previousName: 'Previous',\n      currentName: 'Current',\n    },\n    options,\n  );\n\n  const firstColClasses = classnames(classes.column, classes.colFirst);\n  const lastColClasses = classnames(classes.column, classes.colLast);\n\n  const columns: TableColumn[] = [\n    {\n      field: 'label',\n      title: <Typography className={firstColClasses}>{entityLabel}</Typography>,\n      render: createRenderer(baseCurrency)('label', classes),\n      customSort: createSorter('label'),\n      width: '33.33%',\n    },\n    {\n      field: 'previous',\n      title: (\n        <Typography className={classes.column}>{data.previousName}</Typography>\n      ),\n      align: 'right',\n      render: createRenderer(baseCurrency)('previous', classes),\n      customSort: createSorter('previous'),\n    },\n    {\n      field: 'current',\n      title: (\n        <Typography className={classes.column}>{data.currentName}</Typography>\n      ),\n      align: 'right',\n      render: createRenderer(baseCurrency)('current', classes),\n      customSort: createSorter('current'),\n    },\n    {\n      field: 'change',\n      title: <Typography className={lastColClasses}>Change</Typography>,\n      align: 'right',\n      render: createRenderer(baseCurrency)('change', classes),\n      customSort: createSorter('change'),\n    },\n  ];\n\n  const rowData: RowData[] = entities\n    .map(e => ({\n      id: e.id || 'Unknown',\n      label: e.id || 'Unknown',\n      previous: e.aggregation[0],\n      current: e.aggregation[1],\n      change: e.change,\n    }))\n    .concat({\n      id: 'total',\n      label: 'Total',\n      previous: entity.aggregation[0],\n      current: entity.aggregation[1],\n      change: entity.change,\n    })\n    .sort(createSorter());\n\n  return (\n    <Table\n      columns={columns}\n      data={rowData}\n      title={entity.id || 'Unlabeled'}\n      options={{\n        paging: false,\n        search: false,\n        hideFilterIcons: true,\n      }}\n    />\n  );\n};\n"],"names":["useStyles"],"mappings":"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"}