import React from 'react';
import { DateTime } from 'luxon';
import Box from '@material-ui/core/Box';
import { BarChart } from '../BarChart/BarChart.esm.js';
import { BarChartLegend } from '../BarChart/BarChartLegend.esm.js';
import 'classnames';
import '@material-ui/core/Divider';
import '@material-ui/core/Typography';
import { useBarChartLayoutStyles } from '../../utils/styles.esm.js';
import '@material-ui/icons/Lens';
import { LegendItem } from '../LegendItem/LegendItem.esm.js';
import { CostGrowth } from '../CostGrowth/CostGrowth.esm.js';
import '@material-ui/icons/ArrowDropUp';
import '@material-ui/icons/ArrowDropDown';
import '../../types/Alert.esm.js';
import { Duration } from '../../types/Duration.esm.js';
import '../../utils/duration.esm.js';
import '../../hooks/useConfig.esm.js';
import '../../hooks/useCurrency.esm.js';
import '../../hooks/useFilters.esm.js';
import '../../hooks/useGroups.esm.js';
import '../../hooks/useLoading.esm.js';
import '../../hooks/useScroll.esm.js';
import '../../hooks/useLastCompleteBillingDate.esm.js';
import { resourceOf } from '../../utils/graphs.esm.js';

const ProjectGrowthAlertChart = ({
  alert
}) => {
  const classes = useBarChartLayoutStyles();
  const costStart = alert.aggregation[0];
  const costEnd = alert.aggregation[1];
  const resourceData = alert.products.map(resourceOf);
  const options = {
    previousName: DateTime.fromFormat(alert.periodStart, "yyyy-'Q'q").toFormat(
      "'Q'q yyyy"
    ),
    currentName: DateTime.fromFormat(alert.periodEnd, "yyyy-'Q'q").toFormat(
      "'Q'q yyyy"
    )
  };
  return /* @__PURE__ */ React.createElement(Box, { className: classes.wrapper }, /* @__PURE__ */ React.createElement(BarChartLegend, { costStart, costEnd, options }, /* @__PURE__ */ React.createElement(LegendItem, { title: "Cost Growth" }, /* @__PURE__ */ React.createElement(CostGrowth, { change: alert.change, duration: Duration.P3M }))), /* @__PURE__ */ React.createElement(BarChart, { resources: resourceData, options }));
};

export { ProjectGrowthAlertChart };
//# sourceMappingURL=ProjectGrowthAlertChart.esm.js.map
