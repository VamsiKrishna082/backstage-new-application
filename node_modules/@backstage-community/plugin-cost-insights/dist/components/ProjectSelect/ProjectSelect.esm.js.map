{"version":3,"file":"ProjectSelect.esm.js","sources":["../../../src/components/ProjectSelect/ProjectSelect.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport {\n  Maybe,\n  Project,\n} from '@backstage-community/plugin-cost-insights-common';\nimport { useSelectStyles as useStyles } from '../../utils/styles';\n\ntype ProjectSelectProps = {\n  project: Maybe<string>;\n  projects: Array<Project>;\n  onSelect: (project: Maybe<string>) => void;\n};\n\nexport const ProjectSelect = ({\n  project,\n  projects,\n  onSelect,\n}: ProjectSelectProps) => {\n  const classes = useStyles();\n\n  const projectOptions = projects\n    .filter(p => p.id)\n    .sort((a, b) =>\n      ((a.name ?? a.id) as string).localeCompare((b.name ?? b.id) as string),\n    );\n\n  const handleOnChange = (e: React.ChangeEvent<{ value: unknown }>) => {\n    onSelect(e.target.value as string);\n  };\n\n  const renderValue = (value: unknown) => {\n    const proj = value as string;\n    const projectObj = projects.find(p => p.id === proj);\n    return (\n      <b data-testid={`selected-${proj}`}>\n        {proj === 'all' ? 'All Projects' : projectObj?.name ?? proj}\n      </b>\n    );\n  };\n\n  return (\n    <Select\n      className={classes.select}\n      variant=\"outlined\"\n      value={project ?? 'all'}\n      renderValue={renderValue}\n      onChange={handleOnChange}\n      data-testid=\"project-filter-select\"\n    >\n      {[{ id: 'all' }, ...projectOptions].map(proj => (\n        <MenuItem\n          className={`${classes.menuItem} compact`}\n          key={proj.id}\n          value={proj.id}\n          data-testid={`option-${proj.id}`}\n        >\n          {proj.id === 'all' ? 'All Projects' : proj.name ?? proj.id}\n        </MenuItem>\n      ))}\n    </Select>\n  );\n};\n"],"names":["useStyles"],"mappings":";;;;;AA8BO,MAAM,gBAAgB,CAAC;AAAA,EAC5B,OAAA;AAAA,EACA,QAAA;AAAA,EACA;AACF,CAA0B,KAAA;AACxB,EAAA,MAAM,UAAUA,eAAU,EAAA;AAE1B,EAAA,MAAM,iBAAiB,QACpB,CAAA,MAAA,CAAO,CAAK,CAAA,KAAA,CAAA,CAAE,EAAE,CAChB,CAAA,IAAA;AAAA,IAAK,CAAC,CAAG,EAAA,CAAA,KAAA,CACN,CAAE,CAAA,IAAA,IAAQ,CAAE,CAAA,EAAA,EAAe,aAAe,CAAA,CAAA,CAAE,IAAQ,IAAA,CAAA,CAAE,EAAa;AAAA,GACvE;AAEF,EAAM,MAAA,cAAA,GAAiB,CAAC,CAA6C,KAAA;AACnE,IAAS,QAAA,CAAA,CAAA,CAAE,OAAO,KAAe,CAAA;AAAA,GACnC;AAEA,EAAM,MAAA,WAAA,GAAc,CAAC,KAAmB,KAAA;AACtC,IAAA,MAAM,IAAO,GAAA,KAAA;AACb,IAAA,MAAM,aAAa,QAAS,CAAA,IAAA,CAAK,CAAK,CAAA,KAAA,CAAA,CAAE,OAAO,IAAI,CAAA;AACnD,IACE,uBAAA,KAAA,CAAA,aAAA,CAAC,GAAE,EAAA,EAAA,aAAA,EAAa,CAAY,SAAA,EAAA,IAAI,CAC7B,CAAA,EAAA,EAAA,IAAA,KAAS,KAAQ,GAAA,cAAA,GAAiB,UAAY,EAAA,IAAA,IAAQ,IACzD,CAAA;AAAA,GAEJ;AAEA,EACE,uBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,MAAA;AAAA,IAAA;AAAA,MACC,WAAW,OAAQ,CAAA,MAAA;AAAA,MACnB,OAAQ,EAAA,UAAA;AAAA,MACR,OAAO,OAAW,IAAA,KAAA;AAAA,MAClB,WAAA;AAAA,MACA,QAAU,EAAA,cAAA;AAAA,MACV,aAAY,EAAA;AAAA,KAAA;AAAA,IAEX,CAAC,EAAE,EAAI,EAAA,KAAA,IAAS,GAAG,cAAc,CAAE,CAAA,GAAA,CAAI,CACtC,IAAA,qBAAA,KAAA,CAAA,aAAA;AAAA,MAAC,QAAA;AAAA,MAAA;AAAA,QACC,SAAA,EAAW,CAAG,EAAA,OAAA,CAAQ,QAAQ,CAAA,QAAA,CAAA;AAAA,QAC9B,KAAK,IAAK,CAAA,EAAA;AAAA,QACV,OAAO,IAAK,CAAA,EAAA;AAAA,QACZ,aAAA,EAAa,CAAU,OAAA,EAAA,IAAA,CAAK,EAAE,CAAA;AAAA,OAAA;AAAA,MAE7B,KAAK,EAAO,KAAA,KAAA,GAAQ,cAAiB,GAAA,IAAA,CAAK,QAAQ,IAAK,CAAA;AAAA,KAE3D;AAAA,GACH;AAEJ;;;;"}