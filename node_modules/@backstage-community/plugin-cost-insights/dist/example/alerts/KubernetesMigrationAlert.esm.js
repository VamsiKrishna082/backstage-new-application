import React from 'react';
import pluralize from 'pluralize';
import Typography from '@material-ui/core/Typography';
import { KubernetesMigrationAlertCard } from '../components/KubernetesMigrationAlertCard/KubernetesMigrationAlertCard.esm.js';
import { AlertStatus } from '../../types/Alert.esm.js';
import { KubernetesMigrationDismissForm } from '../forms/KubernetesMigrationDismissForm.esm.js';
import { Lifecycle } from '@backstage/core-components';

class KubernetesMigrationAlert {
  api;
  data;
  subtitle = "Services running on Kubernetes are estimated to save 50% or more compared to Compute Engine.";
  // Dialog will not render a form if form property set to null.
  AcceptForm = null;
  // Overrides default Dismiss form with a custom form component.
  DismissForm = KubernetesMigrationDismissForm;
  constructor(api, data) {
    this.api = api;
    this.data = data;
  }
  get title() {
    return /* @__PURE__ */ React.createElement(Typography, { component: "span" }, "Consider migrating", " ", pluralize("service", this.data.services.length, true), " to Kubernetes", " ", /* @__PURE__ */ React.createElement(Lifecycle, { shorthand: true }));
  }
  get element() {
    const subheader = `${pluralize(
      "Service",
      this.data.services.length,
      true
    )}, sorted by cost`;
    return /* @__PURE__ */ React.createElement(
      KubernetesMigrationAlertCard,
      {
        data: this.data,
        title: "Migrate to Kubernetes",
        subheader,
        currentProduct: "Compute Engine",
        comparedProduct: "Kubernetes"
      }
    );
  }
  /* Fires when the onSubmit event is raised on a Dismiss form. Displays custom dismiss form. */
  async onDismissed(options) {
    const alerts = await this.api.getAlerts(options.group);
    return new Promise(
      (resolve) => setTimeout(resolve, 750, [
        ...alerts.filter((a) => a.title !== this.title),
        {
          title: this.title,
          subtitle: this.subtitle,
          status: AlertStatus.Dismissed
        }
      ])
    );
  }
  /* Fires when the onSubmit event is raised on a Snooze form. Displays default snooze form. */
  async onSnoozed(options) {
    const alerts = await this.api.getAlerts(options.group);
    return new Promise(
      (resolve) => setTimeout(resolve, 750, [
        ...alerts.filter((a) => a.title !== this.title),
        {
          title: this.title,
          subtitle: this.subtitle,
          status: AlertStatus.Snoozed
        }
      ])
    );
  }
  /* Fires when the Accept button is clicked. Dialog does not render a form. See KubernetesMigrationAlert.AcceptForm */
  async onAccepted(options) {
    const alerts = await this.api.getAlerts(options.group);
    return new Promise(
      (resolve) => setTimeout(resolve, 750, [
        ...alerts.filter((a) => a.title !== this.title),
        {
          title: this.title,
          subtitle: this.subtitle,
          status: AlertStatus.Accepted
        }
      ])
    );
  }
}

export { KubernetesMigrationAlert };
//# sourceMappingURL=KubernetesMigrationAlert.esm.js.map
