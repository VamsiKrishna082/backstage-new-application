{"version":3,"file":"KubernetesMigrationDismissForm.esm.js","sources":["../../../src/example/forms/KubernetesMigrationDismissForm.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, {\n  useEffect,\n  useState,\n  forwardRef,\n  FormEventHandler,\n  ChangeEvent,\n} from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Typography from '@material-ui/core/Typography';\nimport { AlertFormProps } from '../../types';\nimport { Entity } from '@backstage-community/plugin-cost-insights-common';\nimport { KubernetesMigrationAlert } from '../alerts';\nimport { findAlways } from '../../utils/assert';\n\nexport type KubernetesMigrationDismissFormData = {\n  services: Entity[];\n};\n\nexport type KubernetesMigrationDismissFormProps = AlertFormProps<\n  KubernetesMigrationAlert,\n  KubernetesMigrationDismissFormData\n>;\n\nexport const KubernetesMigrationDismissForm = forwardRef<\n  HTMLFormElement,\n  KubernetesMigrationDismissFormProps\n>(({ onSubmit, disableSubmit, alert }, ref) => {\n  const [services, setServices] = useState<Entity[]>(alert.data.services);\n\n  const onFormSubmit: FormEventHandler = e => {\n    /* Remember to prevent default form behavior */\n    e.preventDefault();\n    onSubmit({ services: services });\n  };\n\n  const onCheckboxChange = (\n    e: ChangeEvent<HTMLInputElement>,\n    checked: boolean,\n  ) => {\n    if (checked) {\n      const service = findAlways(\n        alert.data.services,\n        s => s.id === e.target.value,\n      );\n      setServices(prevServices => prevServices.concat(service));\n    } else {\n      setServices(prevServices =>\n        prevServices.filter(p => p.id !== e.target.value),\n      );\n    }\n  };\n\n  /* Submit button is disabled by default. Use props.disableSubmit to toggle disabled state. */\n  useEffect(() => {\n    if (services.length) {\n      disableSubmit(false);\n    } else {\n      disableSubmit(true);\n    }\n  }, [services, disableSubmit]);\n\n  return (\n    /* All custom forms must accept a ref and implement an onSubmit handler. */\n    <form ref={ref} onSubmit={onFormSubmit}>\n      <FormControl component=\"fieldset\" fullWidth>\n        <Typography color=\"textPrimary\">\n          <b>Or choose which services to dismiss this alert for.</b>\n        </Typography>\n        <FormGroup>\n          {alert.data.services.map((service, index) => (\n            <FormControlLabel\n              key={`example-option-${index}`}\n              label={service.id}\n              value={service.id}\n              control={\n                <Checkbox\n                  color=\"primary\"\n                  checked={services.some(p => p.id === service.id)}\n                  onChange={onCheckboxChange}\n                />\n              }\n            />\n          ))}\n        </FormGroup>\n      </FormControl>\n    </form>\n  );\n});\n"],"names":[],"mappings":";;;;;;;;AA0Ca,MAAA,8BAAA,GAAiC,WAG5C,CAAC,EAAE,UAAU,aAAe,EAAA,KAAA,IAAS,GAAQ,KAAA;AAC7C,EAAA,MAAM,CAAC,QAAU,EAAA,WAAW,IAAI,QAAmB,CAAA,KAAA,CAAM,KAAK,QAAQ,CAAA;AAEtE,EAAA,MAAM,eAAiC,CAAK,CAAA,KAAA;AAE1C,IAAA,CAAA,CAAE,cAAe,EAAA;AACjB,IAAS,QAAA,CAAA,EAAE,UAAoB,CAAA;AAAA,GACjC;AAEA,EAAM,MAAA,gBAAA,GAAmB,CACvB,CAAA,EACA,OACG,KAAA;AACH,IAAA,IAAI,OAAS,EAAA;AACX,MAAA,MAAM,OAAU,GAAA,UAAA;AAAA,QACd,MAAM,IAAK,CAAA,QAAA;AAAA,QACX,CAAK,CAAA,KAAA,CAAA,CAAE,EAAO,KAAA,CAAA,CAAE,MAAO,CAAA;AAAA,OACzB;AACA,MAAA,WAAA,CAAY,CAAgB,YAAA,KAAA,YAAA,CAAa,MAAO,CAAA,OAAO,CAAC,CAAA;AAAA,KACnD,MAAA;AACL,MAAA,WAAA;AAAA,QAAY,CAAA,YAAA,KACV,aAAa,MAAO,CAAA,CAAA,CAAA,KAAK,EAAE,EAAO,KAAA,CAAA,CAAE,OAAO,KAAK;AAAA,OAClD;AAAA;AACF,GACF;AAGA,EAAA,SAAA,CAAU,MAAM;AACd,IAAA,IAAI,SAAS,MAAQ,EAAA;AACnB,MAAA,aAAA,CAAc,KAAK,CAAA;AAAA,KACd,MAAA;AACL,MAAA,aAAA,CAAc,IAAI,CAAA;AAAA;AACpB,GACC,EAAA,CAAC,QAAU,EAAA,aAAa,CAAC,CAAA;AAE5B,EAAA;AAAA;AAAA,oBAEG,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,EAAK,GAAU,EAAA,QAAA,EAAU,YACxB,EAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,WAAY,EAAA,EAAA,SAAA,EAAU,UAAW,EAAA,SAAA,EAAS,IACzC,EAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,UAAW,EAAA,EAAA,KAAA,EAAM,aAChB,EAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,GAAE,EAAA,IAAA,EAAA,qDAAmD,CACxD,CAAA,kBACC,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA,IAAA,EACE,KAAM,CAAA,IAAA,CAAK,QAAS,CAAA,GAAA,CAAI,CAAC,OAAA,EAAS,KACjC,qBAAA,KAAA,CAAA,aAAA;AAAA,MAAC,gBAAA;AAAA,MAAA;AAAA,QACC,GAAA,EAAK,kBAAkB,KAAK,CAAA,CAAA;AAAA,QAC5B,OAAO,OAAQ,CAAA,EAAA;AAAA,QACf,OAAO,OAAQ,CAAA,EAAA;AAAA,QACf,OACE,kBAAA,KAAA,CAAA,aAAA;AAAA,UAAC,QAAA;AAAA,UAAA;AAAA,YACC,KAAM,EAAA,SAAA;AAAA,YACN,SAAS,QAAS,CAAA,IAAA,CAAK,OAAK,CAAE,CAAA,EAAA,KAAO,QAAQ,EAAE,CAAA;AAAA,YAC/C,QAAU,EAAA;AAAA;AAAA;AACZ;AAAA,KAGL,CACH,CACF,CACF;AAAA;AAEJ,CAAC;;;;"}