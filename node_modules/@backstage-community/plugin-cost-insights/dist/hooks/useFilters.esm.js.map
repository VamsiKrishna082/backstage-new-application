{"version":3,"file":"useFilters.esm.js","sources":["../../src/hooks/useFilters.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, {\n  Dispatch,\n  PropsWithChildren,\n  SetStateAction,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport Alert from '@material-ui/lab/Alert';\nimport { PageFilters, ProductFilters } from '../types';\nimport { Maybe } from '@backstage-community/plugin-cost-insights-common';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport {\n  stringify,\n  validate,\n  getInitialPageState,\n  getInitialProductState,\n} from '../utils/history';\nimport { useGroups } from './useGroups';\nimport { useConfig } from './useConfig';\n\nexport type FilterContextProps = {\n  pageFilters: PageFilters;\n  productFilters: ProductFilters;\n  setPageFilters: Dispatch<SetStateAction<Maybe<PageFilters>>>;\n  setProductFilters: Dispatch<SetStateAction<Maybe<ProductFilters>>>;\n};\n\nexport type MapFiltersToProps<T> = (props: FilterContextProps) => T;\n\nexport const FilterContext = React.createContext<\n  FilterContextProps | undefined\n>(undefined);\n\nexport const FilterProvider = ({ children }: PropsWithChildren<{}>) => {\n  const config = useConfig();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const groups = useGroups();\n  const [error, setError] = useState<Maybe<Error>>(null);\n  const [pageFilters, setPageFilters] = useState<Maybe<PageFilters>>(null);\n  const [productFilters, setProductFilters] =\n    useState<Maybe<ProductFilters>>(null);\n\n  useEffect(() => {\n    async function setPageFiltersFromLocation() {\n      try {\n        // strip extraneous parameters, validate and transform\n        const queryParams = await validate(location.search);\n        const defaultMetric = config.metrics.find(m => m.default)?.kind ?? null;\n\n        // Group or project parameters should override defaults\n        const initialPageState = getInitialPageState(groups, queryParams);\n        const initialProductState = getInitialProductState(config);\n\n        setProductFilters(initialProductState);\n        setPageFilters({ ...initialPageState, metric: defaultMetric });\n      } catch (e) {\n        setError(e);\n      }\n    }\n\n    setPageFiltersFromLocation();\n  }, [groups]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    function setLocationFromPageFilters(filters: PageFilters) {\n      const queryString = stringify({\n        group: filters.group,\n        ...(filters.project ? { project: filters.project } : {}),\n      });\n      // TODO Remove workaround once issue is resolved in react-router\n      // (https://github.com/ReactTraining/react-router/issues/7496)\n      // navigate({ ...location, search: queryString });\n      navigate({ ...location, search: `?${queryString}` });\n    }\n\n    if (pageFilters) {\n      setLocationFromPageFilters(pageFilters);\n    }\n  }, [pageFilters]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (error) {\n    return <Alert severity=\"error\">{error.message}</Alert>;\n  }\n\n  // Wait for filters to load\n  if (!pageFilters || !productFilters) {\n    return null;\n  }\n\n  return (\n    <FilterContext.Provider\n      value={{ pageFilters, productFilters, setPageFilters, setProductFilters }}\n    >\n      {children}\n    </FilterContext.Provider>\n  );\n};\n\nexport function useFilters<T>(mapFiltersToProps: MapFiltersToProps<T>): T {\n  const context = useContext(FilterContext);\n  return context ? mapFiltersToProps(context) : assertNever();\n}\n\nfunction assertNever(): never {\n  throw Error('Cannot use useFilters outside of FilterProvider');\n}\n"],"names":[],"mappings":";;;;;;;AA8Ca,MAAA,aAAA,GAAgB,KAAM,CAAA,aAAA,CAEjC,KAAS,CAAA;AAEJ,MAAM,cAAiB,GAAA,CAAC,EAAE,QAAA,EAAsC,KAAA;AACrE,EAAA,MAAM,SAAS,SAAU,EAAA;AACzB,EAAA,MAAM,WAAW,WAAY,EAAA;AAC7B,EAAA,MAAM,WAAW,WAAY,EAAA;AAC7B,EAAA,MAAM,SAAS,SAAU,EAAA;AACzB,EAAA,MAAM,CAAC,KAAA,EAAO,QAAQ,CAAA,GAAI,SAAuB,IAAI,CAAA;AACrD,EAAA,MAAM,CAAC,WAAA,EAAa,cAAc,CAAA,GAAI,SAA6B,IAAI,CAAA;AACvE,EAAA,MAAM,CAAC,cAAA,EAAgB,iBAAiB,CAAA,GACtC,SAAgC,IAAI,CAAA;AAEtC,EAAA,SAAA,CAAU,MAAM;AACd,IAAA,eAAe,0BAA6B,GAAA;AAC1C,MAAI,IAAA;AAEF,QAAA,MAAM,WAAc,GAAA,MAAM,QAAS,CAAA,QAAA,CAAS,MAAM,CAAA;AAClD,QAAM,MAAA,aAAA,GAAgB,OAAO,OAAQ,CAAA,IAAA,CAAK,OAAK,CAAE,CAAA,OAAO,GAAG,IAAQ,IAAA,IAAA;AAGnE,QAAM,MAAA,gBAAA,GAAmB,mBAAoB,CAAA,MAAA,EAAQ,WAAW,CAAA;AAChE,QAAM,MAAA,mBAAA,GAAsB,uBAAuB,MAAM,CAAA;AAEzD,QAAA,iBAAA,CAAkB,mBAAmB,CAAA;AACrC,QAAA,cAAA,CAAe,EAAE,GAAG,gBAAkB,EAAA,MAAA,EAAQ,eAAe,CAAA;AAAA,eACtD,CAAG,EAAA;AACV,QAAA,QAAA,CAAS,CAAC,CAAA;AAAA;AACZ;AAGF,IAA2B,0BAAA,EAAA;AAAA,GAC7B,EAAG,CAAC,MAAM,CAAC,CAAA;AAEX,EAAA,SAAA,CAAU,MAAM;AACd,IAAA,SAAS,2BAA2B,OAAsB,EAAA;AACxD,MAAA,MAAM,cAAc,SAAU,CAAA;AAAA,QAC5B,OAAO,OAAQ,CAAA,KAAA;AAAA,QACf,GAAI,QAAQ,OAAU,GAAA,EAAE,SAAS,OAAQ,CAAA,OAAA,KAAY;AAAC,OACvD,CAAA;AAID,MAAA,QAAA,CAAS,EAAE,GAAG,QAAA,EAAU,QAAQ,CAAI,CAAA,EAAA,WAAW,IAAI,CAAA;AAAA;AAGrD,IAAA,IAAI,WAAa,EAAA;AACf,MAAA,0BAAA,CAA2B,WAAW,CAAA;AAAA;AACxC,GACF,EAAG,CAAC,WAAW,CAAC,CAAA;AAEhB,EAAA,IAAI,KAAO,EAAA;AACT,IAAA,uBAAQ,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAM,QAAS,EAAA,OAAA,EAAA,EAAS,MAAM,OAAQ,CAAA;AAAA;AAIhD,EAAI,IAAA,CAAC,WAAe,IAAA,CAAC,cAAgB,EAAA;AACnC,IAAO,OAAA,IAAA;AAAA;AAGT,EACE,uBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,aAAc,CAAA,QAAA;AAAA,IAAd;AAAA,MACC,KAAO,EAAA,EAAE,WAAa,EAAA,cAAA,EAAgB,gBAAgB,iBAAkB;AAAA,KAAA;AAAA,IAEvE;AAAA,GACH;AAEJ;AAEO,SAAS,WAAc,iBAA4C,EAAA;AACxE,EAAM,MAAA,OAAA,GAAU,WAAW,aAAa,CAAA;AACxC,EAAA,OAAO,OAAU,GAAA,iBAAA,CAAkB,OAAO,CAAA,GAAI,WAAY,EAAA;AAC5D;AAEA,SAAS,WAAqB,GAAA;AAC5B,EAAA,MAAM,MAAM,iDAAiD,CAAA;AAC/D;;;;"}