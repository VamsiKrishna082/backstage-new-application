{"version":3,"file":"useLastCompleteBillingDate.esm.js","sources":["../../src/hooks/useLastCompleteBillingDate.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, {\n  PropsWithChildren,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport * as yup from 'yup';\nimport Alert from '@material-ui/lab/Alert';\nimport { costInsightsApiRef } from '../api';\nimport { MapLoadingToProps, useLoading } from './useLoading';\nimport { DefaultLoadingAction } from '../utils/loading';\nimport { Maybe } from '@backstage-community/plugin-cost-insights-common';\nimport { useApi } from '@backstage/core-plugin-api';\n\ntype BillingDateProviderLoadingProps = {\n  dispatchLoadingBillingDate: (isLoading: boolean) => void;\n};\n\nconst mapLoadingToProps: MapLoadingToProps<BillingDateProviderLoadingProps> = ({\n  dispatch,\n}) => ({\n  dispatchLoadingBillingDate: (isLoading: boolean) =>\n    dispatch({ [DefaultLoadingAction.LastCompleteBillingDate]: isLoading }),\n});\n\nexport type BillingDateContextProps = {\n  lastCompleteBillingDate: string; // YYYY-MM-DD\n};\n\nexport const BillingDateContext = React.createContext<\n  BillingDateContextProps | undefined\n>(undefined);\n\nexport const dateRegex: RegExp = /^\\d{4}-\\d{2}-\\d{2}$/;\nconst dateFormatSchema = yup.string().matches(dateRegex, {\n  message:\n    'Unsupported billing date format: ${value}. Date should be in YYYY-MM-DD format.',\n  excludeEmptyString: true,\n});\n\nexport const BillingDateProvider = ({ children }: PropsWithChildren<{}>) => {\n  const client = useApi(costInsightsApiRef);\n  const [error, setError] = useState<Maybe<Error>>(null);\n  const { dispatchLoadingBillingDate } = useLoading(mapLoadingToProps);\n\n  const [lastCompleteBillingDate, setLastCompeteBillingDate] =\n    useState<Maybe<string>>(null);\n\n  useEffect(() => {\n    dispatchLoadingBillingDate(true);\n\n    async function getLastCompleteBillingDate() {\n      try {\n        const d = await client.getLastCompleteBillingDate();\n        const validDate = await dateFormatSchema.validate(d);\n        if (validDate) setLastCompeteBillingDate(validDate);\n      } catch (e) {\n        setError(e);\n      } finally {\n        dispatchLoadingBillingDate(false);\n      }\n    }\n\n    getLastCompleteBillingDate();\n  }, [client]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (error) {\n    return <Alert severity=\"error\">{error.message}</Alert>;\n  }\n\n  if (!lastCompleteBillingDate) return null;\n\n  return (\n    <BillingDateContext.Provider\n      value={\n        {\n          lastCompleteBillingDate: lastCompleteBillingDate,\n        } as BillingDateContextProps\n      }\n    >\n      {children}\n    </BillingDateContext.Provider>\n  );\n};\n\nexport function useLastCompleteBillingDate(): string {\n  const context = useContext(BillingDateContext);\n  return context ? context.lastCompleteBillingDate : assertNever();\n}\n\nfunction assertNever(): never {\n  throw Error(\n    'Cannot use useLastCompleteBillingDate outside of BillingDateProvider',\n  );\n}\n"],"names":[],"mappings":";;;;;;;;AAkCA,MAAM,oBAAwE,CAAC;AAAA,EAC7E;AACF,CAAO,MAAA;AAAA,EACL,0BAAA,EAA4B,CAAC,SAAA,KAC3B,QAAS,CAAA,EAAE,CAAC,oBAAqB,CAAA,uBAAuB,GAAG,SAAA,EAAW;AAC1E,CAAA,CAAA;AAMa,MAAA,kBAAA,GAAqB,KAAM,CAAA,aAAA,CAEtC,KAAS,CAAA;AAEJ,MAAM,SAAoB,GAAA;AACjC,MAAM,gBAAmB,GAAA,GAAA,CAAI,MAAO,EAAA,CAAE,QAAQ,SAAW,EAAA;AAAA,EACvD,OACE,EAAA,iFAAA;AAAA,EACF,kBAAoB,EAAA;AACtB,CAAC,CAAA;AAEM,MAAM,mBAAsB,GAAA,CAAC,EAAE,QAAA,EAAsC,KAAA;AAC1E,EAAM,MAAA,MAAA,GAAS,OAAO,kBAAkB,CAAA;AACxC,EAAA,MAAM,CAAC,KAAA,EAAO,QAAQ,CAAA,GAAI,SAAuB,IAAI,CAAA;AACrD,EAAA,MAAM,EAAE,0BAAA,EAA+B,GAAA,UAAA,CAAW,iBAAiB,CAAA;AAEnE,EAAA,MAAM,CAAC,uBAAA,EAAyB,yBAAyB,CAAA,GACvD,SAAwB,IAAI,CAAA;AAE9B,EAAA,SAAA,CAAU,MAAM;AACd,IAAA,0BAAA,CAA2B,IAAI,CAAA;AAE/B,IAAA,eAAe,0BAA6B,GAAA;AAC1C,MAAI,IAAA;AACF,QAAM,MAAA,CAAA,GAAI,MAAM,MAAA,CAAO,0BAA2B,EAAA;AAClD,QAAA,MAAM,SAAY,GAAA,MAAM,gBAAiB,CAAA,QAAA,CAAS,CAAC,CAAA;AACnD,QAAI,IAAA,SAAA,4BAAqC,SAAS,CAAA;AAAA,eAC3C,CAAG,EAAA;AACV,QAAA,QAAA,CAAS,CAAC,CAAA;AAAA,OACV,SAAA;AACA,QAAA,0BAAA,CAA2B,KAAK,CAAA;AAAA;AAClC;AAGF,IAA2B,0BAAA,EAAA;AAAA,GAC7B,EAAG,CAAC,MAAM,CAAC,CAAA;AAEX,EAAA,IAAI,KAAO,EAAA;AACT,IAAA,uBAAQ,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAM,QAAS,EAAA,OAAA,EAAA,EAAS,MAAM,OAAQ,CAAA;AAAA;AAGhD,EAAI,IAAA,CAAC,yBAAgC,OAAA,IAAA;AAErC,EACE,uBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,kBAAmB,CAAA,QAAA;AAAA,IAAnB;AAAA,MACC,KACE,EAAA;AAAA,QACE;AAAA;AACF,KAAA;AAAA,IAGD;AAAA,GACH;AAEJ;AAEO,SAAS,0BAAqC,GAAA;AACnD,EAAM,MAAA,OAAA,GAAU,WAAW,kBAAkB,CAAA;AAC7C,EAAO,OAAA,OAAA,GAAU,OAAQ,CAAA,uBAAA,GAA0B,WAAY,EAAA;AACjE;AAEA,SAAS,WAAqB,GAAA;AAC5B,EAAM,MAAA,KAAA;AAAA,IACJ;AAAA,GACF;AACF;;;;"}