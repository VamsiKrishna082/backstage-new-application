import { createRouteRef, createPlugin, createRoutableExtension } from '@backstage/core-plugin-api';

const rootRouteRef = createRouteRef({
  id: "cost-insights"
});
const projectGrowthAlertRef = createRouteRef({
  id: "cost-insights:investigating-growth"
});
const unlabeledDataflowAlertRef = createRouteRef({
  id: "cost-insights:labeling-jobs"
});
const costInsightsPlugin = createPlugin({
  id: "cost-insights",
  featureFlags: [{ name: "cost-insights-currencies" }],
  routes: {
    root: rootRouteRef,
    growthAlerts: projectGrowthAlertRef,
    unlabeledDataflowAlerts: unlabeledDataflowAlertRef
  }
});
const CostInsightsPage = costInsightsPlugin.provide(
  createRoutableExtension({
    name: "CostInsightsPage",
    component: () => import('./components/CostInsightsPage/index.esm.js').then((m) => m.CostInsightsPage),
    mountPoint: rootRouteRef
  })
);
const EntityCostInsightsContent = costInsightsPlugin.provide(
  createRoutableExtension({
    name: "EntityCostInsightsContent",
    component: () => import('./components/EntityCosts/index.esm.js').then((m) => m.EntityCosts),
    mountPoint: rootRouteRef
  })
);
const CostInsightsProjectGrowthInstructionsPage = costInsightsPlugin.provide(
  createRoutableExtension({
    name: "CostInsightsProjectGrowthInstructionsPage",
    component: () => import('./components/ProjectGrowthInstructionsPage/index.esm.js').then(
      (m) => m.ProjectGrowthInstructionsPage
    ),
    mountPoint: projectGrowthAlertRef
  })
);
const CostInsightsLabelDataflowInstructionsPage = costInsightsPlugin.provide(
  createRoutableExtension({
    name: "CostInsightsLabelDataflowInstructionsPage",
    component: () => import('./components/LabelDataflowInstructionsPage/index.esm.js').then(
      (m) => m.LabelDataflowInstructionsPage
    ),
    mountPoint: unlabeledDataflowAlertRef
  })
);

export { CostInsightsLabelDataflowInstructionsPage, CostInsightsPage, CostInsightsProjectGrowthInstructionsPage, EntityCostInsightsContent, costInsightsPlugin, projectGrowthAlertRef, rootRouteRef, unlabeledDataflowAlertRef };
//# sourceMappingURL=plugin.esm.js.map
