import { findAlways } from '../utils/assert.esm.js';

const createMockProduct = (callback) => {
  const defaultProduct = {
    kind: "compute-engine",
    name: "Compute Engine"
  };
  if (typeof callback === "function") {
    return callback({ ...defaultProduct });
  }
  return { ...defaultProduct };
};
const MockProductTypes = {
  "compute-engine": "Compute Engine",
  "cloud-dataflow": "Cloud Dataflow",
  "cloud-storage": "Cloud Storage",
  "big-query": "Big Query",
  "big-table": "BigTable",
  "cloud-pub-sub": "Cloud Pub/Sub"
};
const MockProducts = Object.keys(MockProductTypes).map(
  (productType) => createMockProduct(() => ({
    kind: productType,
    name: MockProductTypes[productType]
  }))
);
findAlways(
  MockProducts,
  (p) => p.kind === "compute-engine"
);
findAlways(
  MockProducts,
  (p) => p.kind === "cloud-dataflow"
);
findAlways(
  MockProducts,
  (p) => p.kind === "cloud-storage"
);
findAlways(
  MockProducts,
  (p) => p.kind === "big-query"
);
findAlways(
  MockProducts,
  (p) => p.kind === "big-table"
);

export { MockProductTypes, MockProducts, createMockProduct };
//# sourceMappingURL=products.esm.js.map
