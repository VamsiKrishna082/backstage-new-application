import React from 'react';
import { ConfigContext } from '../hooks/useConfig.esm.js';
import { CurrencyContext } from '../hooks/useCurrency.esm.js';
import '../hooks/useFilters.esm.js';
import '../hooks/useGroups.esm.js';
import '../hooks/useLoading.esm.js';
import '../hooks/useScroll.esm.js';
import '../hooks/useLastCompleteBillingDate.esm.js';
import '../types/Alert.esm.js';
import { EngineerThreshold } from '../types/ChangeStatistic.esm.js';
import { createCurrencyFormat } from '../utils/currency.esm.js';

const MockConfigProvider = (props) => {
  const { children, ...context } = props;
  const defaultContext = {
    baseCurrency: createCurrencyFormat(),
    metrics: [],
    products: [],
    icons: [],
    engineerCost: 0,
    engineerThreshold: EngineerThreshold,
    hideTrendLine: false,
    currencies: []
  };
  return /* @__PURE__ */ React.createElement(ConfigContext.Provider, { value: { ...defaultContext, ...context } }, children);
};
const MockCurrencyProvider = (props) => {
  const { children, ...context } = props;
  const defaultContext = {
    currency: {
      kind: null,
      label: "Engineers \u{1F6E0}",
      unit: "engineer"
    },
    setCurrency: jest.fn()
  };
  return /* @__PURE__ */ React.createElement(CurrencyContext.Provider, { value: { ...defaultContext, ...context } }, children);
};

export { MockConfigProvider, MockCurrencyProvider };
//# sourceMappingURL=providers.esm.js.map
