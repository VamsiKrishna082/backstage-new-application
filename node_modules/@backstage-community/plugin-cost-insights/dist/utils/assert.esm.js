function notEmpty(value) {
  return !isNull(value) && !isUndefined(value);
}
function isUndefined(value) {
  return value === void 0;
}
function isNull(value) {
  return value === null;
}
function assertNever(x) {
  throw new Error(`Exhaustiveness check failed: ${x}`);
}
function assertAlways(argument) {
  if (argument === void 0) {
    throw new TypeError(
      "Expected to always find a value but received undefined"
    );
  }
  return argument;
}
function findAlways(collection, callback) {
  return assertAlways(collection.find(callback));
}
function findAnyKey(record) {
  return Object.keys(record ?? {}).find((_) => true);
}

export { assertAlways, assertNever, findAlways, findAnyKey, isNull, isUndefined, notEmpty };
//# sourceMappingURL=assert.esm.js.map
