import '../types/Alert.esm.js';
import { CurrencyType } from '../types/CurrencyType.esm.js';
import { Duration } from '../types/Duration.esm.js';
import { assertNever } from './assert.esm.js';

const rateOf = (cost, duration) => {
  switch (duration) {
    case Duration.P30D:
      return cost / 12;
    case Duration.P7D:
    case Duration.P90D:
    case Duration.P3M:
      return cost / 4;
    default:
      return assertNever(duration);
  }
};
const defaultCurrencies = [
  {
    kind: null,
    label: "Engineers \u{1F6E0}",
    unit: "engineer"
  },
  {
    kind: CurrencyType.USD,
    label: "US Dollars \u{1F4B5}",
    unit: "dollar",
    prefix: "$",
    rate: 1
  },
  {
    kind: CurrencyType.CarbonOffsetTons,
    label: "Carbon Offset Tons \u267B\uFE0F\u2696\uFE0Fs",
    unit: "carbon offset ton",
    rate: 3.5
  },
  {
    kind: CurrencyType.Beers,
    label: "Beers \u{1F37A}",
    unit: "beer",
    rate: 4.5
  },
  {
    kind: CurrencyType.IceCream,
    label: "Pints of Ice Cream \u{1F366}",
    unit: "ice cream pint",
    rate: 5.5
  }
];
const createCurrencyFormat = (currency = "USD", locale = "en-US") => new Intl.NumberFormat(locale, {
  currency,
  style: "currency"
});

export { createCurrencyFormat, defaultCurrencies, rateOf };
//# sourceMappingURL=currency.esm.js.map
