import { DateTime, Duration as Duration$1 } from 'luxon';
import '../types/Alert.esm.js';
import { DEFAULT_DATE_FORMAT } from '../types/DateFormat.esm.js';
import { Duration } from '../types/Duration.esm.js';
import { assertNever } from './assert.esm.js';

const DEFAULT_DURATION = Duration.P30D;
function inclusiveStartDateOf(duration, inclusiveEndDate) {
  switch (duration) {
    case Duration.P7D:
    case Duration.P30D:
    case Duration.P90D:
      return DateTime.fromISO(inclusiveEndDate).minus(
        Duration$1.fromISO(duration).plus(Duration$1.fromISO(duration))
      ).toFormat(DEFAULT_DATE_FORMAT);
    case Duration.P3M:
      return DateTime.fromISO(inclusiveEndDate).startOf("quarter").minus(
        Duration$1.fromISO(duration).plus(Duration$1.fromISO(duration))
      ).toFormat(DEFAULT_DATE_FORMAT);
    default:
      return assertNever(duration);
  }
}
function exclusiveEndDateOf(duration, inclusiveEndDate) {
  switch (duration) {
    case Duration.P7D:
    case Duration.P30D:
    case Duration.P90D:
      return DateTime.fromISO(inclusiveEndDate).plus({ days: 1 }).toFormat(DEFAULT_DATE_FORMAT);
    case Duration.P3M:
      return DateTime.fromISO(quarterEndDate(inclusiveEndDate)).plus({ days: 1 }).toFormat(DEFAULT_DATE_FORMAT);
    default:
      return assertNever(duration);
  }
}
function inclusiveEndDateOf(duration, inclusiveEndDate) {
  return DateTime.fromISO(exclusiveEndDateOf(duration, inclusiveEndDate)).minus({ days: 1 }).toFormat(DEFAULT_DATE_FORMAT);
}
function intervalsOf(duration, inclusiveEndDate, repeating = 2) {
  return `R${repeating}/${duration}/${exclusiveEndDateOf(
    duration,
    inclusiveEndDate
  )}`;
}
function quarterEndDate(inclusiveEndDate) {
  const endDate = DateTime.fromISO(inclusiveEndDate);
  const endOfQuarter = endDate.endOf("quarter").toFormat(DEFAULT_DATE_FORMAT);
  if (endOfQuarter === inclusiveEndDate) {
    return endDate.toFormat(DEFAULT_DATE_FORMAT);
  }
  return endDate.startOf("quarter").minus({ days: 1 }).toFormat(DEFAULT_DATE_FORMAT);
}

export { DEFAULT_DURATION, exclusiveEndDateOf, inclusiveEndDateOf, inclusiveStartDateOf, intervalsOf, quarterEndDate };
//# sourceMappingURL=duration.esm.js.map
