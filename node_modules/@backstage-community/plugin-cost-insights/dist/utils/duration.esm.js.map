{"version":3,"file":"duration.esm.js","sources":["../../src/utils/duration.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DateTime, Duration as LuxonDuration } from 'luxon';\nimport { Duration, DEFAULT_DATE_FORMAT } from '../types';\nimport { assertNever } from './assert';\n\nexport const DEFAULT_DURATION = Duration.P30D;\n\n/**\n * Derive the start date of a given period, assuming two repeating intervals.\n *\n * @param duration - see comment on Duration enum\n * @param inclusiveEndDate - from CostInsightsApi.getLastCompleteBillingDate\n */\nexport function inclusiveStartDateOf(\n  duration: Duration,\n  inclusiveEndDate: string,\n): string {\n  switch (duration) {\n    case Duration.P7D:\n    case Duration.P30D:\n    case Duration.P90D:\n      return DateTime.fromISO(inclusiveEndDate)\n        .minus(\n          LuxonDuration.fromISO(duration).plus(LuxonDuration.fromISO(duration)),\n        )\n        .toFormat(DEFAULT_DATE_FORMAT);\n    case Duration.P3M:\n      return DateTime.fromISO(inclusiveEndDate)\n        .startOf('quarter')\n        .minus(\n          LuxonDuration.fromISO(duration).plus(LuxonDuration.fromISO(duration)),\n        )\n        .toFormat(DEFAULT_DATE_FORMAT);\n    default:\n      return assertNever(duration);\n  }\n}\n\nexport function exclusiveEndDateOf(\n  duration: Duration,\n  inclusiveEndDate: string,\n): string {\n  switch (duration) {\n    case Duration.P7D:\n    case Duration.P30D:\n    case Duration.P90D:\n      return DateTime.fromISO(inclusiveEndDate)\n        .plus({ days: 1 })\n        .toFormat(DEFAULT_DATE_FORMAT);\n    case Duration.P3M:\n      return DateTime.fromISO(quarterEndDate(inclusiveEndDate))\n        .plus({ days: 1 })\n        .toFormat(DEFAULT_DATE_FORMAT);\n    default:\n      return assertNever(duration);\n  }\n}\n\nexport function inclusiveEndDateOf(\n  duration: Duration,\n  inclusiveEndDate: string,\n): string {\n  return DateTime.fromISO(exclusiveEndDateOf(duration, inclusiveEndDate))\n    .minus({ days: 1 })\n    .toFormat(DEFAULT_DATE_FORMAT);\n}\n\n// https://en.wikipedia.org/wiki/ISO_8601#Repeating_intervals\nexport function intervalsOf(\n  duration: Duration,\n  inclusiveEndDate: string,\n  repeating: number = 2,\n) {\n  return `R${repeating}/${duration}/${exclusiveEndDateOf(\n    duration,\n    inclusiveEndDate,\n  )}`;\n}\n\nexport function quarterEndDate(inclusiveEndDate: string): string {\n  const endDate = DateTime.fromISO(inclusiveEndDate);\n  const endOfQuarter = endDate.endOf('quarter').toFormat(DEFAULT_DATE_FORMAT);\n  if (endOfQuarter === inclusiveEndDate) {\n    return endDate.toFormat(DEFAULT_DATE_FORMAT);\n  }\n  return endDate\n    .startOf('quarter')\n    .minus({ days: 1 })\n    .toFormat(DEFAULT_DATE_FORMAT);\n}\n"],"names":["LuxonDuration"],"mappings":";;;;;;AAoBO,MAAM,mBAAmB,QAAS,CAAA;AAQzB,SAAA,oBAAA,CACd,UACA,gBACQ,EAAA;AACR,EAAA,QAAQ,QAAU;AAAA,IAChB,KAAK,QAAS,CAAA,GAAA;AAAA,IACd,KAAK,QAAS,CAAA,IAAA;AAAA,IACd,KAAK,QAAS,CAAA,IAAA;AACZ,MAAO,OAAA,QAAA,CAAS,OAAQ,CAAA,gBAAgB,CACrC,CAAA,KAAA;AAAA,QACCA,UAAA,CAAc,QAAQ,QAAQ,CAAA,CAAE,KAAKA,UAAc,CAAA,OAAA,CAAQ,QAAQ,CAAC;AAAA,OACtE,CACC,SAAS,mBAAmB,CAAA;AAAA,IACjC,KAAK,QAAS,CAAA,GAAA;AACZ,MAAA,OAAO,SAAS,OAAQ,CAAA,gBAAgB,CACrC,CAAA,OAAA,CAAQ,SAAS,CACjB,CAAA,KAAA;AAAA,QACCA,UAAA,CAAc,QAAQ,QAAQ,CAAA,CAAE,KAAKA,UAAc,CAAA,OAAA,CAAQ,QAAQ,CAAC;AAAA,OACtE,CACC,SAAS,mBAAmB,CAAA;AAAA,IACjC;AACE,MAAA,OAAO,YAAY,QAAQ,CAAA;AAAA;AAEjC;AAEgB,SAAA,kBAAA,CACd,UACA,gBACQ,EAAA;AACR,EAAA,QAAQ,QAAU;AAAA,IAChB,KAAK,QAAS,CAAA,GAAA;AAAA,IACd,KAAK,QAAS,CAAA,IAAA;AAAA,IACd,KAAK,QAAS,CAAA,IAAA;AACZ,MAAO,OAAA,QAAA,CAAS,OAAQ,CAAA,gBAAgB,CACrC,CAAA,IAAA,CAAK,EAAE,IAAA,EAAM,CAAE,EAAC,CAChB,CAAA,QAAA,CAAS,mBAAmB,CAAA;AAAA,IACjC,KAAK,QAAS,CAAA,GAAA;AACZ,MAAA,OAAO,QAAS,CAAA,OAAA,CAAQ,cAAe,CAAA,gBAAgB,CAAC,CAAA,CACrD,IAAK,CAAA,EAAE,IAAM,EAAA,CAAA,EAAG,CAAA,CAChB,SAAS,mBAAmB,CAAA;AAAA,IACjC;AACE,MAAA,OAAO,YAAY,QAAQ,CAAA;AAAA;AAEjC;AAEgB,SAAA,kBAAA,CACd,UACA,gBACQ,EAAA;AACR,EAAA,OAAO,QAAS,CAAA,OAAA,CAAQ,kBAAmB,CAAA,QAAA,EAAU,gBAAgB,CAAC,CAAA,CACnE,KAAM,CAAA,EAAE,IAAM,EAAA,CAAA,EAAG,CAAA,CACjB,SAAS,mBAAmB,CAAA;AACjC;AAGO,SAAS,WACd,CAAA,QAAA,EACA,gBACA,EAAA,SAAA,GAAoB,CACpB,EAAA;AACA,EAAA,OAAO,CAAI,CAAA,EAAA,SAAS,CAAI,CAAA,EAAA,QAAQ,CAAI,CAAA,EAAA,kBAAA;AAAA,IAClC,QAAA;AAAA,IACA;AAAA,GACD,CAAA,CAAA;AACH;AAEO,SAAS,eAAe,gBAAkC,EAAA;AAC/D,EAAM,MAAA,OAAA,GAAU,QAAS,CAAA,OAAA,CAAQ,gBAAgB,CAAA;AACjD,EAAA,MAAM,eAAe,OAAQ,CAAA,KAAA,CAAM,SAAS,CAAA,CAAE,SAAS,mBAAmB,CAAA;AAC1E,EAAA,IAAI,iBAAiB,gBAAkB,EAAA;AACrC,IAAO,OAAA,OAAA,CAAQ,SAAS,mBAAmB,CAAA;AAAA;AAE7C,EAAO,OAAA,OAAA,CACJ,OAAQ,CAAA,SAAS,CACjB,CAAA,KAAA,CAAM,EAAE,IAAA,EAAM,CAAE,EAAC,CACjB,CAAA,QAAA,CAAS,mBAAmB,CAAA;AACjC;;;;"}