import qs from 'qs';
import * as yup from 'yup';
import '../types/Alert.esm.js';
import { Duration } from '../types/Duration.esm.js';
import { getDefaultPageFilters } from './filters.esm.js';

const schema = yup.object().shape({
  group: yup.string().nullable(),
  project: yup.string().nullable()
}).required();
const stringify = (queryParams) => qs.stringify(queryParams, { strictNullHandling: true });
const parse = (queryString) => qs.parse(queryString, { ignoreQueryPrefix: true, strictNullHandling: true });
const validate = (queryString) => {
  return schema.validate(parse(queryString), {
    stripUnknown: true,
    strict: true
  });
};
const getInitialPageState = (groups, queryParams = {}) => {
  return {
    ...getDefaultPageFilters(groups),
    ...queryParams.project ? { project: queryParams.project } : {},
    ...queryParams.group ? { group: queryParams.group } : {}
  };
};
const getInitialProductState = (config) => config.products.map((product) => ({
  productType: product.kind,
  duration: Duration.P30D
}));

export { getInitialPageState, getInitialProductState, parse, stringify, validate };
//# sourceMappingURL=history.esm.js.map
