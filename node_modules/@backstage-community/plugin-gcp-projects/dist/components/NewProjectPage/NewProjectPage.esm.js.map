{"version":3,"file":"NewProjectPage.esm.js","sources":["../../../src/components/NewProjectPage/NewProjectPage.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport { useState } from 'react';\nimport {\n  Content,\n  ContentHeader,\n  Header,\n  HeaderLabel,\n  InfoCard,\n  Page,\n  SimpleStepper,\n  SimpleStepperStep,\n  StructuredMetadataTable,\n  SupportButton,\n} from '@backstage/core-components';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport { useRouteRef } from '@backstage/core-plugin-api';\nimport { rootRouteRef } from '../../routes';\n\nexport const Project = () => {\n  const [projectName, setProjectName] = useState('');\n  const [projectId, setProjectId] = useState('');\n  const [disabled, setDisabled] = useState(true);\n\n  const metadata = {\n    ProjectName: projectName,\n    ProjectId: projectId,\n  };\n\n  return (\n    <Content>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6}>\n          <InfoCard title=\"Create new GCP Project\">\n            <SimpleStepper>\n              <SimpleStepperStep title=\"Project Name\">\n                <TextField\n                  variant=\"outlined\"\n                  name=\"projectName\"\n                  label=\"Project Name\"\n                  helperText=\"The name of the new project.\"\n                  inputProps={{ 'aria-label': 'Project Name' }}\n                  onChange={e => setProjectName(e.target.value)}\n                  value={projectName}\n                  fullWidth\n                />\n              </SimpleStepperStep>\n              <SimpleStepperStep title=\"Project ID\">\n                <TextField\n                  variant=\"outlined\"\n                  name=\"projectId\"\n                  label=\"projectId\"\n                  onChange={e => setProjectId(e.target.value)}\n                  value={projectId}\n                  fullWidth\n                />\n              </SimpleStepperStep>\n\n              <SimpleStepperStep\n                title=\"Review\"\n                actions={{\n                  nextText: 'Confirm',\n                  onNext: () => setDisabled(false),\n                }}\n              >\n                <StructuredMetadataTable metadata={metadata} />\n              </SimpleStepperStep>\n            </SimpleStepper>\n            <Button\n              component={RouterLink}\n              variant=\"text\"\n              data-testid=\"cancel-button\"\n              color=\"primary\"\n              to=\"/gcp-projects\"\n            >\n              Cancel\n            </Button>\n            <Button\n              component={RouterLink}\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={disabled}\n              to={`newProject?projectName=${encodeURIComponent(\n                projectName,\n              )},projectId=${encodeURIComponent(projectId)}`}\n            >\n              Create\n            </Button>\n          </InfoCard>\n        </Grid>\n      </Grid>\n    </Content>\n  );\n};\n\nconst labels = (\n  <>\n    <HeaderLabel label=\"Owner\" value=\"Spotify\" />\n    <HeaderLabel label=\"Lifecycle\" value=\"Production\" />\n  </>\n);\n\nexport const NewProjectPage = () => {\n  const docsRootLink = useRouteRef(rootRouteRef)();\n  return (\n    <Page themeId=\"tool\">\n      <Header title=\"New GCP Project\" type=\"GCP\" typeLink={docsRootLink}>\n        {labels}\n      </Header>\n      <Content>\n        <ContentHeader title=\"\">\n          <SupportButton>\n            This plugin allows you to view and interact with your gcp projects.\n          </SupportButton>\n        </ContentHeader>\n        <Project />\n      </Content>\n    </Page>\n  );\n};\n"],"names":["RouterLink"],"mappings":"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"}