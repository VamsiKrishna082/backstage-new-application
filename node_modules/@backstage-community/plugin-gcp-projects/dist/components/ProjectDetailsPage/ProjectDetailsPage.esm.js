import { jsxs, jsx, Fragment } from 'react/jsx-runtime';
import Button from '@material-ui/core/Button';
import ButtonGroup from '@material-ui/core/ButtonGroup';
import LinearProgress from '@material-ui/core/LinearProgress';
import Paper from '@material-ui/core/Paper';
import Table from '@material-ui/core/Table';
import TableBody from '@material-ui/core/TableBody';
import TableCell from '@material-ui/core/TableCell';
import TableRow from '@material-ui/core/TableRow';
import Typography from '@material-ui/core/Typography';
import { makeStyles } from '@material-ui/core/styles';
import { useAsync, useMountEffect } from '@react-hookz/web';
import { gcpApiRef } from '../../api/GcpApi.esm.js';
import { Page, Header, Content, ContentHeader, SupportButton, WarningPanel, HeaderLabel } from '@backstage/core-components';
import { useRouteRef, useApi } from '@backstage/core-plugin-api';
import { rootRouteRef } from '../../routes.esm.js';

const useStyles = makeStyles((theme) => ({
  root: {
    maxWidth: 720,
    margin: theme.spacing(2)
  },
  title: {
    padding: theme.spacing(1, 0, 2, 0)
  },
  table: {
    padding: theme.spacing(1)
  }
}));
const DetailsPage = () => {
  const api = useApi(gcpApiRef);
  const classes = useStyles();
  const [{ status, result: details, error }, { execute }] = useAsync(
    async () => api.getProject(
      decodeURIComponent(window.location.search.split("projectId=")[1])
    )
  );
  useMountEffect(execute);
  if (status === "loading") {
    return /* @__PURE__ */ jsx(LinearProgress, {});
  } else if (error) {
    return /* @__PURE__ */ jsx(WarningPanel, { title: "Failed to load project", children: error.toString() });
  }
  const cloud_home_url = "https://console.cloud.google.com";
  return /* @__PURE__ */ jsx(Table, { component: Paper, className: classes.table, children: /* @__PURE__ */ jsx(Table, { children: /* @__PURE__ */ jsxs(TableBody, { children: [
    /* @__PURE__ */ jsxs(TableRow, { children: [
      /* @__PURE__ */ jsx(TableCell, { children: /* @__PURE__ */ jsx(Typography, { noWrap: true, children: "Name" }) }),
      /* @__PURE__ */ jsx(TableCell, { children: details?.name })
    ] }),
    /* @__PURE__ */ jsxs(TableRow, { children: [
      /* @__PURE__ */ jsx(TableCell, { children: /* @__PURE__ */ jsx(Typography, { noWrap: true, children: "Project Number" }) }),
      /* @__PURE__ */ jsx(TableCell, { children: details?.projectNumber })
    ] }),
    /* @__PURE__ */ jsxs(TableRow, { children: [
      /* @__PURE__ */ jsx(TableCell, { children: /* @__PURE__ */ jsx(Typography, { noWrap: true, children: "Project ID" }) }),
      /* @__PURE__ */ jsx(TableCell, { children: details?.projectId })
    ] }),
    /* @__PURE__ */ jsxs(TableRow, { children: [
      /* @__PURE__ */ jsx(TableCell, { children: /* @__PURE__ */ jsx(Typography, { noWrap: true, children: "State" }) }),
      /* @__PURE__ */ jsx(TableCell, { children: details?.lifecycleState })
    ] }),
    /* @__PURE__ */ jsxs(TableRow, { children: [
      /* @__PURE__ */ jsx(TableCell, { children: /* @__PURE__ */ jsx(Typography, { noWrap: true, children: "Creation Time" }) }),
      /* @__PURE__ */ jsx(TableCell, { children: details?.createTime })
    ] }),
    /* @__PURE__ */ jsxs(TableRow, { children: [
      /* @__PURE__ */ jsx(TableCell, { children: /* @__PURE__ */ jsx(Typography, { noWrap: true, children: "Links" }) }),
      /* @__PURE__ */ jsx(TableCell, { children: /* @__PURE__ */ jsxs(
        ButtonGroup,
        {
          variant: "text",
          color: "primary",
          "aria-label": "text primary button group",
          children: [
            details?.name && /* @__PURE__ */ jsx(Button, { children: /* @__PURE__ */ jsx(
              "a",
              {
                href: `${cloud_home_url}/home/dashboard?project=${details.projectId}&supportedpurview=project`,
                target: "_blank",
                rel: "noreferrer noopener",
                children: "GCP"
              }
            ) }),
            details?.name && /* @__PURE__ */ jsx(Button, { children: /* @__PURE__ */ jsx(
              "a",
              {
                href: `${cloud_home_url}/logs/query?project=${details.projectId}&supportedpurview=project`,
                target: "_blank",
                rel: "noreferrer noopener",
                children: "Logs"
              }
            ) })
          ]
        }
      ) })
    ] })
  ] }) }) });
};
const labels = /* @__PURE__ */ jsxs(Fragment, { children: [
  /* @__PURE__ */ jsx(HeaderLabel, { label: "Owner", value: "Spotify" }),
  /* @__PURE__ */ jsx(HeaderLabel, { label: "Lifecycle", value: "Production" })
] });
const ProjectDetailsPage = () => {
  const docsRootLink = useRouteRef(rootRouteRef)();
  return /* @__PURE__ */ jsxs(Page, { themeId: "service", children: [
    /* @__PURE__ */ jsx(Header, { title: "GCP Project Details", type: "GCP", typeLink: docsRootLink, children: labels }),
    /* @__PURE__ */ jsxs(Content, { children: [
      /* @__PURE__ */ jsx(ContentHeader, { title: "", children: /* @__PURE__ */ jsx(SupportButton, { children: "Support Button" }) }),
      /* @__PURE__ */ jsx(DetailsPage, {})
    ] })
  ] });
};

export { ProjectDetailsPage };
//# sourceMappingURL=ProjectDetailsPage.esm.js.map
