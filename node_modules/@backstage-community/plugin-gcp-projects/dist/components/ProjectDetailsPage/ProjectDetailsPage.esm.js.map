{"version":3,"file":"ProjectDetailsPage.esm.js","sources":["../../../src/components/ProjectDetailsPage/ProjectDetailsPage.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useAsync, useMountEffect } from '@react-hookz/web';\nimport { gcpApiRef } from '../../api';\n\nimport {\n  Content,\n  ContentHeader,\n  Header,\n  HeaderLabel,\n  Page,\n  SupportButton,\n  WarningPanel,\n} from '@backstage/core-components';\n\nimport { useApi, useRouteRef } from '@backstage/core-plugin-api';\nimport { rootRouteRef } from '../../routes';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 720,\n    margin: theme.spacing(2),\n  },\n  title: {\n    padding: theme.spacing(1, 0, 2, 0),\n  },\n  table: {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst DetailsPage = () => {\n  const api = useApi(gcpApiRef);\n  const classes = useStyles();\n\n  const [{ status, result: details, error }, { execute }] = useAsync(async () =>\n    api.getProject(\n      decodeURIComponent(window.location.search.split('projectId=')[1]),\n    ),\n  );\n\n  useMountEffect(execute);\n\n  if (status === 'loading') {\n    return <LinearProgress />;\n  } else if (error) {\n    return (\n      <WarningPanel title=\"Failed to load project\">\n        {error.toString()}\n      </WarningPanel>\n    );\n  }\n\n  const cloud_home_url = 'https://console.cloud.google.com';\n\n  return (\n    <Table component={Paper} className={classes.table}>\n      <Table>\n        <TableBody>\n          <TableRow>\n            <TableCell>\n              <Typography noWrap>Name</Typography>\n            </TableCell>\n            <TableCell>{details?.name}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography noWrap>Project Number</Typography>\n            </TableCell>\n            <TableCell>{details?.projectNumber}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography noWrap>Project ID</Typography>\n            </TableCell>\n            <TableCell>{details?.projectId}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography noWrap>State</Typography>\n            </TableCell>\n            <TableCell>{details?.lifecycleState}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography noWrap>Creation Time</Typography>\n            </TableCell>\n            <TableCell>{details?.createTime}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography noWrap>Links</Typography>\n            </TableCell>\n            <TableCell>\n              <ButtonGroup\n                variant=\"text\"\n                color=\"primary\"\n                aria-label=\"text primary button group\"\n              >\n                {details?.name && (\n                  <Button>\n                    <a\n                      href={`${cloud_home_url}/home/dashboard?project=${details.projectId}&supportedpurview=project`}\n                      target=\"_blank\"\n                      rel=\"noreferrer noopener\"\n                    >\n                      GCP\n                    </a>\n                  </Button>\n                )}\n                {details?.name && (\n                  <Button>\n                    <a\n                      href={`${cloud_home_url}/logs/query?project=${details.projectId}&supportedpurview=project`}\n                      target=\"_blank\"\n                      rel=\"noreferrer noopener\"\n                    >\n                      Logs\n                    </a>\n                  </Button>\n                )}\n              </ButtonGroup>\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </Table>\n  );\n};\n\nconst labels = (\n  <>\n    <HeaderLabel label=\"Owner\" value=\"Spotify\" />\n    <HeaderLabel label=\"Lifecycle\" value=\"Production\" />\n  </>\n);\n\nexport const ProjectDetailsPage = () => {\n  const docsRootLink = useRouteRef(rootRouteRef)();\n\n  return (\n    <Page themeId=\"service\">\n      <Header title=\"GCP Project Details\" type=\"GCP\" typeLink={docsRootLink}>\n        {labels}\n      </Header>\n      <Content>\n        <ContentHeader title=\"\">\n          <SupportButton>Support Button</SupportButton>\n        </ContentHeader>\n        <DetailsPage />\n      </Content>\n    </Page>\n  );\n};\n"],"names":[],"mappings":"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"}