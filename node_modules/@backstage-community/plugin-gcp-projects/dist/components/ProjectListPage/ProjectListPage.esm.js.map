{"version":3,"file":"ProjectListPage.esm.js","sources":["../../../src/components/ProjectListPage/ProjectListPage.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n//  NEEDS WORK\nimport Button from '@material-ui/core/Button';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport { useAsync, useMountEffect } from '@react-hookz/web';\nimport { gcpApiRef, Project } from '../../api';\n\nimport {\n  Content,\n  ContentHeader,\n  Header,\n  HeaderLabel,\n  Link,\n  Page,\n  Table,\n  SupportButton,\n  WarningPanel,\n} from '@backstage/core-components';\n\nimport { useApi } from '@backstage/core-plugin-api';\n\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst LongText = ({ text, max }: { text: string; max: number }) => {\n  if (text.length < max) {\n    return (\n      <Typography color=\"primary\" component=\"span\">\n        {text}\n      </Typography>\n    );\n  }\n  return (\n    <Tooltip title={text}>\n      <Typography color=\"primary\" component=\"span\">\n        {text.slice(0, max)}...\n      </Typography>\n    </Tooltip>\n  );\n};\n\nconst labels = (\n  <>\n    <HeaderLabel label=\"Owner\" value=\"Spotify\" />\n    <HeaderLabel label=\"Lifecycle\" value=\"Production\" />\n  </>\n);\n\nconst PageContents = () => {\n  const api = useApi(gcpApiRef);\n\n  const [{ status, result, error }, { execute }] = useAsync(() =>\n    api.listProjects(),\n  );\n  useMountEffect(execute);\n\n  if (status === 'loading') {\n    return <LinearProgress />;\n  } else if (error) {\n    return (\n      <WarningPanel title=\"Failed to load projects\">\n        {error.toString()}\n      </WarningPanel>\n    );\n  }\n\n  function renderLink(id: string) {\n    return (\n      <Link to={`project?projectId=${encodeURIComponent(id)}`}>\n        <Typography color=\"primary\">\n          <LongText text={id} max={60} />\n        </Typography>\n      </Link>\n    );\n  }\n\n  return (\n    <div style={{ height: '95%', width: '100%' }}>\n      <Table\n        columns={[\n          {\n            field: 'name',\n            title: 'Name',\n            defaultSort: 'asc',\n          },\n          {\n            field: 'projectNumber',\n            title: 'Project Number',\n          },\n          {\n            field: 'projectID',\n            title: 'Project ID',\n            render: (rowData: { id: string }) => renderLink(rowData.id),\n          },\n          {\n            field: 'state',\n            title: 'State',\n          },\n          {\n            field: 'creationTime',\n            title: 'Creation Time',\n          },\n        ]}\n        data={\n          result?.map((project: Project) => ({\n            id: project.projectId,\n            name: project.name,\n            projectNumber: project?.projectNumber || 'Error',\n            projectID: project.projectId,\n            state: project?.lifecycleState || 'Error',\n            creationTime: project?.createTime || 'Error',\n          })) || []\n        }\n        options={{\n          pageSize: 5,\n          pageSizeOptions: [5, 10, 25, 50, 100],\n        }}\n      />\n    </div>\n  );\n};\n\nexport const ProjectListPage = () => (\n  <Page themeId=\"service\">\n    <Header title=\"GCP Projects\" type=\"tool\">\n      {labels}\n    </Header>\n    <Content>\n      <ContentHeader title=\"\">\n        <Button\n          component={RouterLink}\n          variant=\"contained\"\n          color=\"primary\"\n          to=\"new\"\n        >\n          New Project\n        </Button>\n        <SupportButton>All your software catalog entities</SupportButton>\n      </ContentHeader>\n      <PageContents />\n    </Content>\n  </Page>\n);\n"],"names":["Link","RouterLink"],"mappings":"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"}