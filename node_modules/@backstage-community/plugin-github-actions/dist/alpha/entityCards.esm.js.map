{"version":3,"file":"entityCards.esm.js","sources":["../../src/alpha/entityCards.tsx"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EntityCardBlueprint } from '@backstage/plugin-catalog-react/alpha';\nimport { isGithubActionsAvailable } from '../components/Router';\n\n/**\n * @alpha\n */\nexport const entityGithubActionsCard = EntityCardBlueprint.make({\n  name: 'workflow-runs',\n  params: {\n    filter: isGithubActionsAvailable,\n    loader: () =>\n      import('../components/Router').then(m => <m.Router view=\"cards\" />),\n  },\n});\n\n/**\n * @alpha\n */\nexport const entityLatestGithubActionRunCard =\n  EntityCardBlueprint.makeWithOverrides({\n    name: 'latest-workflow-run',\n    config: {\n      schema: {\n        props: z =>\n          z\n            .object({\n              branch: z.string().default('master'),\n            })\n            .default({}),\n      },\n    },\n    factory(originalFactory, { config }) {\n      return originalFactory({\n        filter: isGithubActionsAvailable,\n        loader: async () =>\n          import('../components/Cards').then(m => (\n            <m.LatestWorkflowRunCard {...config.props} />\n          )),\n      });\n    },\n  });\n\n/**\n * @alpha\n */\nexport const entityLatestGithubActionsForBranchCard =\n  EntityCardBlueprint.makeWithOverrides({\n    name: 'latest-branch-workflow-runs',\n    config: {\n      schema: {\n        props: z =>\n          z\n            .object({\n              branch: z.string().default('master'),\n            })\n            .default({}),\n      },\n    },\n    factory(originalFactory, { config }) {\n      return originalFactory({\n        filter: isGithubActionsAvailable,\n        loader: async () =>\n          import('../components/Cards').then(m => (\n            <m.LatestWorkflowsForBranchCard {...config.props} />\n          )),\n      });\n    },\n  });\n\n/**\n * @alpha\n */\nexport const entityRecentGithubActionsRunsCard =\n  EntityCardBlueprint.makeWithOverrides({\n    name: 'recent-workflow-runs',\n    config: {\n      schema: {\n        props: z =>\n          z\n            .object({\n              branch: z.string().default('master'),\n              dense: z.boolean().default(false),\n              limit: z.number().default(5).optional(),\n            })\n            .default({}),\n      },\n    },\n    factory(originalFactory, { config }) {\n      return originalFactory({\n        filter: isGithubActionsAvailable,\n        loader: async () =>\n          import('../components/Cards').then(m => (\n            <m.RecentWorkflowRunsCard {...config.props} />\n          )),\n      });\n    },\n  });\n"],"names":[],"mappings":";;;;AAqBa,MAAA,uBAAA,GAA0B,oBAAoB,IAAK,CAAA;AAAA,EAC9D,IAAM,EAAA,eAAA;AAAA,EACN,MAAQ,EAAA;AAAA,IACN,MAAQ,EAAA,wBAAA;AAAA,IACR,MAAQ,EAAA,MACN,OAAO,6BAAsB,CAAE,CAAA,IAAA,CAAK,CAAK,CAAA,qBAAA,GAAA,CAAC,CAAE,CAAA,MAAA,EAAF,EAAS,IAAA,EAAK,SAAQ,CAAE;AAAA;AAExE,CAAC;AAKY,MAAA,+BAAA,GACX,oBAAoB,iBAAkB,CAAA;AAAA,EACpC,IAAM,EAAA,qBAAA;AAAA,EACN,MAAQ,EAAA;AAAA,IACN,MAAQ,EAAA;AAAA,MACN,KAAA,EAAO,CACL,CAAA,KAAA,CAAA,CACG,MAAO,CAAA;AAAA,QACN,MAAQ,EAAA,CAAA,CAAE,MAAO,EAAA,CAAE,QAAQ,QAAQ;AAAA,OACpC,CAAA,CACA,OAAQ,CAAA,EAAE;AAAA;AACjB,GACF;AAAA,EACA,OAAQ,CAAA,eAAA,EAAiB,EAAE,MAAA,EAAU,EAAA;AACnC,IAAA,OAAO,eAAgB,CAAA;AAAA,MACrB,MAAQ,EAAA,wBAAA;AAAA,MACR,MAAQ,EAAA,YACN,OAAO,kCAAqB,EAAE,IAAK,CAAA,CAAA,CAAA,qBAChC,GAAA,CAAA,CAAA,CAAE,qBAAF,EAAA,EAAyB,GAAG,MAAA,CAAO,OAAO,CAC5C;AAAA,KACJ,CAAA;AAAA;AAEL,CAAC;AAKU,MAAA,sCAAA,GACX,oBAAoB,iBAAkB,CAAA;AAAA,EACpC,IAAM,EAAA,6BAAA;AAAA,EACN,MAAQ,EAAA;AAAA,IACN,MAAQ,EAAA;AAAA,MACN,KAAA,EAAO,CACL,CAAA,KAAA,CAAA,CACG,MAAO,CAAA;AAAA,QACN,MAAQ,EAAA,CAAA,CAAE,MAAO,EAAA,CAAE,QAAQ,QAAQ;AAAA,OACpC,CAAA,CACA,OAAQ,CAAA,EAAE;AAAA;AACjB,GACF;AAAA,EACA,OAAQ,CAAA,eAAA,EAAiB,EAAE,MAAA,EAAU,EAAA;AACnC,IAAA,OAAO,eAAgB,CAAA;AAAA,MACrB,MAAQ,EAAA,wBAAA;AAAA,MACR,MAAQ,EAAA,YACN,OAAO,kCAAqB,EAAE,IAAK,CAAA,CAAA,CAAA,qBAChC,GAAA,CAAA,CAAA,CAAE,4BAAF,EAAA,EAAgC,GAAG,MAAA,CAAO,OAAO,CACnD;AAAA,KACJ,CAAA;AAAA;AAEL,CAAC;AAKU,MAAA,iCAAA,GACX,oBAAoB,iBAAkB,CAAA;AAAA,EACpC,IAAM,EAAA,sBAAA;AAAA,EACN,MAAQ,EAAA;AAAA,IACN,MAAQ,EAAA;AAAA,MACN,KAAA,EAAO,CACL,CAAA,KAAA,CAAA,CACG,MAAO,CAAA;AAAA,QACN,MAAQ,EAAA,CAAA,CAAE,MAAO,EAAA,CAAE,QAAQ,QAAQ,CAAA;AAAA,QACnC,KAAO,EAAA,CAAA,CAAE,OAAQ,EAAA,CAAE,QAAQ,KAAK,CAAA;AAAA,QAChC,OAAO,CAAE,CAAA,MAAA,GAAS,OAAQ,CAAA,CAAC,EAAE,QAAS;AAAA,OACvC,CAAA,CACA,OAAQ,CAAA,EAAE;AAAA;AACjB,GACF;AAAA,EACA,OAAQ,CAAA,eAAA,EAAiB,EAAE,MAAA,EAAU,EAAA;AACnC,IAAA,OAAO,eAAgB,CAAA;AAAA,MACrB,MAAQ,EAAA,wBAAA;AAAA,MACR,MAAQ,EAAA,YACN,OAAO,kCAAqB,EAAE,IAAK,CAAA,CAAA,CAAA,qBAChC,GAAA,CAAA,CAAA,CAAE,sBAAF,EAAA,EAA0B,GAAG,MAAA,CAAO,OAAO,CAC7C;AAAA,KACJ,CAAA;AAAA;AAEL,CAAC;;;;"}