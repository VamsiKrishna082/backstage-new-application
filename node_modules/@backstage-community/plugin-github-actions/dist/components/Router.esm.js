import { jsx, jsxs } from 'react/jsx-runtime';
import { useEntity, MissingAnnotationEmptyState } from '@backstage/plugin-catalog-react';
import { Routes, Route } from 'react-router-dom';
import { buildRouteRef } from '../routes.esm.js';
import { WorkflowRunDetails } from './WorkflowRunDetails/WorkflowRunDetails.esm.js';
import { WorkflowRunsCard } from './WorkflowRunsCard/WorkflowRunsCard.esm.js';
import { WorkflowRunsTable } from './WorkflowRunsTable/WorkflowRunsTable.esm.js';
import { GITHUB_ACTIONS_ANNOTATION } from './getProjectNameFromEntity.esm.js';

const isGithubActionsAvailable = (entity) => Boolean(entity.metadata.annotations?.[GITHUB_ACTIONS_ANNOTATION]);
const Router = (props) => {
  const { view = "table" } = props;
  const { entity } = useEntity();
  if (!isGithubActionsAvailable(entity)) {
    return /* @__PURE__ */ jsx(MissingAnnotationEmptyState, { annotation: GITHUB_ACTIONS_ANNOTATION });
  }
  const workflowRunsComponent = view === "cards" ? /* @__PURE__ */ jsx(WorkflowRunsCard, { entity }) : /* @__PURE__ */ jsx(WorkflowRunsTable, { entity });
  return /* @__PURE__ */ jsxs(Routes, { children: [
    /* @__PURE__ */ jsx(Route, { path: "/", element: workflowRunsComponent }),
    /* @__PURE__ */ jsx(
      Route,
      {
        path: `${buildRouteRef.path}`,
        element: /* @__PURE__ */ jsx(WorkflowRunDetails, { entity })
      }
    )
  ] });
};

export { Router, isGithubActionsAvailable };
//# sourceMappingURL=Router.esm.js.map
