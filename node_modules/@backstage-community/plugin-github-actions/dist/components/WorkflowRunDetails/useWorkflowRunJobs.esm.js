import useAsync from 'react-use/esm/useAsync';
import { githubActionsApiRef } from '../../api/GithubActionsApi.esm.js';
import '@backstage/integration';
import '@octokit/rest';
import { buildRouteRef } from '../../routes.esm.js';
import { useApi, useRouteRefParams } from '@backstage/core-plugin-api';

const useWorkflowRunJobs = ({
  hostname,
  owner,
  repo
}) => {
  const api = useApi(githubActionsApiRef);
  const { id } = useRouteRefParams(buildRouteRef);
  return useAsync(async () => {
    if (!repo || !owner) {
      throw new Error("No repo/owner provided");
    }
    const jobs = await api.listJobsForWorkflowRun({
      hostname,
      owner,
      repo,
      id: parseInt(id, 10)
    });
    return {
      total_count: jobs.total_count,
      jobs: jobs.jobs.map((job) => ({
        html_url: job.html_url ?? void 0,
        status: job.status,
        conclusion: job.conclusion ?? void 0,
        started_at: job.started_at,
        completed_at: job.completed_at ?? void 0,
        id: job.id,
        name: job.name,
        steps: job.steps?.map((step) => ({
          name: step.name,
          status: step.status,
          conclusion: step.conclusion ?? void 0,
          number: step.number,
          started_at: step.started_at ?? void 0,
          completed_at: step.completed_at ?? void 0
        }))
      }))
    };
  }, [repo, owner, id]);
};

export { useWorkflowRunJobs };
//# sourceMappingURL=useWorkflowRunJobs.esm.js.map
