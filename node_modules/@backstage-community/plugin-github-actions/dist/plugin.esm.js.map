{"version":3,"file":"plugin.esm.js","sources":["../src/plugin.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { githubActionsApiRef, GithubActionsClient } from './api';\nimport { rootRouteRef } from './routes';\nimport {\n  configApiRef,\n  createPlugin,\n  createApiFactory,\n  createRoutableExtension,\n  createComponentExtension,\n} from '@backstage/core-plugin-api';\nimport { scmAuthApiRef } from '@backstage/integration-react';\n\n/** @public */\nexport const githubActionsPlugin = createPlugin({\n  id: 'github-actions',\n  apis: [\n    createApiFactory({\n      api: githubActionsApiRef,\n      deps: { configApi: configApiRef, scmAuthApi: scmAuthApiRef },\n      factory: ({ configApi, scmAuthApi }) =>\n        new GithubActionsClient({ configApi, scmAuthApi }),\n    }),\n  ],\n  routes: {\n    entityContent: rootRouteRef,\n  },\n});\n\n/** @public */\nexport const EntityGithubActionsContent = githubActionsPlugin.provide(\n  createRoutableExtension({\n    name: 'EntityGithubActionsContent',\n    component: () => import('./components/Router').then(m => m.Router),\n    mountPoint: rootRouteRef,\n  }),\n);\n\n/** @public */\nexport const EntityLatestGithubActionRunCard = githubActionsPlugin.provide(\n  createComponentExtension({\n    name: 'EntityLatestGithubActionRunCard',\n    component: {\n      lazy: () =>\n        import('./components/Cards').then(m => m.LatestWorkflowRunCard),\n    },\n  }),\n);\n\n/** @public */\nexport const EntityLatestGithubActionsForBranchCard =\n  githubActionsPlugin.provide(\n    createComponentExtension({\n      name: 'EntityLatestGithubActionsForBranchCard',\n      component: {\n        lazy: () =>\n          import('./components/Cards').then(\n            m => m.LatestWorkflowsForBranchCard,\n          ),\n      },\n    }),\n  );\n\n/** @public */\nexport const EntityRecentGithubActionsRunsCard = githubActionsPlugin.provide(\n  createComponentExtension({\n    name: 'EntityRecentGithubActionsRunsCard',\n    component: {\n      lazy: () =>\n        import('./components/Cards').then(m => m.RecentWorkflowRunsCard),\n    },\n  }),\n);\n"],"names":[],"mappings":";;;;;;AA4BO,MAAM,sBAAsB,YAAa,CAAA;AAAA,EAC9C,EAAI,EAAA,gBAAA;AAAA,EACJ,IAAM,EAAA;AAAA,IACJ,gBAAiB,CAAA;AAAA,MACf,GAAK,EAAA,mBAAA;AAAA,MACL,IAAM,EAAA,EAAE,SAAW,EAAA,YAAA,EAAc,YAAY,aAAc,EAAA;AAAA,MAC3D,OAAA,EAAS,CAAC,EAAE,SAAW,EAAA,UAAA,EACrB,KAAA,IAAI,mBAAoB,CAAA,EAAE,SAAW,EAAA,UAAA,EAAY;AAAA,KACpD;AAAA,GACH;AAAA,EACA,MAAQ,EAAA;AAAA,IACN,aAAe,EAAA;AAAA;AAEnB,CAAC;AAGM,MAAM,6BAA6B,mBAAoB,CAAA,OAAA;AAAA,EAC5D,uBAAwB,CAAA;AAAA,IACtB,IAAM,EAAA,4BAAA;AAAA,IACN,SAAA,EAAW,MAAM,OAAO,4BAAqB,EAAE,IAAK,CAAA,CAAA,CAAA,KAAK,EAAE,MAAM,CAAA;AAAA,IACjE,UAAY,EAAA;AAAA,GACb;AACH;AAGO,MAAM,kCAAkC,mBAAoB,CAAA,OAAA;AAAA,EACjE,wBAAyB,CAAA;AAAA,IACvB,IAAM,EAAA,iCAAA;AAAA,IACN,SAAW,EAAA;AAAA,MACT,IAAA,EAAM,MACJ,OAAO,iCAAoB,EAAE,IAAK,CAAA,CAAA,CAAA,KAAK,EAAE,qBAAqB;AAAA;AAClE,GACD;AACH;AAGO,MAAM,yCACX,mBAAoB,CAAA,OAAA;AAAA,EAClB,wBAAyB,CAAA;AAAA,IACvB,IAAM,EAAA,wCAAA;AAAA,IACN,SAAW,EAAA;AAAA,MACT,IAAM,EAAA,MACJ,OAAO,iCAAoB,CAAE,CAAA,IAAA;AAAA,QAC3B,OAAK,CAAE,CAAA;AAAA;AACT;AACJ,GACD;AACH;AAGK,MAAM,oCAAoC,mBAAoB,CAAA,OAAA;AAAA,EACnE,wBAAyB,CAAA;AAAA,IACvB,IAAM,EAAA,mCAAA;AAAA,IACN,SAAW,EAAA;AAAA,MACT,IAAA,EAAM,MACJ,OAAO,iCAAoB,EAAE,IAAK,CAAA,CAAA,CAAA,KAAK,EAAE,sBAAsB;AAAA;AACnE,GACD;AACH;;;;"}