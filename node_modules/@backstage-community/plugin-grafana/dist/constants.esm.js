const GRAFANA_ANNOTATION_TAG_SELECTOR = "grafana/tag-selector";
const GRAFANA_ANNOTATION_DASHBOARD_SELECTOR = "grafana/dashboard-selector";
const GRAFANA_ANNOTATION_ALERT_LABEL_SELECTOR = "grafana/alert-label-selector";
const GRAFANA_ANNOTATION_OVERVIEW_DASHBOARD = "grafana/overview-dashboard";
const isDashboardSelectorAvailable = (entity) => entity?.metadata.annotations?.[GRAFANA_ANNOTATION_DASHBOARD_SELECTOR] || entity?.metadata.annotations?.[GRAFANA_ANNOTATION_TAG_SELECTOR];
const isAlertSelectorAvailable = (entity) => Boolean(
  entity?.metadata.annotations?.[GRAFANA_ANNOTATION_ALERT_LABEL_SELECTOR]
);
const isOverviewDashboardAvailable = (entity) => Boolean(
  entity?.metadata.annotations?.[GRAFANA_ANNOTATION_OVERVIEW_DASHBOARD]
);
const dashboardSelectorFromEntity = (entity) => entity?.metadata.annotations?.[GRAFANA_ANNOTATION_DASHBOARD_SELECTOR] ?? entity?.metadata.annotations?.[GRAFANA_ANNOTATION_TAG_SELECTOR] ?? "";
const alertSelectorFromEntity = (entity) => {
  const annotation = entity?.metadata.annotations?.[GRAFANA_ANNOTATION_ALERT_LABEL_SELECTOR] ?? "";
  const selectors = annotation.split(",").map((l) => l.trim());
  if (selectors.length > 1) {
    return selectors;
  }
  return annotation;
};
const overviewDashboardFromEntity = (entity) => entity?.metadata.annotations?.[GRAFANA_ANNOTATION_OVERVIEW_DASHBOARD] ?? "";
const tagSelectorFromEntity = dashboardSelectorFromEntity;

export { GRAFANA_ANNOTATION_ALERT_LABEL_SELECTOR, GRAFANA_ANNOTATION_DASHBOARD_SELECTOR, GRAFANA_ANNOTATION_OVERVIEW_DASHBOARD, GRAFANA_ANNOTATION_TAG_SELECTOR, alertSelectorFromEntity, dashboardSelectorFromEntity, isAlertSelectorAvailable, isDashboardSelectorAvailable, isOverviewDashboardAvailable, overviewDashboardFromEntity, tagSelectorFromEntity };
//# sourceMappingURL=constants.esm.js.map
