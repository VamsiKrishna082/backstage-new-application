{"version":3,"file":"constants.esm.js","sources":["../src/constants.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\n\n/**\n * Grafana tag selector annotation\n * @public\n * @deprecated Use GRAFANA_ANNOTATION_DASHBOARD_SELECTOR instead.\n */\nexport const GRAFANA_ANNOTATION_TAG_SELECTOR = 'grafana/tag-selector';\n\n/**\n * Grafana dashboard selector annotation\n * @public\n */\nexport const GRAFANA_ANNOTATION_DASHBOARD_SELECTOR =\n  'grafana/dashboard-selector';\n\n/**\n * Grafana alert selector annotation\n * @public\n */\nexport const GRAFANA_ANNOTATION_ALERT_LABEL_SELECTOR =\n  'grafana/alert-label-selector';\n\n/**\n * Grafana dashboard overview annotation\n * @public\n */\nexport const GRAFANA_ANNOTATION_OVERVIEW_DASHBOARD =\n  'grafana/overview-dashboard';\n\n/**\n * Returns if the dashboard selector annotation for an entity is set\n * @public\n */\nexport const isDashboardSelectorAvailable = (entity: Entity) =>\n  entity?.metadata.annotations?.[GRAFANA_ANNOTATION_DASHBOARD_SELECTOR] ||\n  entity?.metadata.annotations?.[GRAFANA_ANNOTATION_TAG_SELECTOR];\n\n/**\n * Returns if the alert selector annotation for an entity is set\n * @public\n */\nexport const isAlertSelectorAvailable = (entity: Entity) =>\n  Boolean(\n    entity?.metadata.annotations?.[GRAFANA_ANNOTATION_ALERT_LABEL_SELECTOR],\n  );\n\n/**\n * Returns if the overview dashboard annotation for an entity is set\n * @public\n */\nexport const isOverviewDashboardAvailable = (entity: Entity) =>\n  Boolean(\n    entity?.metadata.annotations?.[GRAFANA_ANNOTATION_OVERVIEW_DASHBOARD],\n  );\n\n/**\n * Returns the dashboard selector annotation for an entity\n * @public\n */\nexport const dashboardSelectorFromEntity = (entity: Entity) =>\n  entity?.metadata.annotations?.[GRAFANA_ANNOTATION_DASHBOARD_SELECTOR] ??\n  entity?.metadata.annotations?.[GRAFANA_ANNOTATION_TAG_SELECTOR] ??\n  '';\n/**\n * Returns the alert selector annotation for an entity\n * @public\n */\nexport const alertSelectorFromEntity = (entity: Entity) => {\n  const annotation =\n    entity?.metadata.annotations?.[GRAFANA_ANNOTATION_ALERT_LABEL_SELECTOR] ??\n    '';\n  const selectors = annotation.split(',').map(l => l.trim());\n  if (selectors.length > 1) {\n    return selectors;\n  }\n  return annotation;\n};\n\n/**\n * Returns the overview dashboard annotation for an entity\n * @public\n */\nexport const overviewDashboardFromEntity = (entity: Entity) =>\n  entity?.metadata.annotations?.[GRAFANA_ANNOTATION_OVERVIEW_DASHBOARD] ?? '';\n\n/**\n * Returns the dashboard selector annotation for an entity\n * @public\n * @deprecated Use dashboardSelectorFromEntity instead\n */\nexport const tagSelectorFromEntity = dashboardSelectorFromEntity;\n"],"names":[],"mappings":"AAuBO,MAAM,+BAAkC,GAAA;AAMxC,MAAM,qCACX,GAAA;AAMK,MAAM,uCACX,GAAA;AAMK,MAAM,qCACX,GAAA;AAMW,MAAA,4BAAA,GAA+B,CAAC,MAAA,KAC3C,MAAQ,EAAA,QAAA,CAAS,WAAc,GAAA,qCAAqC,CACpE,IAAA,MAAA,EAAQ,QAAS,CAAA,WAAA,GAAc,+BAA+B;AAMnD,MAAA,wBAAA,GAA2B,CAAC,MACvC,KAAA,OAAA;AAAA,EACE,MAAA,EAAQ,QAAS,CAAA,WAAA,GAAc,uCAAuC;AACxE;AAMW,MAAA,4BAAA,GAA+B,CAAC,MAC3C,KAAA,OAAA;AAAA,EACE,MAAA,EAAQ,QAAS,CAAA,WAAA,GAAc,qCAAqC;AACtE;AAMK,MAAM,2BAA8B,GAAA,CAAC,MAC1C,KAAA,MAAA,EAAQ,QAAS,CAAA,WAAA,GAAc,qCAAqC,CAAA,IACpE,MAAQ,EAAA,QAAA,CAAS,WAAc,GAAA,+BAA+B,CAC9D,IAAA;AAKW,MAAA,uBAAA,GAA0B,CAAC,MAAmB,KAAA;AACzD,EAAA,MAAM,UACJ,GAAA,MAAA,EAAQ,QAAS,CAAA,WAAA,GAAc,uCAAuC,CACtE,IAAA,EAAA;AACF,EAAM,MAAA,SAAA,GAAY,WAAW,KAAM,CAAA,GAAG,EAAE,GAAI,CAAA,CAAA,CAAA,KAAK,CAAE,CAAA,IAAA,EAAM,CAAA;AACzD,EAAI,IAAA,SAAA,CAAU,SAAS,CAAG,EAAA;AACxB,IAAO,OAAA,SAAA;AAAA;AAET,EAAO,OAAA,UAAA;AACT;AAMO,MAAM,8BAA8B,CAAC,MAAA,KAC1C,QAAQ,QAAS,CAAA,WAAA,GAAc,qCAAqC,CAAK,IAAA;AAOpE,MAAM,qBAAwB,GAAA;;;;"}