{"version":3,"file":"GkeEntityProvider.cjs.js","sources":["../../src/providers/GkeEntityProvider.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  DeferredEntity,\n  EntityProvider,\n  EntityProviderConnection,\n} from '@backstage/plugin-catalog-node';\nimport * as container from '@google-cloud/container';\nimport {\n  ANNOTATION_KUBERNETES_API_SERVER,\n  ANNOTATION_KUBERNETES_API_SERVER_CA,\n  ANNOTATION_KUBERNETES_AUTH_PROVIDER,\n  ANNOTATION_KUBERNETES_DASHBOARD_APP,\n  ANNOTATION_KUBERNETES_DASHBOARD_PARAMETERS,\n} from '@backstage/plugin-kubernetes-common';\nimport { Config } from '@backstage/config';\nimport {\n  LoggerService,\n  SchedulerService,\n  SchedulerServiceTaskRunner,\n  readSchedulerServiceTaskScheduleDefinitionFromConfig,\n} from '@backstage/backend-plugin-api';\nimport {\n  ANNOTATION_LOCATION,\n  ANNOTATION_ORIGIN_LOCATION,\n} from '@backstage/catalog-model';\n\n/**\n * Catalog provider to ingest GKE clusters\n *\n * @public\n */\nexport class GkeEntityProvider implements EntityProvider {\n  private readonly logger: LoggerService;\n  private readonly scheduleFn: () => Promise<void>;\n  private readonly gkeParents: string[];\n  private readonly clusterManagerClient: container.v1.ClusterManagerClient;\n  private connection?: EntityProviderConnection;\n\n  private constructor(\n    logger: LoggerService,\n    taskRunner: SchedulerServiceTaskRunner,\n    gkeParents: string[],\n    clusterManagerClient: container.v1.ClusterManagerClient,\n  ) {\n    this.logger = logger;\n    this.scheduleFn = this.createScheduleFn(taskRunner);\n    this.gkeParents = gkeParents;\n    this.clusterManagerClient = clusterManagerClient;\n  }\n\n  public static fromConfig({\n    logger,\n    scheduler,\n    config,\n  }: {\n    logger: LoggerService;\n    scheduler: SchedulerService;\n    config: Config;\n  }) {\n    return GkeEntityProvider.fromConfigWithClient({\n      logger,\n      scheduler: scheduler,\n      config,\n      clusterManagerClient: new container.v1.ClusterManagerClient(),\n    });\n  }\n\n  public static fromConfigWithClient({\n    logger,\n    scheduler,\n    config,\n    clusterManagerClient,\n  }: {\n    logger: LoggerService;\n    scheduler: SchedulerService;\n    config: Config;\n    clusterManagerClient: container.v1.ClusterManagerClient;\n  }) {\n    const gkeProviderConfig = config.getConfig('catalog.providers.gcp.gke');\n    const schedule = readSchedulerServiceTaskScheduleDefinitionFromConfig(\n      gkeProviderConfig.getConfig('schedule'),\n    );\n    return new GkeEntityProvider(\n      logger,\n      scheduler.createScheduledTaskRunner(schedule),\n      gkeProviderConfig.getStringArray('parents'),\n      clusterManagerClient,\n    );\n  }\n\n  getProviderName(): string {\n    return `gcp-gke`;\n  }\n\n  async connect(connection: EntityProviderConnection): Promise<void> {\n    this.connection = connection;\n    await this.scheduleFn();\n  }\n\n  private filterOutUndefinedDeferredEntity(\n    e: DeferredEntity | undefined,\n  ): e is DeferredEntity {\n    return e !== undefined;\n  }\n\n  private filterOutUndefinedCluster(\n    c: container.protos.google.container.v1.ICluster | null | undefined,\n  ): c is container.protos.google.container.v1.ICluster {\n    return c !== undefined && c !== null;\n  }\n\n  private clusterToResource(\n    cluster: container.protos.google.container.v1.ICluster,\n    project: string,\n  ): DeferredEntity | undefined {\n    const location = `${this.getProviderName()}:${cluster.location}`;\n\n    if (\n      !cluster.name ||\n      !cluster.selfLink ||\n      !cluster.endpoint ||\n      !cluster.location\n    ) {\n      this.logger.warn(\n        `ignoring partial cluster, one of name=${cluster.name}, endpoint=${cluster.endpoint}, selfLink=${cluster.selfLink} or location=${cluster.location} is missing`,\n      );\n      return undefined;\n    }\n\n    // TODO fix location type\n    return {\n      locationKey: location,\n      entity: {\n        apiVersion: 'backstage.io/v1alpha1',\n        kind: 'Resource',\n        metadata: {\n          annotations: {\n            [ANNOTATION_KUBERNETES_API_SERVER]: `https://${cluster.endpoint}`,\n            [ANNOTATION_KUBERNETES_API_SERVER_CA]:\n              cluster.masterAuth?.clusterCaCertificate || '',\n            [ANNOTATION_KUBERNETES_AUTH_PROVIDER]: 'google',\n            [ANNOTATION_KUBERNETES_DASHBOARD_APP]: 'gke',\n            [ANNOTATION_LOCATION]: location,\n            [ANNOTATION_ORIGIN_LOCATION]: location,\n            [ANNOTATION_KUBERNETES_DASHBOARD_PARAMETERS]: JSON.stringify({\n              projectId: project,\n              region: cluster.location,\n              clusterName: cluster.name,\n            }),\n          },\n          name: cluster.name,\n          namespace: 'default',\n        },\n        spec: {\n          type: 'kubernetes-cluster',\n          owner: 'unknown',\n        },\n      },\n    };\n  }\n\n  private createScheduleFn(\n    taskRunner: SchedulerServiceTaskRunner,\n  ): () => Promise<void> {\n    return async () => {\n      const taskId = `${this.getProviderName()}:refresh`;\n      return taskRunner.run({\n        id: taskId,\n        fn: async () => {\n          try {\n            await this.refresh();\n          } catch (error) {\n            this.logger.error(error);\n          }\n        },\n      });\n    };\n  }\n\n  private async getClusters(): Promise<DeferredEntity[]> {\n    const clusters = await Promise.all(\n      this.gkeParents.map(async parent => {\n        const project = parent.split('/')[1];\n        const request = {\n          parent: parent,\n        };\n        const [response] = await this.clusterManagerClient.listClusters(\n          request,\n        );\n        return (\n          response.clusters\n            ?.filter(this.filterOutUndefinedCluster)\n            .map(c => this.clusterToResource(c, project))\n            .filter(this.filterOutUndefinedDeferredEntity) ?? []\n        );\n      }),\n    );\n    return clusters.flat();\n  }\n\n  async refresh() {\n    if (!this.connection) {\n      throw new Error('Not initialized');\n    }\n\n    this.logger.info('Discovering GKE clusters');\n\n    let resources: DeferredEntity[];\n\n    try {\n      resources = await this.getClusters();\n    } catch (e) {\n      this.logger.error('error fetching GKE clusters', e);\n      return;\n    }\n\n    this.logger.info(\n      `Ingesting GKE clusters [${resources\n        .map(r => r.entity.metadata.name)\n        .join(', ')}]`,\n    );\n\n    await this.connection.applyMutation({\n      type: 'full',\n      entities: resources,\n    });\n  }\n}\n"],"names":["container","readSchedulerServiceTaskScheduleDefinitionFromConfig","ANNOTATION_KUBERNETES_API_SERVER","ANNOTATION_KUBERNETES_API_SERVER_CA","ANNOTATION_KUBERNETES_AUTH_PROVIDER","ANNOTATION_KUBERNETES_DASHBOARD_APP","ANNOTATION_LOCATION","ANNOTATION_ORIGIN_LOCATION","ANNOTATION_KUBERNETES_DASHBOARD_PARAMETERS"],"mappings":"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"}