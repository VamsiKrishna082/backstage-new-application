{"version":3,"file":"deprecated.cjs.js","sources":["../src/deprecated.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Config } from '@backstage/config';\nimport {\n  EntityProvider,\n  EntityProviderConnection,\n} from '@backstage/plugin-catalog-node';\nimport { GithubEntityProvider } from './providers/GithubEntityProvider';\nimport {\n  GithubOrgEntityProvider,\n  GithubOrgEntityProviderOptions,\n} from './providers/GithubOrgEntityProvider';\nimport {\n  LoggerService,\n  SchedulerService,\n  SchedulerServiceTaskRunner,\n} from '@backstage/backend-plugin-api';\n\n/**\n * @public\n * @deprecated Use {@link GithubOrgEntityProvider} instead.\n */\nexport class GitHubOrgEntityProvider extends GithubOrgEntityProvider {\n  static fromConfig(config: Config, options: GitHubOrgEntityProviderOptions) {\n    options.logger.warn(\n      '[Deprecated] Use GithubOrgEntityProvider instead of GitHubOrgEntityProvider.',\n    );\n    return GithubOrgEntityProvider.fromConfig(\n      config,\n      options as GithubOrgEntityProviderOptions,\n    ) as GitHubOrgEntityProvider;\n  }\n}\n\n/**\n * @public\n * @deprecated Use {@link GithubOrgEntityProviderOptions} instead.\n */\nexport type GitHubOrgEntityProviderOptions = GithubOrgEntityProviderOptions;\n\n/**\n * @public\n * @deprecated Use {@link GithubEntityProvider} instead.\n */\nexport class GitHubEntityProvider implements EntityProvider {\n  static fromConfig(\n    config: Config,\n    options: {\n      logger: LoggerService;\n      schedule?: SchedulerServiceTaskRunner;\n      scheduler?: SchedulerService;\n    },\n  ): GitHubEntityProvider[] {\n    options.logger.warn(\n      '[Deprecated] Please use GithubEntityProvider instead of GitHubEntityProvider.',\n    );\n    return GithubEntityProvider.fromConfig(config, options).map(\n      delegate => new GitHubEntityProvider(delegate),\n    );\n  }\n\n  private constructor(private readonly delegate: GithubEntityProvider) {}\n\n  connect(connection: EntityProviderConnection): Promise<void> {\n    return this.delegate.connect(connection);\n  }\n\n  getProviderName(): string {\n    return this.delegate.getProviderName();\n  }\n\n  refresh(logger: LoggerService): Promise<void> {\n    return this.delegate.refresh(logger);\n  }\n}\n"],"names":["GithubOrgEntityProvider","GithubEntityProvider"],"mappings":";;;;;AAoCO,MAAM,gCAAgCA,+CAAwB,CAAA;AAAA,EACnE,OAAO,UAAW,CAAA,MAAA,EAAgB,OAAyC,EAAA;AACzE,IAAA,OAAA,CAAQ,MAAO,CAAA,IAAA;AAAA,MACb;AAAA,KACF;AACA,IAAA,OAAOA,+CAAwB,CAAA,UAAA;AAAA,MAC7B,MAAA;AAAA,MACA;AAAA,KACF;AAAA;AAEJ;AAYO,MAAM,oBAA+C,CAAA;AAAA,EAiBlD,YAA6B,QAAgC,EAAA;AAAhC,IAAA,IAAA,CAAA,QAAA,GAAA,QAAA;AAAA;AAAiC,EAhBtE,OAAO,UACL,CAAA,MAAA,EACA,OAKwB,EAAA;AACxB,IAAA,OAAA,CAAQ,MAAO,CAAA,IAAA;AAAA,MACb;AAAA,KACF;AACA,IAAA,OAAOC,yCAAqB,CAAA,UAAA,CAAW,MAAQ,EAAA,OAAO,CAAE,CAAA,GAAA;AAAA,MACtD,CAAA,QAAA,KAAY,IAAI,oBAAA,CAAqB,QAAQ;AAAA,KAC/C;AAAA;AACF,EAIA,QAAQ,UAAqD,EAAA;AAC3D,IAAO,OAAA,IAAA,CAAK,QAAS,CAAA,OAAA,CAAQ,UAAU,CAAA;AAAA;AACzC,EAEA,eAA0B,GAAA;AACxB,IAAO,OAAA,IAAA,CAAK,SAAS,eAAgB,EAAA;AAAA;AACvC,EAEA,QAAQ,MAAsC,EAAA;AAC5C,IAAO,OAAA,IAAA,CAAK,QAAS,CAAA,OAAA,CAAQ,MAAM,CAAA;AAAA;AAEvC;;;;;"}