{"version":3,"file":"config.cjs.js","sources":["../../src/lib/config.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Config } from '@backstage/config';\n\n/**\n * The configuration parameters for a multi-org GitHub processor.\n * @public\n */\nexport type GithubMultiOrgConfig = Array<{\n  /**\n   * The name of the GitHub org to process.\n   */\n  name: string;\n  /**\n   * The namespace of the group created for this org.\n   */\n  groupNamespace: string;\n  /**\n   * The namespace of the users created for this org. If not specified defaults to undefined.\n   */\n  userNamespace: string | undefined;\n}>;\n\nexport function readGithubMultiOrgConfig(config: Config): GithubMultiOrgConfig {\n  const orgConfigs = config.getOptionalConfigArray('orgs') ?? [];\n  return orgConfigs.map(c => ({\n    name: c.getString('name'),\n    groupNamespace: (\n      c.getOptionalString('groupNamespace') ?? c.getString('name')\n    ).toLowerCase(),\n    userNamespace: c.getOptionalString('userNamespace') ?? undefined,\n  }));\n}\n"],"names":[],"mappings":";;AAqCO,SAAS,yBAAyB,MAAsC,EAAA;AAC7E,EAAA,MAAM,UAAa,GAAA,MAAA,CAAO,sBAAuB,CAAA,MAAM,KAAK,EAAC;AAC7D,EAAO,OAAA,UAAA,CAAW,IAAI,CAAM,CAAA,MAAA;AAAA,IAC1B,IAAA,EAAM,CAAE,CAAA,SAAA,CAAU,MAAM,CAAA;AAAA,IACxB,cAAA,EAAA,CACE,EAAE,iBAAkB,CAAA,gBAAgB,KAAK,CAAE,CAAA,SAAA,CAAU,MAAM,CAAA,EAC3D,WAAY,EAAA;AAAA,IACd,aAAe,EAAA,CAAA,CAAE,iBAAkB,CAAA,eAAe,CAAK,IAAA,KAAA;AAAA,GACvD,CAAA,CAAA;AACJ;;;;"}