{"version":3,"file":"defaultTransformers.cjs.js","sources":["../../src/lib/defaultTransformers.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity, GroupEntity, UserEntity } from '@backstage/catalog-model';\nimport { graphql } from '@octokit/graphql';\nimport {\n  ANNOTATION_GITHUB_TEAM_SLUG,\n  ANNOTATION_GITHUB_USER_LOGIN,\n} from './annotation';\nimport { GithubTeam, GithubUser } from './github';\n\n/**\n * Context passed to Transformers\n *\n * @public\n */\nexport interface TransformerContext {\n  client: typeof graphql;\n  query: string;\n  org: string;\n}\n\n/**\n * Transformer for GitHub users to an Entity\n *\n * @public\n */\nexport type UserTransformer = (\n  item: GithubUser,\n  ctx: TransformerContext,\n) => Promise<Entity | undefined>;\n\n/**\n * Transformer for GitHub Team to an Entity\n *\n * @public\n */\nexport type TeamTransformer = (\n  item: GithubTeam,\n  ctx: TransformerContext,\n) => Promise<Entity | undefined>;\n\n/**\n * Default transformer for GitHub users to UserEntity\n *\n * @public\n */\nexport const defaultUserTransformer = async (\n  item: GithubUser,\n  _ctx: TransformerContext,\n): Promise<UserEntity | undefined> => {\n  const entity: UserEntity = {\n    apiVersion: 'backstage.io/v1alpha1',\n    kind: 'User',\n    metadata: {\n      name: item.login,\n      annotations: {\n        [ANNOTATION_GITHUB_USER_LOGIN]: item.login,\n      },\n    },\n    spec: {\n      profile: {},\n      memberOf: [],\n    },\n  };\n\n  if (item.bio) entity.metadata.description = item.bio;\n  if (item.name) entity.spec.profile!.displayName = item.name;\n  if (item.email) entity.spec.profile!.email = item.email;\n  if (item.avatarUrl) entity.spec.profile!.picture = item.avatarUrl;\n  return entity;\n};\n\n/**\n * Default transformer for GitHub Team to GroupEntity\n *\n * @public\n */\nexport const defaultOrganizationTeamTransformer: TeamTransformer =\n  async team => {\n    const annotations: { [annotationName: string]: string } = {\n      [ANNOTATION_GITHUB_TEAM_SLUG]: team.combinedSlug,\n    };\n\n    if (team.editTeamUrl) {\n      annotations['backstage.io/edit-url'] = team.editTeamUrl;\n    }\n\n    const entity: GroupEntity = {\n      apiVersion: 'backstage.io/v1alpha1',\n      kind: 'Group',\n      metadata: {\n        name: team.slug,\n        annotations,\n      },\n      spec: {\n        type: 'team',\n        profile: {},\n        children: [],\n      },\n    };\n\n    if (team.description) {\n      entity.metadata.description = team.description;\n    }\n    if (team.name) {\n      entity.spec.profile!.displayName = team.name;\n    }\n    if (team.avatarUrl) {\n      entity.spec.profile!.picture = team.avatarUrl;\n    }\n    if (team.parentTeam) {\n      entity.spec.parent = team.parentTeam.slug;\n    }\n\n    entity.spec.members = team.members.map(user => user.login);\n\n    return entity;\n  };\n"],"names":["ANNOTATION_GITHUB_USER_LOGIN","ANNOTATION_GITHUB_TEAM_SLUG"],"mappings":";;;;AA4Da,MAAA,sBAAA,GAAyB,OACpC,IAAA,EACA,IACoC,KAAA;AACpC,EAAA,MAAM,MAAqB,GAAA;AAAA,IACzB,UAAY,EAAA,uBAAA;AAAA,IACZ,IAAM,EAAA,MAAA;AAAA,IACN,QAAU,EAAA;AAAA,MACR,MAAM,IAAK,CAAA,KAAA;AAAA,MACX,WAAa,EAAA;AAAA,QACX,CAACA,uCAA4B,GAAG,IAAK,CAAA;AAAA;AACvC,KACF;AAAA,IACA,IAAM,EAAA;AAAA,MACJ,SAAS,EAAC;AAAA,MACV,UAAU;AAAC;AACb,GACF;AAEA,EAAA,IAAI,IAAK,CAAA,GAAA,EAAY,MAAA,CAAA,QAAA,CAAS,cAAc,IAAK,CAAA,GAAA;AACjD,EAAA,IAAI,KAAK,IAAM,EAAA,MAAA,CAAO,IAAK,CAAA,OAAA,CAAS,cAAc,IAAK,CAAA,IAAA;AACvD,EAAA,IAAI,KAAK,KAAO,EAAA,MAAA,CAAO,IAAK,CAAA,OAAA,CAAS,QAAQ,IAAK,CAAA,KAAA;AAClD,EAAA,IAAI,KAAK,SAAW,EAAA,MAAA,CAAO,IAAK,CAAA,OAAA,CAAS,UAAU,IAAK,CAAA,SAAA;AACxD,EAAO,OAAA,MAAA;AACT;AAOa,MAAA,kCAAA,GACX,OAAM,IAAQ,KAAA;AACZ,EAAA,MAAM,WAAoD,GAAA;AAAA,IACxD,CAACC,sCAA2B,GAAG,IAAK,CAAA;AAAA,GACtC;AAEA,EAAA,IAAI,KAAK,WAAa,EAAA;AACpB,IAAY,WAAA,CAAA,uBAAuB,IAAI,IAAK,CAAA,WAAA;AAAA;AAG9C,EAAA,MAAM,MAAsB,GAAA;AAAA,IAC1B,UAAY,EAAA,uBAAA;AAAA,IACZ,IAAM,EAAA,OAAA;AAAA,IACN,QAAU,EAAA;AAAA,MACR,MAAM,IAAK,CAAA,IAAA;AAAA,MACX;AAAA,KACF;AAAA,IACA,IAAM,EAAA;AAAA,MACJ,IAAM,EAAA,MAAA;AAAA,MACN,SAAS,EAAC;AAAA,MACV,UAAU;AAAC;AACb,GACF;AAEA,EAAA,IAAI,KAAK,WAAa,EAAA;AACpB,IAAO,MAAA,CAAA,QAAA,CAAS,cAAc,IAAK,CAAA,WAAA;AAAA;AAErC,EAAA,IAAI,KAAK,IAAM,EAAA;AACb,IAAO,MAAA,CAAA,IAAA,CAAK,OAAS,CAAA,WAAA,GAAc,IAAK,CAAA,IAAA;AAAA;AAE1C,EAAA,IAAI,KAAK,SAAW,EAAA;AAClB,IAAO,MAAA,CAAA,IAAA,CAAK,OAAS,CAAA,OAAA,GAAU,IAAK,CAAA,SAAA;AAAA;AAEtC,EAAA,IAAI,KAAK,UAAY,EAAA;AACnB,IAAO,MAAA,CAAA,IAAA,CAAK,MAAS,GAAA,IAAA,CAAK,UAAW,CAAA,IAAA;AAAA;AAGvC,EAAA,MAAA,CAAO,KAAK,OAAU,GAAA,IAAA,CAAK,QAAQ,GAAI,CAAA,CAAA,IAAA,KAAQ,KAAK,KAAK,CAAA;AAEzD,EAAO,OAAA,MAAA;AACT;;;;;"}