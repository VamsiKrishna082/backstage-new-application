{"version":3,"file":"githubCatalogModule.cjs.js","sources":["../../src/module/githubCatalogModule.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  coreServices,\n  createBackendModule,\n} from '@backstage/backend-plugin-api';\nimport {\n  catalogAnalysisExtensionPoint,\n  catalogProcessingExtensionPoint,\n  catalogServiceRef,\n} from '@backstage/plugin-catalog-node/alpha';\nimport { eventsServiceRef } from '@backstage/plugin-events-node';\nimport { GithubEntityProvider } from '../providers/GithubEntityProvider';\nimport { GithubLocationAnalyzer } from '../analyzers/GithubLocationAnalyzer';\n\n/**\n * Registers the `GithubEntityProvider` with the catalog processing extension point.\n *\n * @public\n */\nexport const githubCatalogModule = createBackendModule({\n  pluginId: 'catalog',\n  moduleId: 'github',\n  register(env) {\n    env.registerInit({\n      deps: {\n        catalogAnalyzers: catalogAnalysisExtensionPoint,\n        auth: coreServices.auth,\n        catalogProcessing: catalogProcessingExtensionPoint,\n        config: coreServices.rootConfig,\n        discovery: coreServices.discovery,\n        events: eventsServiceRef,\n        logger: coreServices.logger,\n        scheduler: coreServices.scheduler,\n        catalog: catalogServiceRef,\n      },\n      async init({\n        catalogProcessing,\n        config,\n        events,\n        logger,\n        scheduler,\n        catalogAnalyzers,\n        discovery,\n        auth,\n        catalog,\n      }) {\n        catalogAnalyzers.addScmLocationAnalyzer(\n          new GithubLocationAnalyzer({\n            discovery,\n            config,\n            auth,\n            catalog,\n          }),\n        );\n\n        catalogProcessing.addEntityProvider(\n          GithubEntityProvider.fromConfig(config, {\n            events,\n            logger,\n            scheduler,\n          }),\n        );\n      },\n    });\n  },\n});\n"],"names":["createBackendModule","catalogAnalysisExtensionPoint","coreServices","catalogProcessingExtensionPoint","eventsServiceRef","catalogServiceRef","GithubLocationAnalyzer","GithubEntityProvider"],"mappings":";;;;;;;;AAkCO,MAAM,sBAAsBA,oCAAoB,CAAA;AAAA,EACrD,QAAU,EAAA,SAAA;AAAA,EACV,QAAU,EAAA,QAAA;AAAA,EACV,SAAS,GAAK,EAAA;AACZ,IAAA,GAAA,CAAI,YAAa,CAAA;AAAA,MACf,IAAM,EAAA;AAAA,QACJ,gBAAkB,EAAAC,mCAAA;AAAA,QAClB,MAAMC,6BAAa,CAAA,IAAA;AAAA,QACnB,iBAAmB,EAAAC,qCAAA;AAAA,QACnB,QAAQD,6BAAa,CAAA,UAAA;AAAA,QACrB,WAAWA,6BAAa,CAAA,SAAA;AAAA,QACxB,MAAQ,EAAAE,iCAAA;AAAA,QACR,QAAQF,6BAAa,CAAA,MAAA;AAAA,QACrB,WAAWA,6BAAa,CAAA,SAAA;AAAA,QACxB,OAAS,EAAAG;AAAA,OACX;AAAA,MACA,MAAM,IAAK,CAAA;AAAA,QACT,iBAAA;AAAA,QACA,MAAA;AAAA,QACA,MAAA;AAAA,QACA,MAAA;AAAA,QACA,SAAA;AAAA,QACA,gBAAA;AAAA,QACA,SAAA;AAAA,QACA,IAAA;AAAA,QACA;AAAA,OACC,EAAA;AACD,QAAiB,gBAAA,CAAA,sBAAA;AAAA,UACf,IAAIC,6CAAuB,CAAA;AAAA,YACzB,SAAA;AAAA,YACA,MAAA;AAAA,YACA,IAAA;AAAA,YACA;AAAA,WACD;AAAA,SACH;AAEA,QAAkB,iBAAA,CAAA,iBAAA;AAAA,UAChBC,yCAAA,CAAqB,WAAW,MAAQ,EAAA;AAAA,YACtC,MAAA;AAAA,YACA,MAAA;AAAA,YACA;AAAA,WACD;AAAA,SACH;AAAA;AACF,KACD,CAAA;AAAA;AAEL,CAAC;;;;"}