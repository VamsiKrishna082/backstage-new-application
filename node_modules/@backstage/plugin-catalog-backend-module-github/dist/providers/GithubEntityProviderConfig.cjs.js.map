{"version":3,"file":"GithubEntityProviderConfig.cjs.js","sources":["../../src/providers/GithubEntityProviderConfig.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  SchedulerServiceTaskScheduleDefinition,\n  readSchedulerServiceTaskScheduleDefinitionFromConfig,\n} from '@backstage/backend-plugin-api';\nimport { Config } from '@backstage/config';\n\nconst DEFAULT_CATALOG_PATH = '/catalog-info.yaml';\nconst DEFAULT_PROVIDER_ID = 'default';\n\nexport const DEFAULT_GITHUB_ENTITY_PROVIDER_CONFIG_SCHEDULE = {\n  frequency: {\n    hours: 3,\n  },\n  timeout: {\n    hours: 1,\n  },\n};\n\nexport type GithubEntityProviderConfig = {\n  id: string;\n  catalogPath: string;\n  organization: string;\n  host: string;\n  filters?: {\n    repository?: RegExp;\n    branch?: string;\n    topic?: GithubTopicFilters;\n    allowForks?: boolean;\n    visibility?: string[];\n  };\n  validateLocationsExist: boolean;\n  schedule?: SchedulerServiceTaskScheduleDefinition;\n};\n\nexport type GithubTopicFilters = {\n  exclude?: string[];\n  include?: string[];\n};\n\nexport function readProviderConfigs(\n  config: Config,\n): GithubEntityProviderConfig[] {\n  const providersConfig = config.getOptionalConfig('catalog.providers.github');\n  if (!providersConfig) {\n    return [];\n  }\n\n  if (providersConfig.has('organization')) {\n    // simple/single config variant\n    return [readProviderConfig(DEFAULT_PROVIDER_ID, providersConfig)];\n  }\n\n  return providersConfig.keys().map(id => {\n    const providerConfig = providersConfig.getConfig(id);\n\n    return readProviderConfig(id, providerConfig);\n  });\n}\n\nfunction readProviderConfig(\n  id: string,\n  config: Config,\n): GithubEntityProviderConfig {\n  const organization = config.getString('organization');\n  const catalogPath =\n    config.getOptionalString('catalogPath') ?? DEFAULT_CATALOG_PATH;\n  const host = config.getOptionalString('host') ?? 'github.com';\n  const repositoryPattern = config.getOptionalString('filters.repository');\n  const branchPattern = config.getOptionalString('filters.branch');\n  const allowForks = config.getOptionalBoolean('filters.allowForks') ?? true;\n  const topicFilterInclude = config?.getOptionalStringArray(\n    'filters.topic.include',\n  );\n  const topicFilterExclude = config?.getOptionalStringArray(\n    'filters.topic.exclude',\n  );\n  const validateLocationsExist =\n    config?.getOptionalBoolean('validateLocationsExist') ?? false;\n\n  const catalogPathContainsWildcard = catalogPath.includes('*');\n\n  const visibilityFilterInclude =\n    config?.getOptionalStringArray('filters.visibility');\n\n  if (validateLocationsExist && catalogPathContainsWildcard) {\n    throw Error(\n      `Error while processing GitHub provider config. The catalog path ${catalogPath} contains a wildcard, which is incompatible with validation of locations existing before emitting them. Ensure that validateLocationsExist is set to false.`,\n    );\n  }\n\n  if (branchPattern?.includes('/')) {\n    throw new Error(\n      'Error while processing GitHub provider config. Slash characters (/) are not allowed in filters.branch',\n    );\n  }\n\n  const schedule = config.has('schedule')\n    ? readSchedulerServiceTaskScheduleDefinitionFromConfig(\n        config.getConfig('schedule'),\n      )\n    : DEFAULT_GITHUB_ENTITY_PROVIDER_CONFIG_SCHEDULE;\n\n  return {\n    id,\n    catalogPath,\n    organization,\n    host,\n    filters: {\n      repository: repositoryPattern\n        ? compileRegExp(repositoryPattern)\n        : undefined,\n      branch: branchPattern || undefined,\n      allowForks: allowForks,\n      topic: {\n        include: topicFilterInclude,\n        exclude: topicFilterExclude,\n      },\n      visibility: visibilityFilterInclude,\n    },\n    schedule,\n    validateLocationsExist,\n  };\n}\n\n/**\n * Compiles a RegExp while enforcing the pattern to contain\n * the start-of-line and end-of-line anchors.\n *\n * @param pattern\n */\nfunction compileRegExp(pattern: string): RegExp {\n  let fullLinePattern = pattern;\n  if (!fullLinePattern.startsWith('^')) {\n    fullLinePattern = `^${fullLinePattern}`;\n  }\n  if (!fullLinePattern.endsWith('$')) {\n    fullLinePattern = `${fullLinePattern}$`;\n  }\n\n  return new RegExp(fullLinePattern);\n}\n"],"names":["readSchedulerServiceTaskScheduleDefinitionFromConfig"],"mappings":";;;;AAsBA,MAAM,oBAAuB,GAAA,oBAAA;AAC7B,MAAM,mBAAsB,GAAA,SAAA;AAErB,MAAM,8CAAiD,GAAA;AAAA,EAC5D,SAAW,EAAA;AAAA,IACT,KAAO,EAAA;AAAA,GACT;AAAA,EACA,OAAS,EAAA;AAAA,IACP,KAAO,EAAA;AAAA;AAEX;AAuBO,SAAS,oBACd,MAC8B,EAAA;AAC9B,EAAM,MAAA,eAAA,GAAkB,MAAO,CAAA,iBAAA,CAAkB,0BAA0B,CAAA;AAC3E,EAAA,IAAI,CAAC,eAAiB,EAAA;AACpB,IAAA,OAAO,EAAC;AAAA;AAGV,EAAI,IAAA,eAAA,CAAgB,GAAI,CAAA,cAAc,CAAG,EAAA;AAEvC,IAAA,OAAO,CAAC,kBAAA,CAAmB,mBAAqB,EAAA,eAAe,CAAC,CAAA;AAAA;AAGlE,EAAA,OAAO,eAAgB,CAAA,IAAA,EAAO,CAAA,GAAA,CAAI,CAAM,EAAA,KAAA;AACtC,IAAM,MAAA,cAAA,GAAiB,eAAgB,CAAA,SAAA,CAAU,EAAE,CAAA;AAEnD,IAAO,OAAA,kBAAA,CAAmB,IAAI,cAAc,CAAA;AAAA,GAC7C,CAAA;AACH;AAEA,SAAS,kBAAA,CACP,IACA,MAC4B,EAAA;AAC5B,EAAM,MAAA,YAAA,GAAe,MAAO,CAAA,SAAA,CAAU,cAAc,CAAA;AACpD,EAAA,MAAM,WACJ,GAAA,MAAA,CAAO,iBAAkB,CAAA,aAAa,CAAK,IAAA,oBAAA;AAC7C,EAAA,MAAM,IAAO,GAAA,MAAA,CAAO,iBAAkB,CAAA,MAAM,CAAK,IAAA,YAAA;AACjD,EAAM,MAAA,iBAAA,GAAoB,MAAO,CAAA,iBAAA,CAAkB,oBAAoB,CAAA;AACvE,EAAM,MAAA,aAAA,GAAgB,MAAO,CAAA,iBAAA,CAAkB,gBAAgB,CAAA;AAC/D,EAAA,MAAM,UAAa,GAAA,MAAA,CAAO,kBAAmB,CAAA,oBAAoB,CAAK,IAAA,IAAA;AACtE,EAAA,MAAM,qBAAqB,MAAQ,EAAA,sBAAA;AAAA,IACjC;AAAA,GACF;AACA,EAAA,MAAM,qBAAqB,MAAQ,EAAA,sBAAA;AAAA,IACjC;AAAA,GACF;AACA,EAAA,MAAM,sBACJ,GAAA,MAAA,EAAQ,kBAAmB,CAAA,wBAAwB,CAAK,IAAA,KAAA;AAE1D,EAAM,MAAA,2BAAA,GAA8B,WAAY,CAAA,QAAA,CAAS,GAAG,CAAA;AAE5D,EAAM,MAAA,uBAAA,GACJ,MAAQ,EAAA,sBAAA,CAAuB,oBAAoB,CAAA;AAErD,EAAA,IAAI,0BAA0B,2BAA6B,EAAA;AACzD,IAAM,MAAA,KAAA;AAAA,MACJ,mEAAmE,WAAW,CAAA,2JAAA;AAAA,KAChF;AAAA;AAGF,EAAI,IAAA,aAAA,EAAe,QAAS,CAAA,GAAG,CAAG,EAAA;AAChC,IAAA,MAAM,IAAI,KAAA;AAAA,MACR;AAAA,KACF;AAAA;AAGF,EAAA,MAAM,QAAW,GAAA,MAAA,CAAO,GAAI,CAAA,UAAU,CAClC,GAAAA,qEAAA;AAAA,IACE,MAAA,CAAO,UAAU,UAAU;AAAA,GAE7B,GAAA,8CAAA;AAEJ,EAAO,OAAA;AAAA,IACL,EAAA;AAAA,IACA,WAAA;AAAA,IACA,YAAA;AAAA,IACA,IAAA;AAAA,IACA,OAAS,EAAA;AAAA,MACP,UAAY,EAAA,iBAAA,GACR,aAAc,CAAA,iBAAiB,CAC/B,GAAA,KAAA,CAAA;AAAA,MACJ,QAAQ,aAAiB,IAAA,KAAA,CAAA;AAAA,MACzB,UAAA;AAAA,MACA,KAAO,EAAA;AAAA,QACL,OAAS,EAAA,kBAAA;AAAA,QACT,OAAS,EAAA;AAAA,OACX;AAAA,MACA,UAAY,EAAA;AAAA,KACd;AAAA,IACA,QAAA;AAAA,IACA;AAAA,GACF;AACF;AAQA,SAAS,cAAc,OAAyB,EAAA;AAC9C,EAAA,IAAI,eAAkB,GAAA,OAAA;AACtB,EAAA,IAAI,CAAC,eAAA,CAAgB,UAAW,CAAA,GAAG,CAAG,EAAA;AACpC,IAAA,eAAA,GAAkB,IAAI,eAAe,CAAA,CAAA;AAAA;AAEvC,EAAA,IAAI,CAAC,eAAA,CAAgB,QAAS,CAAA,GAAG,CAAG,EAAA;AAClC,IAAA,eAAA,GAAkB,GAAG,eAAe,CAAA,CAAA,CAAA;AAAA;AAGtC,EAAO,OAAA,IAAI,OAAO,eAAe,CAAA;AACnC;;;;;"}