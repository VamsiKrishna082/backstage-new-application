{"version":3,"file":"index-DtGq-t-5.esm.js","sources":["../../src/components/NewProjectPage/NewProjectPage.tsx","../../src/components/ProjectDetailsPage/ProjectDetailsPage.tsx","../../src/components/ProjectListPage/ProjectListPage.tsx","../../src/components/GcpProjectsPage/GcpProjectsPage.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport React, { useState } from 'react';\nimport {\n  Content,\n  ContentHeader,\n  Header,\n  HeaderLabel,\n  InfoCard,\n  Page,\n  SimpleStepper,\n  SimpleStepperStep,\n  StructuredMetadataTable,\n  SupportButton,\n} from '@backstage/core-components';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport { useRouteRef } from '@backstage/core-plugin-api';\nimport { rootRouteRef } from '../../routes';\n\nexport const Project = () => {\n  const [projectName, setProjectName] = useState('');\n  const [projectId, setProjectId] = useState('');\n  const [disabled, setDisabled] = useState(true);\n\n  const metadata = {\n    ProjectName: projectName,\n    ProjectId: projectId,\n  };\n\n  return (\n    <Content>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6}>\n          <InfoCard title=\"Create new GCP Project\">\n            <SimpleStepper>\n              <SimpleStepperStep title=\"Project Name\">\n                <TextField\n                  variant=\"outlined\"\n                  name=\"projectName\"\n                  label=\"Project Name\"\n                  helperText=\"The name of the new project.\"\n                  inputProps={{ 'aria-label': 'Project Name' }}\n                  onChange={e => setProjectName(e.target.value)}\n                  value={projectName}\n                  fullWidth\n                />\n              </SimpleStepperStep>\n              <SimpleStepperStep title=\"Project ID\">\n                <TextField\n                  variant=\"outlined\"\n                  name=\"projectId\"\n                  label=\"projectId\"\n                  onChange={e => setProjectId(e.target.value)}\n                  value={projectId}\n                  fullWidth\n                />\n              </SimpleStepperStep>\n\n              <SimpleStepperStep\n                title=\"Review\"\n                actions={{\n                  nextText: 'Confirm',\n                  onNext: () => setDisabled(false),\n                }}\n              >\n                <StructuredMetadataTable metadata={metadata} />\n              </SimpleStepperStep>\n            </SimpleStepper>\n            <Button\n              component={RouterLink}\n              variant=\"text\"\n              data-testid=\"cancel-button\"\n              color=\"primary\"\n              to=\"/gcp-projects\"\n            >\n              Cancel\n            </Button>\n            <Button\n              component={RouterLink}\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={disabled}\n              to={`newProject?projectName=${encodeURIComponent(\n                projectName,\n              )},projectId=${encodeURIComponent(projectId)}`}\n            >\n              Create\n            </Button>\n          </InfoCard>\n        </Grid>\n      </Grid>\n    </Content>\n  );\n};\n\nconst labels = (\n  <>\n    <HeaderLabel label=\"Owner\" value=\"Spotify\" />\n    <HeaderLabel label=\"Lifecycle\" value=\"Production\" />\n  </>\n);\n\nexport const NewProjectPage = () => {\n  const docsRootLink = useRouteRef(rootRouteRef)();\n  return (\n    <Page themeId=\"tool\">\n      <Header title=\"New GCP Project\" type=\"GCP\" typeLink={docsRootLink}>\n        {labels}\n      </Header>\n      <Content>\n        <ContentHeader title=\"\">\n          <SupportButton>\n            This plugin allows you to view and interact with your gcp projects.\n          </SupportButton>\n        </ContentHeader>\n        <Project />\n      </Content>\n    </Page>\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport { useAsync, useMountEffect } from '@react-hookz/web';\nimport { gcpApiRef } from '../../api';\n\nimport {\n  Content,\n  ContentHeader,\n  Header,\n  HeaderLabel,\n  Page,\n  SupportButton,\n  WarningPanel,\n} from '@backstage/core-components';\n\nimport { useApi, useRouteRef } from '@backstage/core-plugin-api';\nimport { rootRouteRef } from '../../routes';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 720,\n    margin: theme.spacing(2),\n  },\n  title: {\n    padding: theme.spacing(1, 0, 2, 0),\n  },\n  table: {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst DetailsPage = () => {\n  const api = useApi(gcpApiRef);\n  const classes = useStyles();\n\n  const [{ status, result: details, error }, { execute }] = useAsync(async () =>\n    api.getProject(\n      decodeURIComponent(window.location.search.split('projectId=')[1]),\n    ),\n  );\n\n  useMountEffect(execute);\n\n  if (status === 'loading') {\n    return <LinearProgress />;\n  } else if (error) {\n    return (\n      <WarningPanel title=\"Failed to load project\">\n        {error.toString()}\n      </WarningPanel>\n    );\n  }\n\n  const cloud_home_url = 'https://console.cloud.google.com';\n\n  return (\n    <Table component={Paper} className={classes.table}>\n      <Table>\n        <TableBody>\n          <TableRow>\n            <TableCell>\n              <Typography noWrap>Name</Typography>\n            </TableCell>\n            <TableCell>{details?.name}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography noWrap>Project Number</Typography>\n            </TableCell>\n            <TableCell>{details?.projectNumber}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography noWrap>Project ID</Typography>\n            </TableCell>\n            <TableCell>{details?.projectId}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography noWrap>State</Typography>\n            </TableCell>\n            <TableCell>{details?.lifecycleState}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography noWrap>Creation Time</Typography>\n            </TableCell>\n            <TableCell>{details?.createTime}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography noWrap>Links</Typography>\n            </TableCell>\n            <TableCell>\n              <ButtonGroup\n                variant=\"text\"\n                color=\"primary\"\n                aria-label=\"text primary button group\"\n              >\n                {details?.name && (\n                  <Button>\n                    <a\n                      href={`${cloud_home_url}/home/dashboard?project=${details.projectId}&supportedpurview=project`}\n                      target=\"_blank\"\n                      rel=\"noreferrer noopener\"\n                    >\n                      GCP\n                    </a>\n                  </Button>\n                )}\n                {details?.name && (\n                  <Button>\n                    <a\n                      href={`${cloud_home_url}/logs/query?project=${details.projectId}&supportedpurview=project`}\n                      target=\"_blank\"\n                      rel=\"noreferrer noopener\"\n                    >\n                      Logs\n                    </a>\n                  </Button>\n                )}\n              </ButtonGroup>\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </Table>\n  );\n};\n\nconst labels = (\n  <>\n    <HeaderLabel label=\"Owner\" value=\"Spotify\" />\n    <HeaderLabel label=\"Lifecycle\" value=\"Production\" />\n  </>\n);\n\nexport const ProjectDetailsPage = () => {\n  const docsRootLink = useRouteRef(rootRouteRef)();\n\n  return (\n    <Page themeId=\"service\">\n      <Header title=\"GCP Project Details\" type=\"GCP\" typeLink={docsRootLink}>\n        {labels}\n      </Header>\n      <Content>\n        <ContentHeader title=\"\">\n          <SupportButton>Support Button</SupportButton>\n        </ContentHeader>\n        <DetailsPage />\n      </Content>\n    </Page>\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n//  NEEDS WORK\nimport Button from '@material-ui/core/Button';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\n\nimport { useAsync, useMountEffect } from '@react-hookz/web';\nimport { gcpApiRef, Project } from '../../api';\n\nimport {\n  Content,\n  ContentHeader,\n  Header,\n  HeaderLabel,\n  Link,\n  Page,\n  Table,\n  SupportButton,\n  WarningPanel,\n} from '@backstage/core-components';\n\nimport { useApi } from '@backstage/core-plugin-api';\n\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst LongText = ({ text, max }: { text: string; max: number }) => {\n  if (text.length < max) {\n    return (\n      <Typography color=\"primary\" component=\"span\">\n        {text}\n      </Typography>\n    );\n  }\n  return (\n    <Tooltip title={text}>\n      <Typography color=\"primary\" component=\"span\">\n        {text.slice(0, max)}...\n      </Typography>\n    </Tooltip>\n  );\n};\n\nconst labels = (\n  <>\n    <HeaderLabel label=\"Owner\" value=\"Spotify\" />\n    <HeaderLabel label=\"Lifecycle\" value=\"Production\" />\n  </>\n);\n\nconst PageContents = () => {\n  const api = useApi(gcpApiRef);\n\n  const [{ status, result, error }, { execute }] = useAsync(() =>\n    api.listProjects(),\n  );\n  useMountEffect(execute);\n\n  if (status === 'loading') {\n    return <LinearProgress />;\n  } else if (error) {\n    return (\n      <WarningPanel title=\"Failed to load projects\">\n        {error.toString()}\n      </WarningPanel>\n    );\n  }\n\n  function renderLink(id: string) {\n    return (\n      <Link to={`project?projectId=${encodeURIComponent(id)}`}>\n        <Typography color=\"primary\">\n          <LongText text={id} max={60} />\n        </Typography>\n      </Link>\n    );\n  }\n\n  return (\n    <div style={{ height: '95%', width: '100%' }}>\n      <Table\n        columns={[\n          {\n            field: 'name',\n            title: 'Name',\n            defaultSort: 'asc',\n          },\n          {\n            field: 'projectNumber',\n            title: 'Project Number',\n          },\n          {\n            field: 'projectID',\n            title: 'Project ID',\n            render: (rowData: { id: string }) => renderLink(rowData.id),\n          },\n          {\n            field: 'state',\n            title: 'State',\n          },\n          {\n            field: 'creationTime',\n            title: 'Creation Time',\n          },\n        ]}\n        data={\n          result?.map((project: Project) => ({\n            id: project.projectId,\n            name: project.name,\n            projectNumber: project?.projectNumber || 'Error',\n            projectID: project.projectId,\n            state: project?.lifecycleState || 'Error',\n            creationTime: project?.createTime || 'Error',\n          })) || []\n        }\n        options={{\n          pageSize: 5,\n          pageSizeOptions: [5, 10, 25, 50, 100],\n        }}\n      />\n    </div>\n  );\n};\n\nexport const ProjectListPage = () => (\n  <Page themeId=\"service\">\n    <Header title=\"GCP Projects\" type=\"tool\">\n      {labels}\n    </Header>\n    <Content>\n      <ContentHeader title=\"\">\n        <Button\n          component={RouterLink}\n          variant=\"contained\"\n          color=\"primary\"\n          to=\"new\"\n        >\n          New Project\n        </Button>\n        <SupportButton>All your software catalog entities</SupportButton>\n      </ContentHeader>\n      <PageContents />\n    </Content>\n  </Page>\n);\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { NewProjectPage } from '../NewProjectPage';\nimport { ProjectDetailsPage } from '../ProjectDetailsPage';\nimport { ProjectListPage } from '../ProjectListPage';\n\nexport const GcpProjectsPage = () => (\n  <Routes>\n    <Route path=\"/\" element={<ProjectListPage />} />\n    <Route path=\"/new\" element={<NewProjectPage />} />\n    <Route path=\"/project\" element={<ProjectDetailsPage />} />\n  </Routes>\n);\n"],"names":["RouterLink","labels","Link","Table"],"mappings":";;;;;;;;;;;;;;;;;;;;AAqCO,MAAM,UAAU,MAAM;AAC3B,EAAA,MAAM,CAAC,WAAA,EAAa,cAAc,CAAA,GAAI,SAAS,EAAE,CAAA,CAAA;AACjD,EAAA,MAAM,CAAC,SAAA,EAAW,YAAY,CAAA,GAAI,SAAS,EAAE,CAAA,CAAA;AAC7C,EAAA,MAAM,CAAC,QAAA,EAAU,WAAW,CAAA,GAAI,SAAS,IAAI,CAAA,CAAA;AAE7C,EAAA,MAAM,QAAW,GAAA;AAAA,IACf,WAAa,EAAA,WAAA;AAAA,IACb,SAAW,EAAA,SAAA;AAAA,GACb,CAAA;AAEA,EACE,uBAAA,KAAA,CAAA,aAAA,CAAC,OACC,EAAA,IAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,IAAK,EAAA,EAAA,SAAA,EAAS,MAAC,OAAS,EAAA,CAAA,EAAA,kBACtB,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,EAAK,IAAI,EAAA,IAAA,EAAC,IAAI,EAAI,EAAA,EAAA,EAAI,CACrB,EAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,QAAS,EAAA,EAAA,KAAA,EAAM,wBACd,EAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,aACC,EAAA,IAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,iBAAkB,EAAA,EAAA,KAAA,EAAM,cACvB,EAAA,kBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,SAAA;AAAA,IAAA;AAAA,MACC,OAAQ,EAAA,UAAA;AAAA,MACR,IAAK,EAAA,aAAA;AAAA,MACL,KAAM,EAAA,cAAA;AAAA,MACN,UAAW,EAAA,8BAAA;AAAA,MACX,UAAA,EAAY,EAAE,YAAA,EAAc,cAAe,EAAA;AAAA,MAC3C,QAAU,EAAA,CAAA,CAAA,KAAK,cAAe,CAAA,CAAA,CAAE,OAAO,KAAK,CAAA;AAAA,MAC5C,KAAO,EAAA,WAAA;AAAA,MACP,SAAS,EAAA,IAAA;AAAA,KAAA;AAAA,GAEb,CAAA,kBACC,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAA,EAAkB,OAAM,YACvB,EAAA,kBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,SAAA;AAAA,IAAA;AAAA,MACC,OAAQ,EAAA,UAAA;AAAA,MACR,IAAK,EAAA,WAAA;AAAA,MACL,KAAM,EAAA,WAAA;AAAA,MACN,QAAU,EAAA,CAAA,CAAA,KAAK,YAAa,CAAA,CAAA,CAAE,OAAO,KAAK,CAAA;AAAA,MAC1C,KAAO,EAAA,SAAA;AAAA,MACP,SAAS,EAAA,IAAA;AAAA,KAAA;AAAA,GAEb,CAEA,kBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,iBAAA;AAAA,IAAA;AAAA,MACC,KAAM,EAAA,QAAA;AAAA,MACN,OAAS,EAAA;AAAA,QACP,QAAU,EAAA,SAAA;AAAA,QACV,MAAA,EAAQ,MAAM,WAAA,CAAY,KAAK,CAAA;AAAA,OACjC;AAAA,KAAA;AAAA,oBAEA,KAAA,CAAA,aAAA,CAAC,2BAAwB,QAAoB,EAAA,CAAA;AAAA,GAEjD,CACA,kBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,MAAA;AAAA,IAAA;AAAA,MACC,SAAW,EAAAA,IAAA;AAAA,MACX,OAAQ,EAAA,MAAA;AAAA,MACR,aAAY,EAAA,eAAA;AAAA,MACZ,KAAM,EAAA,SAAA;AAAA,MACN,EAAG,EAAA,eAAA;AAAA,KAAA;AAAA,IACJ,QAAA;AAAA,GAGD,kBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,MAAA;AAAA,IAAA;AAAA,MACC,SAAW,EAAAA,IAAA;AAAA,MACX,OAAQ,EAAA,WAAA;AAAA,MACR,KAAM,EAAA,SAAA;AAAA,MACN,QAAA;AAAA,MACA,IAAI,CAA0B,uBAAA,EAAA,kBAAA;AAAA,QAC5B,WAAA;AAAA,OACD,CAAA,WAAA,EAAc,kBAAmB,CAAA,SAAS,CAAC,CAAA,CAAA;AAAA,KAAA;AAAA,IAC7C,QAAA;AAAA,GAGH,CACF,CACF,CACF,CAAA,CAAA;AAEJ,CAAA,CAAA;AAEA,MAAMC,QACJ,mBAAA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,kBACG,KAAA,CAAA,aAAA,CAAA,WAAA,EAAA,EAAY,OAAM,OAAQ,EAAA,KAAA,EAAM,SAAU,EAAA,CAAA,sCAC1C,WAAY,EAAA,EAAA,KAAA,EAAM,WAAY,EAAA,KAAA,EAAM,cAAa,CACpD,CAAA,CAAA;AAGK,MAAM,iBAAiB,MAAM;AAClC,EAAM,MAAA,YAAA,GAAe,WAAY,CAAA,YAAY,CAAE,EAAA,CAAA;AAC/C,EAAA,uBACG,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,EAAK,OAAQ,EAAA,MAAA,EAAA,kBACX,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,EAAO,KAAM,EAAA,iBAAA,EAAkB,IAAK,EAAA,KAAA,EAAM,QAAU,EAAA,YAAA,EAAA,EAClDA,QACH,CAAA,kBACC,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA,IAAA,kBACE,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA,EAAc,KAAM,EAAA,EAAA,EAAA,kBAClB,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA,IAAA,EAAc,qEAEf,CACF,CACA,kBAAA,KAAA,CAAA,aAAA,CAAC,OAAQ,EAAA,IAAA,CACX,CACF,CAAA,CAAA;AAEJ,CAAA;;AC/FA,MAAM,SAAA,GAAY,WAAW,CAAU,KAAA,MAAA;AAAA,EACrC,IAAM,EAAA;AAAA,IACJ,QAAU,EAAA,GAAA;AAAA,IACV,MAAA,EAAQ,KAAM,CAAA,OAAA,CAAQ,CAAC,CAAA;AAAA,GACzB;AAAA,EACA,KAAO,EAAA;AAAA,IACL,SAAS,KAAM,CAAA,OAAA,CAAQ,CAAG,EAAA,CAAA,EAAG,GAAG,CAAC,CAAA;AAAA,GACnC;AAAA,EACA,KAAO,EAAA;AAAA,IACL,OAAA,EAAS,KAAM,CAAA,OAAA,CAAQ,CAAC,CAAA;AAAA,GAC1B;AACF,CAAE,CAAA,CAAA,CAAA;AAEF,MAAM,cAAc,MAAM;AACxB,EAAM,MAAA,GAAA,GAAM,OAAO,SAAS,CAAA,CAAA;AAC5B,EAAA,MAAM,UAAU,SAAU,EAAA,CAAA;AAE1B,EAAM,MAAA,CAAC,EAAE,MAAA,EAAQ,MAAQ,EAAA,OAAA,EAAS,OAAS,EAAA,EAAE,OAAQ,EAAC,CAAI,GAAA,QAAA;AAAA,IAAS,YACjE,GAAI,CAAA,UAAA;AAAA,MACF,kBAAA,CAAmB,OAAO,QAAS,CAAA,MAAA,CAAO,MAAM,YAAY,CAAA,CAAE,CAAC,CAAC,CAAA;AAAA,KAClE;AAAA,GACF,CAAA;AAEA,EAAA,cAAA,CAAe,OAAO,CAAA,CAAA;AAEtB,EAAA,IAAI,WAAW,SAAW,EAAA;AACxB,IAAA,2CAAQ,cAAe,EAAA,IAAA,CAAA,CAAA;AAAA,aACd,KAAO,EAAA;AAChB,IAAA,2CACG,YAAa,EAAA,EAAA,KAAA,EAAM,wBACjB,EAAA,EAAA,KAAA,CAAM,UACT,CAAA,CAAA;AAAA,GAEJ;AAEA,EAAA,MAAM,cAAiB,GAAA,kCAAA,CAAA;AAEvB,EACE,uBAAA,KAAA,CAAA,aAAA,CAAC,KAAM,EAAA,EAAA,SAAA,EAAW,KAAO,EAAA,SAAA,EAAW,QAAQ,KAC1C,EAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,KACC,EAAA,IAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,SACC,EAAA,IAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,gCACE,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA,IAAA,kBACE,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA,EAAW,MAAM,EAAA,IAAA,EAAA,EAAC,MAAI,CACzB,CAAA,kBACC,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA,IAAA,EAAW,OAAS,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,OAAA,CAAA,IAAK,CAC5B,CACA,kBAAA,KAAA,CAAA,aAAA,CAAC,QACC,EAAA,IAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,SACC,EAAA,IAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,cAAW,MAAM,EAAA,IAAA,EAAA,EAAC,gBAAc,CACnC,CACA,kBAAA,KAAA,CAAA,aAAA,CAAC,iBAAW,OAAS,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,OAAA,CAAA,aAAc,CACrC,CAAA,kBACC,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,IAAA,sCACE,SACC,EAAA,IAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,UAAW,EAAA,EAAA,MAAA,EAAM,IAAC,EAAA,EAAA,YAAU,CAC/B,CACA,kBAAA,KAAA,CAAA,aAAA,CAAC,SAAW,EAAA,IAAA,EAAA,OAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,OAAA,CAAS,SAAU,CACjC,mBACC,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,IAAA,kBACE,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA,IAAA,kBACE,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA,EAAW,QAAM,IAAC,EAAA,EAAA,OAAK,CAC1B,CAAA,kBACC,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA,IAAA,EAAW,mCAAS,cAAe,CACtC,CACA,kBAAA,KAAA,CAAA,aAAA,CAAC,QACC,EAAA,IAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,iCACE,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA,EAAW,MAAM,EAAA,IAAA,EAAA,EAAC,eAAa,CAClC,mBACC,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA,IAAA,EAAW,OAAS,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,OAAA,CAAA,UAAW,CAClC,CAAA,sCACC,QACC,EAAA,IAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,SACC,EAAA,IAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,UAAW,EAAA,EAAA,MAAA,EAAM,QAAC,OAAK,CAC1B,CACA,kBAAA,KAAA,CAAA,aAAA,CAAC,SACC,EAAA,IAAA,kBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,WAAA;AAAA,IAAA;AAAA,MACC,OAAQ,EAAA,MAAA;AAAA,MACR,KAAM,EAAA,SAAA;AAAA,MACN,YAAW,EAAA,2BAAA;AAAA,KAAA;AAAA,IAEV,CAAA,OAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,OAAA,CAAS,IACR,qBAAA,KAAA,CAAA,aAAA,CAAC,MACC,EAAA,IAAA,kBAAA,KAAA,CAAA,aAAA;AAAA,MAAC,GAAA;AAAA,MAAA;AAAA,QACC,IAAM,EAAA,CAAA,EAAG,cAAc,CAAA,wBAAA,EAA2B,QAAQ,SAAS,CAAA,yBAAA,CAAA;AAAA,QACnE,MAAO,EAAA,QAAA;AAAA,QACP,GAAI,EAAA,qBAAA;AAAA,OAAA;AAAA,MACL,KAAA;AAAA,KAGH,CAAA;AAAA,IAED,CAAA,OAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,OAAA,CAAS,IACR,qBAAA,KAAA,CAAA,aAAA,CAAC,MACC,EAAA,IAAA,kBAAA,KAAA,CAAA,aAAA;AAAA,MAAC,GAAA;AAAA,MAAA;AAAA,QACC,IAAM,EAAA,CAAA,EAAG,cAAc,CAAA,oBAAA,EAAuB,QAAQ,SAAS,CAAA,yBAAA,CAAA;AAAA,QAC/D,MAAO,EAAA,QAAA;AAAA,QACP,GAAI,EAAA,qBAAA;AAAA,OAAA;AAAA,MACL,MAAA;AAAA,KAGH,CAAA;AAAA,GAGN,CACF,CACF,CACF,CACF,CAAA,CAAA;AAEJ,CAAA,CAAA;AAEA,MAAMA,QACJ,mBAAA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,kBACG,KAAA,CAAA,aAAA,CAAA,WAAA,EAAA,EAAY,OAAM,OAAQ,EAAA,KAAA,EAAM,SAAU,EAAA,CAAA,sCAC1C,WAAY,EAAA,EAAA,KAAA,EAAM,WAAY,EAAA,KAAA,EAAM,cAAa,CACpD,CAAA,CAAA;AAGK,MAAM,qBAAqB,MAAM;AACtC,EAAM,MAAA,YAAA,GAAe,WAAY,CAAA,YAAY,CAAE,EAAA,CAAA;AAE/C,EAAA,uBACG,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,EAAK,OAAQ,EAAA,SAAA,EAAA,kBACX,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,EAAO,KAAM,EAAA,qBAAA,EAAsB,IAAK,EAAA,KAAA,EAAM,QAAU,EAAA,YAAA,EAAA,EACtDA,QACH,CAAA,kBACC,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA,IAAA,kBACE,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA,EAAc,KAAM,EAAA,EAAA,EAAA,kBAClB,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA,IAAA,EAAc,gBAAc,CAC/B,CACA,kBAAA,KAAA,CAAA,aAAA,CAAC,WAAY,EAAA,IAAA,CACf,CACF,CAAA,CAAA;AAEJ,CAAA;;ACvIA,MAAM,QAAW,GAAA,CAAC,EAAE,IAAA,EAAM,KAAyC,KAAA;AACjE,EAAI,IAAA,IAAA,CAAK,SAAS,GAAK,EAAA;AACrB,IAAA,2CACG,UAAW,EAAA,EAAA,KAAA,EAAM,SAAU,EAAA,SAAA,EAAU,UACnC,IACH,CAAA,CAAA;AAAA,GAEJ;AACA,EAAA,2CACG,OAAQ,EAAA,EAAA,KAAA,EAAO,IACd,EAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,cAAW,KAAM,EAAA,SAAA,EAAU,SAAU,EAAA,MAAA,EAAA,EACnC,KAAK,KAAM,CAAA,CAAA,EAAG,GAAG,CAAA,EAAE,KACtB,CACF,CAAA,CAAA;AAEJ,CAAA,CAAA;AAEA,MAAM,MACJ,mBAAA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,kBACG,KAAA,CAAA,aAAA,CAAA,WAAA,EAAA,EAAY,OAAM,OAAQ,EAAA,KAAA,EAAM,SAAU,EAAA,CAAA,sCAC1C,WAAY,EAAA,EAAA,KAAA,EAAM,WAAY,EAAA,KAAA,EAAM,cAAa,CACpD,CAAA,CAAA;AAGF,MAAM,eAAe,MAAM;AACzB,EAAM,MAAA,GAAA,GAAM,OAAO,SAAS,CAAA,CAAA;AAE5B,EAAM,MAAA,CAAC,EAAE,MAAQ,EAAA,MAAA,EAAQ,OAAS,EAAA,EAAE,OAAQ,EAAC,CAAI,GAAA,QAAA;AAAA,IAAS,MACxD,IAAI,YAAa,EAAA;AAAA,GACnB,CAAA;AACA,EAAA,cAAA,CAAe,OAAO,CAAA,CAAA;AAEtB,EAAA,IAAI,WAAW,SAAW,EAAA;AACxB,IAAA,2CAAQ,cAAe,EAAA,IAAA,CAAA,CAAA;AAAA,aACd,KAAO,EAAA;AAChB,IAAA,2CACG,YAAa,EAAA,EAAA,KAAA,EAAM,yBACjB,EAAA,EAAA,KAAA,CAAM,UACT,CAAA,CAAA;AAAA,GAEJ;AAEA,EAAA,SAAS,WAAW,EAAY,EAAA;AAC9B,IAAA,2CACGC,MAAK,EAAA,EAAA,EAAA,EAAI,qBAAqB,kBAAmB,CAAA,EAAE,CAAC,CACnD,CAAA,EAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,cAAW,KAAM,EAAA,SAAA,EAAA,sCACf,QAAS,EAAA,EAAA,IAAA,EAAM,IAAI,GAAK,EAAA,EAAA,EAAI,CAC/B,CACF,CAAA,CAAA;AAAA,GAEJ;AAEA,EACE,uBAAA,KAAA,CAAA,aAAA,CAAC,SAAI,KAAO,EAAA,EAAE,QAAQ,KAAO,EAAA,KAAA,EAAO,QAClC,EAAA,kBAAA,KAAA,CAAA,aAAA;AAAA,IAACC,OAAA;AAAA,IAAA;AAAA,MACC,OAAS,EAAA;AAAA,QACP;AAAA,UACE,KAAO,EAAA,MAAA;AAAA,UACP,KAAO,EAAA,MAAA;AAAA,UACP,WAAa,EAAA,KAAA;AAAA,SACf;AAAA,QACA;AAAA,UACE,KAAO,EAAA,eAAA;AAAA,UACP,KAAO,EAAA,gBAAA;AAAA,SACT;AAAA,QACA;AAAA,UACE,KAAO,EAAA,WAAA;AAAA,UACP,KAAO,EAAA,YAAA;AAAA,UACP,MAAQ,EAAA,CAAC,OAA4B,KAAA,UAAA,CAAW,QAAQ,EAAE,CAAA;AAAA,SAC5D;AAAA,QACA;AAAA,UACE,KAAO,EAAA,OAAA;AAAA,UACP,KAAO,EAAA,OAAA;AAAA,SACT;AAAA,QACA;AAAA,UACE,KAAO,EAAA,cAAA;AAAA,UACP,KAAO,EAAA,eAAA;AAAA,SACT;AAAA,OACF;AAAA,MACA,IACE,EAAA,CAAA,MAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,MAAA,CAAQ,GAAI,CAAA,CAAC,OAAsB,MAAA;AAAA,QACjC,IAAI,OAAQ,CAAA,SAAA;AAAA,QACZ,MAAM,OAAQ,CAAA,IAAA;AAAA,QACd,aAAA,EAAA,CAAe,mCAAS,aAAiB,KAAA,OAAA;AAAA,QACzC,WAAW,OAAQ,CAAA,SAAA;AAAA,QACnB,KAAA,EAAA,CAAO,mCAAS,cAAkB,KAAA,OAAA;AAAA,QAClC,YAAA,EAAA,CAAc,mCAAS,UAAc,KAAA,OAAA;AAAA,cAChC,EAAC;AAAA,MAEV,OAAS,EAAA;AAAA,QACP,QAAU,EAAA,CAAA;AAAA,QACV,iBAAiB,CAAC,CAAA,EAAG,EAAI,EAAA,EAAA,EAAI,IAAI,GAAG,CAAA;AAAA,OACtC;AAAA,KAAA;AAAA,GAEJ,CAAA,CAAA;AAEJ,CAAA,CAAA;AAEO,MAAM,kBAAkB,sBAC7B,KAAA,CAAA,aAAA,CAAC,QAAK,OAAQ,EAAA,SAAA,EAAA,sCACX,MAAO,EAAA,EAAA,KAAA,EAAM,gBAAe,IAAK,EAAA,MAAA,EAAA,EAC/B,MACH,CACA,kBAAA,KAAA,CAAA,aAAA,CAAC,+BACE,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA,EAAc,OAAM,EACnB,EAAA,kBAAA,KAAA,CAAA,aAAA;AAAA,EAAC,MAAA;AAAA,EAAA;AAAA,IACC,SAAW,EAAAH,IAAA;AAAA,IACX,OAAQ,EAAA,WAAA;AAAA,IACR,KAAM,EAAA,SAAA;AAAA,IACN,EAAG,EAAA,KAAA;AAAA,GAAA;AAAA,EACJ,aAAA;AAED,CACA,kBAAA,KAAA,CAAA,aAAA,CAAC,qBAAc,oCAAkC,CACnD,mBACC,KAAA,CAAA,aAAA,CAAA,YAAA,EAAA,IAAa,CAChB,CACF,CAAA;;ACzIK,MAAM,eAAkB,GAAA,sBAC5B,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,IAAA,kBACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAM,IAAK,EAAA,GAAA,EAAI,OAAS,kBAAA,KAAA,CAAA,aAAA,CAAC,eAAgB,EAAA,IAAA,CAAA,EAAI,mBAC7C,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAM,IAAK,EAAA,MAAA,EAAO,OAAS,kBAAA,KAAA,CAAA,aAAA,CAAC,cAAe,EAAA,IAAA,CAAA,EAAI,CAChD,kBAAA,KAAA,CAAA,aAAA,CAAC,KAAM,EAAA,EAAA,IAAA,EAAK,UAAW,EAAA,OAAA,kBAAU,KAAA,CAAA,aAAA,CAAA,kBAAA,EAAA,IAAmB,GAAI,CAC1D;;;;"}