{"version":3,"file":"index-cc6d4405.esm.js","sources":["../../src/components/HeadlampComponent/HeadlampComponent.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Progress } from '@backstage/core-components';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { configApiRef, useApi } from '@backstage/core-plugin-api';\nimport { headlampApiRef } from '../../api/types';\nimport { kubernetesApiRef,kubernetesAuthProvidersApiRef } from '@backstage/plugin-kubernetes-react';\n\n\n/**\n * HeadlampMessage is the type for messages received from headlamp iframe.\n */\ninterface HeadlampMessage {\n  action: string;\n  redirectPath: string;\n}\n\n/**\n * HeadlampComponent is responsible for rendering an iframe that displays\n * the Headlamp UI and handles messages from the iframe.\n */\nexport function HeadlampComponent() {\n  const config = useApi(configApiRef);\n  const headlampApi = useApi(headlampApiRef);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const refreshInterval = 5000;\n  const [isStandalone, setIsStandalone] = useState(true);\n\n  const kubernetesApi = useApi(kubernetesApiRef);\n  const kubernetesAuthProvidersApi = useApi(kubernetesAuthProvidersApiRef);\n\n\n  const fetchAuthTokenMap = async () => {\n    const clusters = await kubernetesApi.getClusters();\n    const clusterNames: string[] = []\n    clusters.forEach(c=>{\n      clusterNames.push(\n        `${c.authProvider}${\n          c.oidcTokenProvider ? `.${c.oidcTokenProvider}` : ''\n        }`)\n    })\n\n    const authTokenMap: {[key: string]: string} = {}\n    for (const clusterName of clusterNames) {\n      const auth = await kubernetesAuthProvidersApi.getCredentials(clusterName);\n      authTokenMap[clusterName] = auth.token;\n    }\n    return authTokenMap;\n  }\n\n  // Check if Headlamp is running standalone or not\n  // if not, start the server\n  useEffect(() => {\n    const checkHealth = async () => {\n      const res = await headlampApi.health();\n      const standalone = res?.status !== 'ok';\n      setIsStandalone(standalone);\n      \n      if (!standalone) {\n        const authTokenMap = await fetchAuthTokenMap();\n\n        console.log('Starting Headlamp server');\n        headlampApi.startServer(authTokenMap);\n      }\n    };\n\n    checkHealth();\n  }, [headlampApi]);\n\n\n  const headlampUrl =\n    config.getOptionalString('headlamp.url') ||\n    `${window.location.protocol}//${window.location.hostname}:4466`;\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  /**\n   * Checks if the Headlamp server is ready by making a fetch request.\n   * Sets the component as loaded if the server responds successfully.\n   */\n  useEffect(() => {\n    const checkHeadlampReady = async () => {\n      try {\n        const response = await fetch(`${headlampUrl}`);\n        if (response.ok) {\n          setIsLoaded(true);\n        } else {\n          throw new Error(`Headlamp not ready: ${response.statusText}`);\n        }\n      } catch (err) {\n        // eslint-disable-next-line no-console\n        console.error('Failed to check Headlamp readiness:', err);\n      }\n    };\n\n    if (!isLoaded) {\n      checkHeadlampReady();\n      const timer = setInterval(checkHeadlampReady, refreshInterval);\n      return () => clearInterval(timer);\n    }\n    return undefined;\n  }, [isLoaded, headlampUrl]);\n\n  /**\n   * Handles messages received from the Headlamp server.\n   * Navigates to a new path if a redirectPath is provided in the message.\n   *\n   * @param {MessageEvent} event - The message event from the Headlamp server.\n   */\n  const handleMessage = useCallback(\n    (event: MessageEvent) => {\n      if (event.origin !== new URL(headlampUrl).origin) return;\n\n      const data: HeadlampMessage = event.data;\n\n      if (data.redirectPath) {\n        navigate(data.redirectPath);\n      }\n    },\n    [headlampUrl, navigate],\n  );\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  // Add periodic refresh of kubeconfig\n  useEffect(() => {\n    if (!isStandalone) {\n      const refreshKubeconfigPeriodically = async () => {\n        const authTokenMap = await fetchAuthTokenMap();\n        console.log('Refreshing kubeconfig');\n        await headlampApi.refreshKubeconfig(authTokenMap);\n      };\n\n      // Initial refresh\n      refreshKubeconfigPeriodically();\n\n      // Set up interval for periodic refresh (every minute)\n      const intervalId = setInterval(refreshKubeconfigPeriodically, 60000);\n\n      // Cleanup interval on component unmount\n      return () => clearInterval(intervalId);\n    }\n    return undefined;\n  }, [isStandalone, headlampApi]);\n\n  if (!isLoaded) {\n    return <Progress />;\n  }\n\n  const queryParams = new URLSearchParams(location.search).toString();\n  const iframeSrc = queryParams ? `${headlampUrl}?${queryParams}` : headlampUrl;\n\n  return (\n    <iframe\n      src={iframeSrc}\n      title=\"Headlamp\"\n      style={{\n        width: '100%',\n        height: '100vh',\n        border: 'none',\n      }}\n    />\n  );\n}\n"],"names":[],"mappings":"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"}