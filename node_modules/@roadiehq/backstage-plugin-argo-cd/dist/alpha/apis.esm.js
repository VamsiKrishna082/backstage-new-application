import { ApiBlueprint, createApiFactory, discoveryApiRef } from '@backstage/frontend-plugin-api';
import { argoCDApiRef, ArgoCDApiClient } from '../api/index.esm.js';
import { identityApiRef, configApiRef } from '@backstage/core-plugin-api';

const argoCDApiExtension = ApiBlueprint.make({
  params: {
    factory: createApiFactory({
      api: argoCDApiRef,
      deps: {
        discoveryApi: discoveryApiRef,
        identityApi: identityApiRef,
        configApi: configApiRef
      },
      factory: ({ discoveryApi, identityApi, configApi }) => new ArgoCDApiClient({
        discoveryApi,
        identityApi,
        backendBaseUrl: configApi.getString("backend.baseUrl"),
        useNamespacedApps: Boolean(
          configApi.getOptionalBoolean("argocd.namespacedApps")
        ),
        searchInstances: Boolean(
          configApi.getOptionalConfigArray("argocd.appLocatorMethods")?.length
        )
      })
    })
  }
});

export { argoCDApiExtension };
//# sourceMappingURL=apis.esm.js.map
