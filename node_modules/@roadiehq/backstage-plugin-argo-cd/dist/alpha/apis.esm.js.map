{"version":3,"file":"apis.esm.js","sources":["../../src/alpha/apis.tsx"],"sourcesContent":["import {\n  ApiBlueprint,\n  createApiFactory,\n  discoveryApiRef,\n} from '@backstage/frontend-plugin-api';\nimport { ArgoCDApiClient, argoCDApiRef } from '../api';\nimport { configApiRef, identityApiRef } from '@backstage/core-plugin-api';\n\n/**\n * @alpha\n */\nexport const argoCDApiExtension = ApiBlueprint.make({\n  params: {\n    factory: createApiFactory({\n      api: argoCDApiRef,\n      deps: {\n        discoveryApi: discoveryApiRef,\n        identityApi: identityApiRef,\n        configApi: configApiRef,\n      },\n      factory: ({ discoveryApi, identityApi, configApi }) =>\n        new ArgoCDApiClient({\n          discoveryApi,\n          identityApi,\n          backendBaseUrl: configApi.getString('backend.baseUrl'),\n          useNamespacedApps: Boolean(\n            configApi.getOptionalBoolean('argocd.namespacedApps'),\n          ),\n          searchInstances: Boolean(\n            configApi.getOptionalConfigArray('argocd.appLocatorMethods')\n              ?.length,\n          ),\n        }),\n    }),\n  },\n});\n"],"names":[],"mappings":";;;;AAWa,MAAA,kBAAA,GAAqB,aAAa,IAAK,CAAA;AAAA,EAClD,MAAQ,EAAA;AAAA,IACN,SAAS,gBAAiB,CAAA;AAAA,MACxB,GAAK,EAAA,YAAA;AAAA,MACL,IAAM,EAAA;AAAA,QACJ,YAAc,EAAA,eAAA;AAAA,QACd,WAAa,EAAA,cAAA;AAAA,QACb,SAAW,EAAA;AAAA,OACb;AAAA,MACA,OAAA,EAAS,CAAC,EAAE,YAAA,EAAc,aAAa,SAAU,EAAA,KAC/C,IAAI,eAAgB,CAAA;AAAA,QAClB,YAAA;AAAA,QACA,WAAA;AAAA,QACA,cAAA,EAAgB,SAAU,CAAA,SAAA,CAAU,iBAAiB,CAAA;AAAA,QACrD,iBAAmB,EAAA,OAAA;AAAA,UACjB,SAAA,CAAU,mBAAmB,uBAAuB;AAAA,SACtD;AAAA,QACA,eAAiB,EAAA,OAAA;AAAA,UACf,SAAA,CAAU,sBAAuB,CAAA,0BAA0B,CACvD,EAAA;AAAA;AACN,OACD;AAAA,KACJ;AAAA;AAEL,CAAC;;;;"}