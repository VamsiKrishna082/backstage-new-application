{"version":3,"file":"ArgoCDHistoryCard.esm.js","sources":["../../src/components/ArgoCDHistoryCard.tsx"],"sourcesContent":["/*\n * Copyright 2021 Larder Software Limited\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { ErrorBoundary, InfoCard } from '@backstage/core-components';\nimport { configApiRef, useApi } from '@backstage/core-plugin-api';\nimport {\n  MissingAnnotationEmptyState,\n  useEntity,\n} from '@backstage/plugin-catalog-react';\nimport { LinearProgress } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { isArgocdAvailable } from '../conditions';\nimport {\n  ArgoCDAppDetails,\n  ArgoCDAppHistoryDetails,\n  ArgoCDAppList,\n} from '../types';\nimport { useAppDetails } from './useAppDetails';\nimport {\n  ARGOCD_ANNOTATION_APP_NAME,\n  useArgoCDAppData,\n} from './useArgoCDAppData';\nimport { ArgoCDApi, argoCDApiRef } from '../api';\nimport {\n  ArgoCDHistoryTable,\n  ArgoCDHistoryTableRow,\n} from './ArgoCDHistoryTable';\n\nconst isHelmChart = (row: any): boolean => {\n  return row.source?.chart !== undefined;\n};\n\nconst getRevisionId = (row: any): string => {\n  if (row.revision.hasOwnProperty('revisionID')) {\n    return row.revision.revisionID;\n  }\n  return row.revision;\n};\n\nconst withRevisionDetails = async (\n  api: ArgoCDApi,\n  url: string,\n  row: any,\n): Promise<ArgoCDHistoryTableRow> => {\n  if (isHelmChart(row)) {\n    row.revisionDetails = { author: 'n/a', message: 'n/a', date: 'n/a' };\n    return row;\n  }\n\n  row.revisionDetails = await api.getRevisionDetails({\n    url: url,\n    app: row.app,\n    appNamespace: row.appNamespace,\n    revisionID: getRevisionId(row),\n    instanceName: row.instance,\n  });\n  return row;\n};\n\nconst ArgoCDHistory = ({ entity }: { entity: Entity }) => {\n  const [tableRows, setTableRows] = useState<ArgoCDHistoryTableRow[]>([]);\n\n  const argoCDApi = useApi(argoCDApiRef);\n  const { url, appName, appSelector, appNamespace, projectName } =\n    useArgoCDAppData({ entity });\n  const { loading, value, error, retry } = useAppDetails({\n    url,\n    appName,\n    appSelector,\n    appNamespace,\n    projectName,\n  });\n\n  const revisionsToLoad =\n    useApi(configApiRef).getOptionalNumber('argocd.revisionsToLoad') || -1;\n\n  useEffect(() => {\n    if (!value) {\n      return;\n    }\n    let apps: ArgoCDAppDetails[];\n    if ((value as ArgoCDAppList).items !== undefined) {\n      apps = (value as ArgoCDAppList).items ?? [];\n    } else if (Array.isArray(value)) {\n      apps = value as Array<ArgoCDAppDetails>;\n    } else {\n      apps = [value as ArgoCDAppDetails];\n    }\n\n    const revisions: ArgoCDHistoryTableRow[] = apps\n      .filter(app => app?.status?.history)\n      .flatMap(app => {\n        // @ts-ignore TS2532: The filter statement above prevents this from being undefined\n        return app.status.history\n          .sort(\n            (a, b) =>\n              new Date(b.deployedAt || '').valueOf() -\n              new Date(a.deployedAt || '').valueOf(),\n          )\n          .slice(0, revisionsToLoad)\n          .map((entry: ArgoCDAppHistoryDetails) => ({\n            key: `${app.metadata.name}-${entry.revision}`,\n            app: app.metadata.name,\n            appNamespace: app.metadata.namespace,\n            instance: app.metadata?.instance?.name,\n            ...entry,\n          }));\n      });\n\n    setTableRows(revisions);\n\n    // Update all items at once because otherwise it could lead to the too many re-renders error\n    Promise.all(\n      revisions.map(\n        async row => await withRevisionDetails(argoCDApi, url, row),\n      ),\n    ).then(rowsWithRevisions => {\n      setTableRows(rowsWithRevisions.filter(row => row));\n    });\n  }, [value, argoCDApi, url, revisionsToLoad]);\n\n  if (loading) {\n    return (\n      <InfoCard title=\"ArgoCD history\">\n        <LinearProgress />\n      </InfoCard>\n    );\n  }\n  if (error) {\n    return (\n      <InfoCard title=\"ArgoCD history\">\n        Error occurred while fetching data. {error.message}\n      </InfoCard>\n    );\n  }\n\n  if (tableRows.length) {\n    return <ArgoCDHistoryTable data={tableRows} retry={retry} />;\n  }\n\n  return null;\n};\nexport const ArgoCDHistoryCard = () => {\n  const { entity } = useEntity();\n  return !isArgocdAvailable(entity) ? (\n    <MissingAnnotationEmptyState annotation={ARGOCD_ANNOTATION_APP_NAME} />\n  ) : (\n    <ErrorBoundary>\n      <ArgoCDHistory entity={entity} />\n    </ErrorBoundary>\n  );\n};\n"],"names":[],"mappings":"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"}