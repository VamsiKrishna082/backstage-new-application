{"version":3,"file":"ArgoCDHistoryTable.esm.js","sources":["../../src/components/ArgoCDHistoryTable.tsx"],"sourcesContent":["/*\n * Copyright 2021 Larder Software Limited\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Table, TableColumn } from '@backstage/core-components';\nimport { configApiRef, useApi } from '@backstage/core-plugin-api';\nimport { Link, List, ListItem } from '@material-ui/core';\nimport React from 'react';\nimport SyncIcon from '@material-ui/icons/Sync';\nimport { DateTime } from 'luxon';\nimport {\n  ArgoCDAppDeployRevisionDetails,\n  ArgoCDAppHistoryDetails,\n} from '../types';\n\nexport type ArgoCDHistoryTableRow = ArgoCDAppHistoryDetails & {\n  app: string;\n  appNamespace: string;\n  instance?: string;\n  frontendUrl?: string;\n  revisionDetails?: ArgoCDAppDeployRevisionDetails;\n};\n\nexport const ArgoCDHistoryTable = ({\n  data,\n  retry,\n}: {\n  data: ArgoCDHistoryTableRow[];\n  retry: () => void;\n}) => {\n  const configApi = useApi(configApiRef);\n  const namespaced =\n    configApi.getOptionalBoolean('argocd.namespacedApps') ?? false;\n  const baseUrl = configApi.getOptionalString('argocd.baseUrl');\n  const supportsMultipleArgoInstances: boolean = Boolean(\n    configApi.getOptionalConfigArray('argocd.appLocatorMethods')?.length,\n  );\n\n  const linkUrl = (row: any): string | undefined => {\n    if (supportsMultipleArgoInstances && !baseUrl) {\n      const instanceConfig = configApi\n        .getConfigArray('argocd.appLocatorMethods')\n        .find(value => value.getOptionalString('type') === 'config')\n        ?.getOptionalConfigArray('instances')\n        ?.find(value => value.getOptionalString('name') === row?.instance);\n      return (\n        instanceConfig?.getOptionalString('frontendUrl') ??\n        instanceConfig?.getOptionalString('url')\n      );\n    }\n    return baseUrl;\n  };\n\n  const columns: TableColumn[] = [\n    {\n      title: 'Name',\n      field: 'name',\n      render: (row: any): React.ReactNode =>\n        linkUrl ? (\n          <Link\n            href={`${linkUrl(row)}/applications/${\n              namespaced ? `${row.appNamespace}/${row.app}` : row.app\n            }`}\n            target=\"_blank\"\n            rel=\"noopener\"\n          >\n            {row.app}\n          </Link>\n        ) : (\n          row.app\n        ),\n    },\n    {\n      title: 'Deploy Details',\n      defaultSort: 'desc',\n      field: 'deployedAt',\n      render: (row: any): React.ReactNode => (\n        <List dense style={{ padding: '0px' }}>\n          <ListItem style={{ paddingLeft: '0px' }}>\n            {row.deployedAt\n              ? `Deployed at ${DateTime.fromISO(row.deployedAt)\n                  .toLocal()\n                  .toFormat('dd MMM yyyy, HH:mm:ss')}`\n              : null}\n          </ListItem>\n          <ListItem style={{ paddingLeft: '0px' }}>\n            {row.deployStartedAt\n              ? `Run ${DateTime.fromISO(row.deployStartedAt)\n                  .toLocal()\n                  .toRelative()}`\n              : null}\n          </ListItem>\n          <ListItem style={{ paddingLeft: '0px' }}>\n            {row.deployedAt && row.deployStartedAt\n              ? `Took ${DateTime.fromISO(row.deployStartedAt)\n                  .diff(DateTime.fromISO(row.deployedAt))\n                  .toFormat('hh:mm:ss')}`\n              : null}\n          </ListItem>\n        </List>\n      ),\n    },\n    {\n      title: 'Author',\n      field: 'revisionDetails.author',\n      render: (row: any): React.ReactNode => (\n        <div>{row.revisionDetails?.author || 'Loading...'}</div>\n      ),\n    },\n    {\n      title: 'Message',\n      field: 'revisionDetails.message',\n      render: (row: any): React.ReactNode => (\n        <div>{row.revisionDetails?.message || 'Loading...'}</div>\n      ),\n    },\n    {\n      title: 'Revision',\n      field: 'revision',\n      render: (row: any): React.ReactNode => <div>{row.revision}</div>,\n    },\n  ];\n\n  if (supportsMultipleArgoInstances) {\n    columns.splice(1, 0, {\n      title: 'Instance',\n      field: 'instance',\n      render: (row: any): React.ReactNode =>\n        row.metadata?.instance?.name\n          ? row.metadata?.instance?.name\n          : row.instance,\n    });\n  }\n\n  return (\n    <Table\n      title=\"ArgoCD history\"\n      options={{\n        paging: true,\n        search: false,\n        draggable: false,\n        padding: 'dense',\n      }}\n      data={data}\n      columns={columns}\n      actions={[\n        {\n          icon: () => <SyncIcon />,\n          tooltip: 'Refresh',\n          isFreeAction: true,\n          onClick: () => retry(),\n        },\n      ]}\n    />\n  );\n};\n"],"names":[],"mappings":"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"}