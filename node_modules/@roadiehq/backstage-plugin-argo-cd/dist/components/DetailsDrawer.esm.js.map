{"version":3,"file":"DetailsDrawer.esm.js","sources":["../../src/components/DetailsDrawer.tsx"],"sourcesContent":["import {\n  Button,\n  Drawer,\n  Grid,\n  IconButton,\n  makeStyles,\n  Typography,\n} from '@material-ui/core';\nimport React from 'react';\nimport { StructuredMetadataTable } from '@backstage/core-components';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport CloseIcon from '@material-ui/icons/Close';\nimport MaterialButton from '@material-ui/core/Button';\nimport { configApiRef, useApi } from '@backstage/core-plugin-api';\n\ninterface TableContent {\n  [key: string]: any;\n}\n\nconst useStyles = makeStyles({\n  paper: {\n    padding: '2em',\n  },\n  header: {\n    display: 'flex',\n    flexDirection: 'row',\n    paddingBottom: '2em',\n  },\n  button: {\n    textTransform: 'none',\n    justifyContent: 'flex-start',\n    fontWeight: 'bold',\n  },\n  icon: {\n    fontSize: 20,\n  },\n  content: {\n    height: '80%',\n  },\n});\nexport const DetailsDrawerComponent = (\n  rowData: any,\n  baseUrl: string | undefined,\n) => {\n  const classes = useStyles();\n  const [state, setState] = React.useState(false);\n  const configApi = useApi(configApiRef);\n  const namespaced =\n    configApi.getOptionalBoolean('argocd.namespacedApps') ?? false;\n\n  const toggleDrawer =\n    (open: boolean) => (event: React.KeyboardEvent | React.MouseEvent) => {\n      if (\n        event.type === 'keydown' &&\n        ((event as React.KeyboardEvent).key === 'Tab' ||\n          (event as React.KeyboardEvent).key === 'Shift')\n      ) {\n        return;\n      }\n\n      setState(open);\n    };\n  const tableContent: TableContent = {\n    'Argo CD Instance': rowData.metadata?.instance?.name ?? '',\n    repoUrl: rowData.spec?.source?.repoURL,\n    repoPath: rowData.spec?.source?.path,\n    destinationServer: rowData.spec?.destination?.server,\n    destinationNamespace: rowData.spec?.destination?.namespace,\n    syncStatus: rowData.status?.sync?.status,\n    images: rowData.status?.summary?.images,\n    ...(baseUrl && {\n      link: (\n        <MaterialButton\n          variant=\"outlined\"\n          color=\"primary\"\n          size=\"small\"\n          title=\"Open Argo CD Dashboard\"\n          endIcon={<OpenInNewIcon />}\n          target=\"_blank\"\n          href={`${baseUrl}/applications/${\n            namespaced\n              ? `${rowData.metadata.namespace}/${rowData.metadata.name}`\n              : rowData.metadata.name\n          }`}\n        >\n          Open Argo CD Dashboard\n        </MaterialButton>\n      ),\n    }),\n  };\n\n  const drawerContents = () => (\n    <>\n      <div className={classes.header}>\n        <Grid\n          container\n          direction=\"column\"\n          justifyContent=\"flex-start\"\n          alignItems=\"flex-start\"\n        >\n          <Grid item>\n            <Typography variant=\"h5\">\n              Argo Name: {rowData.metadata.name}\n            </Typography>\n          </Grid>\n        </Grid>\n        <IconButton\n          key=\"dismiss\"\n          title=\"Close the drawer\"\n          onClick={() => setState(false)}\n          color=\"inherit\"\n        >\n          <CloseIcon />\n        </IconButton>\n      </div>\n      <div className={classes.content}>\n        <StructuredMetadataTable metadata={tableContent} />\n      </div>\n    </>\n  );\n  return (\n    <React.Fragment>\n      <Button\n        title={rowData.metadata.name}\n        className={classes.button}\n        onClick={toggleDrawer(true)}\n      >\n        {rowData.metadata.name}\n      </Button>\n      <Drawer\n        anchor=\"right\"\n        classes={{ paper: classes.paper }}\n        open={state}\n        onClose={toggleDrawer(false)}\n      >\n        {drawerContents()}\n      </Drawer>\n    </React.Fragment>\n  );\n};\n"],"names":[],"mappings":"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"}