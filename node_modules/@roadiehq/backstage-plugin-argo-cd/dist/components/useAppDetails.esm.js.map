{"version":3,"file":"useAppDetails.esm.js","sources":["../../src/components/useAppDetails.ts"],"sourcesContent":["/*\n * Copyright 2021 Larder Software Limited\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { configApiRef, errorApiRef, useApi } from '@backstage/core-plugin-api';\nimport { useAsyncRetry } from 'react-use';\nimport { argoCDApiRef } from '../api';\n\nexport const useAppDetails = ({\n  appName,\n  appSelector,\n  appNamespace,\n  projectName,\n  url,\n}: {\n  appName?: string;\n  appSelector?: string;\n  appNamespace?: string;\n  projectName?: string;\n  url: string;\n}) => {\n  const api = useApi(argoCDApiRef);\n  const errorApi = useApi(errorApiRef);\n  const configApi = useApi(configApiRef);\n\n  const { loading, value, error, retry } = useAsyncRetry(async () => {\n    const argoSearchMethod: boolean = Boolean(\n      configApi.getOptionalConfigArray('argocd.appLocatorMethods')?.length,\n    );\n    try {\n      if (!argoSearchMethod && appName) {\n        return api.getAppDetails({ url, appName, appNamespace });\n      }\n      if (argoSearchMethod && appName) {\n        const kubeInfo = await api.serviceLocatorUrl({\n          appName: appName as string,\n          appNamespace: appNamespace,\n        });\n        if (kubeInfo instanceof Error) return kubeInfo;\n        const promises = kubeInfo.map(async (instance: any) => {\n          const apiOut = await api.getAppDetails({\n            url,\n            appName,\n            appNamespace,\n            instance: instance.name,\n          });\n          if (!apiOut.metadata) {\n            return {\n              status: {\n                history: [],\n                sync: { status: 'Missing' },\n                health: { status: 'Missing' },\n                operationState: {},\n              },\n              metadata: { name: appName, instance: instance.name },\n            };\n          }\n          apiOut.metadata.instance = instance;\n          return apiOut;\n        });\n        return Promise.all(promises);\n      }\n      if (argoSearchMethod && appSelector) {\n        const kubeInfo = await api.serviceLocatorUrl({\n          appSelector: appSelector as string,\n          appNamespace,\n        });\n        if (kubeInfo instanceof Error) return kubeInfo;\n        const promises = kubeInfo.map(async (instance: any) => {\n          return api.getAppListDetails({\n            url,\n            appSelector,\n            appNamespace,\n            instance: instance.name,\n          });\n        });\n        const output = await Promise.all(promises);\n        return {\n          items: output\n            .flatMap(argoCdAppList => argoCdAppList.items)\n            .filter(item => item !== null),\n        };\n      }\n      if (appSelector || projectName) {\n        return api.listApps({\n          url,\n          appSelector,\n          appNamespace,\n          projectName,\n        });\n      }\n      return Promise.reject('Neither appName nor appSelector provided');\n    } catch (e: any) {\n      errorApi.post(new Error('Something went wrong'));\n      return Promise.reject(e);\n    }\n  });\n  return {\n    loading,\n    value,\n    error,\n    retry,\n  };\n};\n"],"names":[],"mappings":"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"}