{"version":3,"file":"static/7727.03df1352.chunk.js","mappings":"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","sources":["webpack://app/../../node_modules/@headlamp-k8s/backstage-plugin-headlamp/node_modules/@backstage/core-components/dist/components/Progress/Progress.esm.js","webpack://app/../../node_modules/@headlamp-k8s/backstage-plugin-headlamp/dist/esm/index-cc6d4405.esm.js"],"sourcesContent":["import Box from '@material-ui/core/Box';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { useTheme } from '@material-ui/core/styles';\nimport React__default, { useState, useEffect } from 'react';\n\nfunction Progress(props) {\n  const theme = useTheme();\n  const [isVisible, setIsVisible] = useState(false);\n  useEffect(() => {\n    const handle = setTimeout(\n      () => setIsVisible(true),\n      theme.transitions.duration.short\n    );\n    return () => clearTimeout(handle);\n  }, [theme.transitions.duration.short]);\n  return isVisible ? /* @__PURE__ */ React__default.createElement(LinearProgress, { ...props, \"data-testid\": \"progress\" }) : /* @__PURE__ */ React__default.createElement(Box, { display: \"none\" });\n}\n\nexport { Progress };\n//# sourceMappingURL=Progress.esm.js.map\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Progress } from '@backstage/core-components';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useApi, configApiRef } from '@backstage/core-plugin-api';\nimport { h as headlampApiRef } from './index-668854a6.esm.js';\nimport { kubernetesApiRef, kubernetesAuthProvidersApiRef } from '@backstage/plugin-kubernetes-react';\n\nfunction HeadlampComponent() {\n  const config = useApi(configApiRef);\n  const headlampApi = useApi(headlampApiRef);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const refreshInterval = 5e3;\n  const [isStandalone, setIsStandalone] = useState(true);\n  const kubernetesApi = useApi(kubernetesApiRef);\n  const kubernetesAuthProvidersApi = useApi(kubernetesAuthProvidersApiRef);\n  const fetchAuthTokenMap = async () => {\n    const clusters = await kubernetesApi.getClusters();\n    const clusterNames = [];\n    clusters.forEach((c) => {\n      clusterNames.push(\n        `${c.authProvider}${c.oidcTokenProvider ? `.${c.oidcTokenProvider}` : \"\"}`\n      );\n    });\n    const authTokenMap = {};\n    for (const clusterName of clusterNames) {\n      const auth = await kubernetesAuthProvidersApi.getCredentials(clusterName);\n      authTokenMap[clusterName] = auth.token;\n    }\n    return authTokenMap;\n  };\n  useEffect(() => {\n    const checkHealth = async () => {\n      const res = await headlampApi.health();\n      const standalone = (res == null ? void 0 : res.status) !== \"ok\";\n      setIsStandalone(standalone);\n      if (!standalone) {\n        const authTokenMap = await fetchAuthTokenMap();\n        console.log(\"Starting Headlamp server\");\n        headlampApi.startServer(authTokenMap);\n      }\n    };\n    checkHealth();\n  }, [headlampApi]);\n  const headlampUrl = config.getOptionalString(\"headlamp.url\") || `${window.location.protocol}//${window.location.hostname}:4466`;\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    const checkHeadlampReady = async () => {\n      try {\n        const response = await fetch(`${headlampUrl}`);\n        if (response.ok) {\n          setIsLoaded(true);\n        } else {\n          throw new Error(`Headlamp not ready: ${response.statusText}`);\n        }\n      } catch (err) {\n        console.error(\"Failed to check Headlamp readiness:\", err);\n      }\n    };\n    if (!isLoaded) {\n      checkHeadlampReady();\n      const timer = setInterval(checkHeadlampReady, refreshInterval);\n      return () => clearInterval(timer);\n    }\n    return void 0;\n  }, [isLoaded, headlampUrl]);\n  const handleMessage = useCallback(\n    (event) => {\n      if (event.origin !== new URL(headlampUrl).origin)\n        return;\n      const data = event.data;\n      if (data.redirectPath) {\n        navigate(data.redirectPath);\n      }\n    },\n    [headlampUrl, navigate]\n  );\n  useEffect(() => {\n    window.addEventListener(\"message\", handleMessage);\n    return () => window.removeEventListener(\"message\", handleMessage);\n  }, [handleMessage]);\n  useEffect(() => {\n    if (!isStandalone) {\n      const refreshKubeconfigPeriodically = async () => {\n        const authTokenMap = await fetchAuthTokenMap();\n        console.log(\"Refreshing kubeconfig\");\n        await headlampApi.refreshKubeconfig(authTokenMap);\n      };\n      refreshKubeconfigPeriodically();\n      const intervalId = setInterval(refreshKubeconfigPeriodically, 6e4);\n      return () => clearInterval(intervalId);\n    }\n    return void 0;\n  }, [isStandalone, headlampApi]);\n  if (!isLoaded) {\n    return /* @__PURE__ */ React.createElement(Progress, null);\n  }\n  const queryParams = new URLSearchParams(location.search).toString();\n  const iframeSrc = queryParams ? `${headlampUrl}?${queryParams}` : headlampUrl;\n  return /* @__PURE__ */ React.createElement(\n    \"iframe\",\n    {\n      src: iframeSrc,\n      title: \"Headlamp\",\n      style: {\n        width: \"100%\",\n        height: \"100vh\",\n        border: \"none\"\n      }\n    }\n  );\n}\n\nexport { HeadlampComponent };\n//# sourceMappingURL=index-cc6d4405.esm.js.map\n"],"names":["Progress","props","theme","useTheme","isVisible","setIsVisible","handle","LinearProgress","Box","HeadlampComponent","config","headlampApi","isLoaded","setIsLoaded","refreshInterval","isStandalone","setIsStandalone","kubernetesApi","kubernetesAuthProvidersApi","fetchAuthTokenMap","clusters","clusterNames","c","authTokenMap","clusterName","auth","res","standalone","headlampUrl","navigate","location","checkHeadlampReady","response","err","timer","handleMessage","event","data","refreshKubeconfigPeriodically","intervalId","queryParams","iframeSrc"],"sourceRoot":""}