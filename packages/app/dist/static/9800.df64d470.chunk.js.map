{"version":3,"file":"static/9800.df64d470.chunk.js","mappings":"uZAgBA,MAAMA,KAAYC,EAAA,GAAW,CAC3B,iBAAkB,CAChB,SAAU,UACV,cAAe,QACjB,CACF,CAAC,EACKC,EAAiBC,GAAU,CAC/B,KAAM,CAAE,MAAAC,EAAO,QAAAC,EAAS,QAAAC,EAAS,OAAAC,CAAO,EAAIJ,EACtCK,EAAUR,EAAU,EAC1B,OAAII,KAA8B,QAAKK,EAAA,EAAY,CAAE,SAAU,CAC7D,yBACAF,EACA,MACF,CAAE,CAAC,EACCF,KAAgC,OAAIK,EAAA,EAAgB,CAAC,CAAC,KACnC,OACrB,IACA,CACE,SAAU,CACR,UAAwB,OAAIC,EAAA,EAAK,CAAE,QAAS,OAAQ,YAA0B,OAC5E,KACA,CACE,OAAQL,EAAQ,OAChB,WAAYA,EAAQ,UACtB,CACF,CAAE,CAAC,EACH,QAASA,EAAQ,QACjB,OAAqB,QAAK,KAAM,CAAE,GAAIA,EAAQ,WAAa,GAAI,SAAU,CACvE,qBACA,OACgB,OAAI,IAAkB,CAAE,UAAWE,EAAQ,gBAAiB,CAAC,CAC/E,CAAE,CAAC,CACL,CACF,CACF,CACF,EACMI,EAAyBT,GAAU,CACvC,KAAM,CAAE,OAAAI,EAAS,SAAU,QAAAM,CAAQ,EAAIV,EACjC,CAAE,OAAAW,CAAO,KAAI,MAAU,EACvBC,KAAW,MAAO,GAAW,EAC7BC,KAAW,KAAsBF,CAAM,EACvC,CAACG,EAAOC,CAAI,GAAKJ,GAAQ,SAAS,cAAc,GAAyB,GAAK,KAAK,MAAM,GAAG,EAC5F,CAAC,CAAE,KAAAK,EAAM,QAAAd,EAAS,MAAAD,CAAM,CAAC,KAAI,KAAgB,CACjD,SAAAY,EACA,MAAAC,EACA,KAAAC,EACA,OAAAX,CACF,CAAC,EACKD,EAAUa,IAAO,CAAC,GAAK,CAAC,EAC9B,sBAAU,IAAM,CACVf,GACFW,EAAS,KAAKX,CAAK,CAEvB,EAAG,CAACA,EAAOW,CAAQ,CAAC,KACG,OAAI,IAAU,CAAE,MAAO,QAAQR,CAAM,SAAU,QAAAM,EAAS,YAA0B,OACvGX,EACA,CACE,MAAAE,EACA,QAAAC,EACA,OAAAE,EACA,QAAAD,CACF,CACF,CAAE,CAAC,CACL,EACMc,EAAgCjB,GAAU,CAC9C,KAAM,CAAE,OAAAI,EAAS,SAAU,QAAAM,CAAQ,EAAIV,EACjC,CAAE,OAAAW,CAAO,KAAI,MAAU,EAC7B,SAAuB,OAAI,IAAU,CAAE,MAAO,QAAQP,CAAM,SAAU,QAAAM,EAAS,YAA0B,OAAI,IAAmB,CAAE,OAAAN,EAAQ,OAAAO,CAAO,CAAC,CAAE,CAAC,CACvJ,E,2DCtEA,MAAMO,EAAaC,GAAYA,EAAQ,MAAM;AAAA,CAAI,EAAE,CAAC,EAC9CC,EAA0BpB,GAAU,CACxC,KAAM,CAAE,OAAAI,EAAQ,MAAAiB,EAAQ,GAAO,MAAAC,EAAQ,EAAG,QAAAZ,CAAQ,EAAIV,EAChD,CAAE,OAAAW,CAAO,KAAI,MAAU,EACvBC,KAAW,MAAO,GAAW,EAC7BC,KAAW,KAAsBF,CAAM,EACvC,CAACG,EAAOC,CAAI,GAAKJ,GAAQ,SAAS,cAAc,GAAyB,GAAK,KAAK,MAAM,GAAG,EAC5F,CAAC,CAAE,KAAAK,EAAO,CAAC,EAAG,QAAAd,EAAS,MAAAD,CAAM,CAAC,KAAI,KAAgB,CACtD,SAAAY,EACA,MAAAC,EACA,KAAAC,EACA,OAAAX,EACA,gBAAiBkB,CACnB,CAAC,KACD,aAAU,IAAM,CACVrB,GACFW,EAAS,KAAKX,CAAK,CAEvB,EAAG,CAACA,EAAOW,CAAQ,CAAC,EACpB,MAAMW,EAAaV,GAAY,aACzBW,KAAY,KAAY,GAAa,EAC3C,OAAIvB,KACqB,OAAI,IAAY,CAAE,MAAOA,EAAM,QAAS,MAAAA,CAAM,CAAC,KAEjD,OACrB,IACA,CACE,MAAO,uBACP,UAAWG,EAAS,WAAWA,CAAM,GAAK,eAC1C,UAAW,GACX,QAAAM,EACA,SAAWM,EAAK,UAGO,OACrB,IACA,CACE,UAAWd,EACX,QAAS,CACP,OAAQ,GACR,OAAQ,GACR,QAASmB,EAAQ,QAAU,UAC3B,QAAS,EACX,EACA,QAAS,CACP,CACE,MAAO,iBACP,MAAO,UACP,OAASI,MAAyB,OAAI,KAAM,CAAE,UAAW,KAAQ,GAAID,EAAU,CAAE,GAAIC,EAAK,EAAG,CAAC,EAAG,SAAUP,EAAUO,EAAK,SAAW,EAAE,CAAE,CAAC,CAC5I,EACA,CAAE,MAAO,SAAU,MAAO,mBAAoB,EAC9C,CACE,MAAO,SACP,MAAO,SACP,OAASC,MAAsB,OAAIlB,EAAA,EAAK,CAAE,QAAS,OAAQ,YAA0B,OAAI,KAAmB,CAAE,GAAGkB,CAAE,CAAC,CAAE,CAAC,CACzH,CACF,EACA,KAAMV,CACR,CACF,KA5ByC,QAAK,MAAO,CAAE,MAAO,CAAE,UAAW,QAAS,EAAG,SAAU,IAC/E,OAAIV,EAAA,EAAY,CAAE,QAAS,QAAS,SAAU,yEAA0E,CAAC,KACzH,OAAIA,EAAA,EAAY,CAAE,QAAS,QAAS,YAA0B,OAAI,KAAM,CAAE,GAAI,WAAWiB,CAAU,IAAIT,CAAK,IAAIC,CAAI,eAAgB,SAAU,uBAAwB,CAAC,CAAE,CAAC,CAC5L,CAAE,CAAC,CA0BL,CACF,CACF,C","sources":["webpack://app/../../node_modules/@backstage-community/plugin-github-actions/dist/components/Cards/Cards.esm.js","webpack://app/../../node_modules/@backstage-community/plugin-github-actions/dist/components/Cards/RecentWorkflowRunsCard.esm.js"],"sourcesContent":["import { jsx, jsxs } from 'react/jsx-runtime';\nimport { useEntity } from '@backstage/plugin-catalog-react';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExternalLinkIcon from '@material-ui/icons/Launch';\nimport { useEffect } from 'react';\nimport { GITHUB_ACTIONS_ANNOTATION } from '../getProjectNameFromEntity.esm.js';\nimport { useWorkflowRuns } from '../useWorkflowRuns.esm.js';\nimport { WorkflowRunsTable } from '../WorkflowRunsTable/WorkflowRunsTable.esm.js';\nimport { WorkflowRunStatus } from '../WorkflowRunStatus/WorkflowRunStatus.esm.js';\nimport { useApi, errorApiRef } from '@backstage/core-plugin-api';\nimport { InfoCard, StructuredMetadataTable, Link } from '@backstage/core-components';\nimport { getHostnameFromEntity } from '../getHostnameFromEntity.esm.js';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles({\n  externalLinkIcon: {\n    fontSize: \"inherit\",\n    verticalAlign: \"bottom\"\n  }\n});\nconst WidgetContent = (props) => {\n  const { error, loading, lastRun, branch } = props;\n  const classes = useStyles();\n  if (error) return /* @__PURE__ */ jsxs(Typography, { children: [\n    \"Couldn't fetch latest \",\n    branch,\n    \" run\"\n  ] });\n  if (loading) return /* @__PURE__ */ jsx(LinearProgress, {});\n  return /* @__PURE__ */ jsx(\n    StructuredMetadataTable,\n    {\n      metadata: {\n        status: /* @__PURE__ */ jsx(Box, { display: \"flex\", children: /* @__PURE__ */ jsx(\n          WorkflowRunStatus,\n          {\n            status: lastRun.status,\n            conclusion: lastRun.conclusion\n          }\n        ) }),\n        message: lastRun.message,\n        url: /* @__PURE__ */ jsxs(Link, { to: lastRun.githubUrl ?? \"\", children: [\n          \"See more on GitHub\",\n          \" \",\n          /* @__PURE__ */ jsx(ExternalLinkIcon, { className: classes.externalLinkIcon })\n        ] })\n      }\n    }\n  );\n};\nconst LatestWorkflowRunCard = (props) => {\n  const { branch = \"master\", variant } = props;\n  const { entity } = useEntity();\n  const errorApi = useApi(errorApiRef);\n  const hostname = getHostnameFromEntity(entity);\n  const [owner, repo] = (entity?.metadata.annotations?.[GITHUB_ACTIONS_ANNOTATION] ?? \"/\").split(\"/\");\n  const [{ runs, loading, error }] = useWorkflowRuns({\n    hostname,\n    owner,\n    repo,\n    branch\n  });\n  const lastRun = runs?.[0] ?? {};\n  useEffect(() => {\n    if (error) {\n      errorApi.post(error);\n    }\n  }, [error, errorApi]);\n  return /* @__PURE__ */ jsx(InfoCard, { title: `Last ${branch} build`, variant, children: /* @__PURE__ */ jsx(\n    WidgetContent,\n    {\n      error,\n      loading,\n      branch,\n      lastRun\n    }\n  ) });\n};\nconst LatestWorkflowsForBranchCard = (props) => {\n  const { branch = \"master\", variant } = props;\n  const { entity } = useEntity();\n  return /* @__PURE__ */ jsx(InfoCard, { title: `Last ${branch} build`, variant, children: /* @__PURE__ */ jsx(WorkflowRunsTable, { branch, entity }) });\n};\n\nexport { LatestWorkflowRunCard, LatestWorkflowsForBranchCard };\n//# sourceMappingURL=Cards.esm.js.map\n","import { jsx, jsxs } from 'react/jsx-runtime';\nimport { useEntity } from '@backstage/plugin-catalog-react';\nimport { useEffect } from 'react';\nimport { Link as Link$1 } from 'react-router-dom';\nimport { GITHUB_ACTIONS_ANNOTATION } from '../getProjectNameFromEntity.esm.js';\nimport { useWorkflowRuns } from '../useWorkflowRuns.esm.js';\nimport { WorkflowRunStatus } from '../WorkflowRunStatus/WorkflowRunStatus.esm.js';\nimport Typography from '@material-ui/core/Typography';\nimport { useApi, errorApiRef, useRouteRef } from '@backstage/core-plugin-api';\nimport { ErrorPanel, InfoCard, Link, Table } from '@backstage/core-components';\nimport { buildRouteRef } from '../../routes.esm.js';\nimport { getHostnameFromEntity } from '../getHostnameFromEntity.esm.js';\nimport Box from '@material-ui/core/Box';\n\nconst firstLine = (message) => message.split(\"\\n\")[0];\nconst RecentWorkflowRunsCard = (props) => {\n  const { branch, dense = false, limit = 5, variant } = props;\n  const { entity } = useEntity();\n  const errorApi = useApi(errorApiRef);\n  const hostname = getHostnameFromEntity(entity);\n  const [owner, repo] = (entity?.metadata.annotations?.[GITHUB_ACTIONS_ANNOTATION] ?? \"/\").split(\"/\");\n  const [{ runs = [], loading, error }] = useWorkflowRuns({\n    hostname,\n    owner,\n    repo,\n    branch,\n    initialPageSize: limit\n  });\n  useEffect(() => {\n    if (error) {\n      errorApi.post(error);\n    }\n  }, [error, errorApi]);\n  const githubHost = hostname || \"github.com\";\n  const routeLink = useRouteRef(buildRouteRef);\n  if (error) {\n    return /* @__PURE__ */ jsx(ErrorPanel, { title: error.message, error });\n  }\n  return /* @__PURE__ */ jsx(\n    InfoCard,\n    {\n      title: \"Recent Workflow Runs\",\n      subheader: branch ? `Branch: ${branch}` : \"All Branches\",\n      noPadding: true,\n      variant,\n      children: !runs.length ? /* @__PURE__ */ jsxs(\"div\", { style: { textAlign: \"center\" }, children: [\n        /* @__PURE__ */ jsx(Typography, { variant: \"body1\", children: \"This component has GitHub Actions enabled, but no workflows were found.\" }),\n        /* @__PURE__ */ jsx(Typography, { variant: \"body2\", children: /* @__PURE__ */ jsx(Link, { to: `https://${githubHost}/${owner}/${repo}/actions/new`, children: \"Create a new workflow\" }) })\n      ] }) : /* @__PURE__ */ jsx(\n        Table,\n        {\n          isLoading: loading,\n          options: {\n            search: false,\n            paging: false,\n            padding: dense ? \"dense\" : \"default\",\n            toolbar: false\n          },\n          columns: [\n            {\n              title: \"Commit Message\",\n              field: \"message\",\n              render: (data) => /* @__PURE__ */ jsx(Link, { component: Link$1, to: routeLink({ id: data.id }), children: firstLine(data.message ?? \"\") })\n            },\n            { title: \"Branch\", field: \"source.branchName\" },\n            {\n              title: \"Status\",\n              field: \"status\",\n              render: (p) => /* @__PURE__ */ jsx(Box, { display: \"flex\", children: /* @__PURE__ */ jsx(WorkflowRunStatus, { ...p }) })\n            }\n          ],\n          data: runs\n        }\n      )\n    }\n  );\n};\n\nexport { RecentWorkflowRunsCard };\n//# sourceMappingURL=RecentWorkflowRunsCard.esm.js.map\n"],"names":["useStyles","makeStyles","WidgetContent","props","error","loading","lastRun","branch","classes","Typography","LinearProgress","Box","LatestWorkflowRunCard","variant","entity","errorApi","hostname","owner","repo","runs","LatestWorkflowsForBranchCard","firstLine","message","RecentWorkflowRunsCard","dense","limit","githubHost","routeLink","data","p"],"sourceRoot":""}